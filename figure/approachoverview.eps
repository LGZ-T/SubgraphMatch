%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ADP768A.tmp.pdf
%%Creator: Adobe Acrobat 20.6.0
%%For: LGZ
%%CreationDate: 2021/9/27, 17:45:37
%%BoundingBox: 0 0 1138 274
%%HiResBoundingBox: 0 0 1138 274
%%CropBox: 0 0 1138 274
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: 
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1003 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2021-09-27T17:43:30+08:00"
   xmp:CreatorTool="Unknown"
   xmp:ModifyDate="2021-09-27T17:43:30+08:00"
   pdf:Producer="Acrobat Distiller 20.0 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:7ab5a07e-b4d0-4d74-a35c-dde91add9e8e"
   xmpMM:InstanceID="uuid:a3bfb2bf-1cfb-455c-8006-b22331fcde8c">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Unknown</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Unknown</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceGray] /CSA add_res
/1 
[/DeviceRGB] /CSA add_res
/0 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 168 
/Lookup <~
s8W,sr;>0uf3)6Z+sJ33!<F/[**-*@]=Y](e'k+gUrUNrO,o>*"U+l+!33'!T:_aGS=Gh.PWh8pb0%m!
o^kdL9*57udF$>\)]N$e>gUjE?=$t7qYH),MMR(EaiVYLG^),)2C'Onp\4E"DJhp57YcbSZ*CRM_83k"
^+h>s77BZ3m-IPF;!7$)!WiF$;H!>dq$IH9.4H_)iSg>uSW/Vg_o'B,C20ZEVc-MmWMuk^Q'Lq2nhMsU
JqATVXfV^/"@u'SF)uD0?XM=4e3ZJg,9nF$6q$(qj.W0?GB\9+q"P.%#q@DS?!Ub8rr*oY*<ufSnF5p]
BkaE?V9$a!:JXc;JUso(XPVgj%LrtkF`fu962UQV3B9)R0JIp'I3p9fhr!<k<E05-#0kE;R$a7nK7gS>
[I3JNN/W^/BP?Dbi^ug8NfK-!<)aPG'FP9V'bqHB2`GPhCtRCm/1`>L;,N70Ml*AK\[f7S>$COho,f%r
g"G%30/#RU5Z_#grVc]Gf%(EF&[J^JlK[XO(`;Z-m70Z:G'8&kk2n6I/K,NGCMR\s&.f6Y%$Hd:h;-ns
\@AK9W7',B#RC^O^qea\glmqcOH>Q8AS'WNgEe-l@q0"03]aLLYWY-4lg*lO^V:m6+=ANa',)#~>
>>
/CSD add_res
/1 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
s8W+AF`dZa!2l`m5s[d;!<MQRll[DnT:_aUWiD5FP*OMr!1*Y"_>dTIs/=]Pg"G$s)B+NlMed*D&.fD)
JqC,,XXu+VG'8$Y.Oki8%+j+_*#oscmHsfJqa<h?n*f^uKS1'T'tq;o`l?$Ie'fNd,74bbo^qeOq=t='
#r"%e"pP;'oCLM_eQlHdh;-m`:f+[3\>Z@)daHPL#RCJ5!l2Uep@e3DPER(1+#c,;io8t&Z*Ds6fX%oj
hr!<k<E6rS_fKm?bfn9f1c4^kn0TJ/0ekE<gt]!4XCu9\_83terr/"@OC`!7>[1NbJUuS1gEe-l,U=Y0
U7s.g/'5oT#6tK;>$C%Lje8BAR$a7nK7gS>[9-O5Ocbc#9hc97'B%g,@q0".3&k&D=a>:<g=k8l]".tG
"7l$R8kM^9NfJgIKtFt/lK[Xq3]d-6qP9p_naZ,`'GS3m]\_N%$O[?'O,l^u70E_rLPLYhYct=7YDnO$
/hSbmChuX589fB(p\4D2.4P5orQ<:*USFS8/1aXq;5U4fq"XWp\[ajd4\SOC6:+"G?XN-blgF3/4$,Os
p%:R85Z_#g?=$r292!%7^XUc_%Ls!3kNA.sQ:XY>"U,'RGBXW2&^f"RZEgbH%hBKo(ag[Y+sJ5^f%+5:
?l^7.Y-+ot7n;_(k5>/TM2@("A7R\\3PN5AFEDWC`5H8"AsJXH()@[+EcN3B*c5b2+X&"HDJh*\02keJ
7Rfj25!GR0Spu6><`W8Aa2a^?S:H-?Pa%CO)]Rl!jDf0ZcHa_^d*RZ-MMR(E2E!Hm<)can;W6TnSXl<d
C22)@c_-r(1,:V2H?t!fI:?Ypj5]/p:/5M;C$=dEaN2Fu:JWi*2<jAiH[C+J[^KUQ@7*CL['[2fI!fR>
B+5:ZR[T\7S"$7NV/UBm5<h@g1G]g`(HafBQ^=&>X/d*U)8a8-bKJ'W-n'"PD\<ZqL5(GNR@0"mN2`eU
~>
>>
/CSD add_res
/2 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 249 
/Lookup <~
s8W+ae,KE6s(]CM=1S@0g]'/i2?3^W,U=Z0p\/QCDFR)bLPLYiZ*F0%qOjLS.4H\m-757QSGE!V_83t%
^:lcp4u"cH77BWG!<MQRm.L&EOcbbI*Zd'l19.@SrVc[k:f-?<k5k\d;GpC"$4?4hmXp.E'GM6H5X;lj
\`)N+SXl=4O,o9[NPiZOC2.MIkig13b4>,ojlPTGFE@p"$r0Pma2c6JdF"5EPlh*jJqATVXf]@Q^Hk.O
&.fBl)]NI(B\V:rAS#EX#6tA7"C,2:eC<"Cq"SoOF2c,;?XI/,6:1),m7g;LKS5#)H?oi&#^q,Lrr2oB
cH]Hk<o;flNfK.5]tNIdj.W0?GB\8'T:ZDr#q@DS3]];U0JMGCi"m1G;,L1#%M!`.GaFb`84Z8r,9n3L
*UrRfBk_9b>$CC`n(61C%1NcR['Y4.Hp9h[-RU:_aN..Q:P"(JXK8MJc-<)]V%XLUnaZ.qcd2=Yp0qK?
F`hi)Vl(CM)>sF1hVR,2aiR4M9]kL"o^qc+.kB&rdUm*'gt^[b<E1\*0AYI?=BJ\Pd*S/IR'j?0N/W]+
%hD9)8jl'8io8s;EH+*'4T#$Q$O[=^*#uDq[WZh;QBmg[+X&Hj/uGMC2`E[3Ci$\o\tl-t/M/P*/1c^;
M`EdXZa6u"4$/=WMY$H2+!2TXg"F6Z_M3f"8P)Jc&J=?plW7.h"U,(8ZEe+UB4,+T?!U`+7n4aI,(G)l
2)R87bKCeB)Ja,(H[C)S'c"6g\-<-AW2QY5Df:i'PE:lf91qoV;cBEbU,Y+l=]nn>]=ZP@e!-)]@:<SN
?=&GDLudXX&eYg*-n'e'KuCpJlK[ZS`l8c0(;.;m<)ch6D/J"\g)qL\l07H$R[T_8S%uhTP*1tF(`5V-
6^a@1,pak]bfhn#1nL;1J:N1&f\!1&WFKFJA7T4kEcS@eYL_:U4Zts4Ycn~>
>>
/CSD add_res
/3 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 66 
/Lookup <~
s8W,cm-F`R!<<*"b0%m*rV\/o.ANZ5j7E9NQN%qus4Q)Y)B'M[5s^EeMk?W6CMR\s&.jGFJuu/W/M/Pt
G'5>b.LZ^of@SWo`l?KVdnEG/6:+$6q"U&:P@%[(h;-m`:f&i"0Y"X&"pP:1W2S7seWQ)YZ*CS2qto$u
fX%ojmdBKg,U>H546l+rKS5$Op%@+qgoRTY?!U`LBP>5u_>aH5o^qd;OH=$bAR&JFJUrC,gY9ilaTi%U
>$>+kjlN52U&~>
>>
/CSD add_res
/4 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 0 
/Lookup <~
s8W*~>
>>
/CSD add_res
/5 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 44 
/Lookup <~
s8W+ae,KE6s(]CM=1S@0g]*=qNs,[j!!!#!WiD\`T)ernS=H+nbfj$c<!!+&$k*PbEcU7%jHPmn5!D0Q
b0'AKoLhhM!s8YQdF%mir#6Ro>[1OJ^:m$)72$=JJ:N1;mHr9IcsC$bqYL&GMMd4GLrmc\G^+K4rr0+)
Y;S9sNfK,~>
>>
/CSD add_res
/6 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 168 
/Lookup <~
s8W,Zj5Zi,U$(V%GB\62!!&X`TD83V#mgnf.Or*D]GMJ&bKJ)hoD\fVru@a42E!H=,UE-YpMOkd7Rfk&
LPN.>Z2Xb%*??.*#7'bfnA2rWBk_8b"U/FIAE;h4^:q<F5!C\U0h"N"!<E5fm-Mg7aA5T-JUrBRXK3*M
'QS57iSi`l:f%2p!`Dooq>'gn$4842.<TcUVl-FY5sar,map(Bcd0r'lg(+4SWAhmNK&q8_o$5(C@q/j
,9nEe0JJcWQ1FM:1,:Te!s=.,Juu/W`5KSZ5X:!UKZD-Rn*f`Cr;>R6ih`KJD/F,4+<YoRGi.E9<E3%?
F)t\q?e!TT6:+#if%-4UR"L$D[C*DUBP9e%6qU'DNfK.sqtga/$QL-+-RU989MCV4P4eM@2`E\;aiS@8
Ce.)f3&il-%LtWb4VJJBR@0Ho/1aXq;2^?jVP^6$\[d*8HuX.G>$>,$oCF%G+5,?#]tM+6L5(eOOB5Lb
rVc[@,pa9@'aP'Nf\"gg&J<F<dB^'`?!Ub'mHmD67s9'!+sJ5nk2n6I/[2I`&.fBk)B*C,CCCU[`l?$I
e'm./h70u)"pP:1W2S7se[)Tggt^\KPETQhAR&JFgY:KEjlN52U3V$0g=k8l]"6bThQO,d/hSa~>
>>
/CSD add_res
/7 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 47 
/Lookup <~
s8W+ae,KE6s(]CM=1S@0g]+mt]1,7Z,pakBZ*F9+rN**%1c.#h!!#2H55P-PSt;N$-RXCnJ+WC*O,o>A
*#q"#3jlB'mHs:kJ:J:H'1bYb_83tcr;>X:jDf0Z$O[=D!WlD'<mK"9f@SVW=]lpm+oq]Fe'ldAUnl&O
a4]/!@q0!Q"pSUKAD5bk~>
>>
/CSD add_res
/8 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 140 
/Lookup <~
s8W*W2b=]!.jQH%rVc\JKoh%EP!hc@5XA<Gr;;hFT?GF)R$j\NY-m<]rrAAb*23DL_T6"iD,s_M.kEn#
(bOh0k)>:d2)\!bNgQlJZ[[La:/G=]5>\;XY\@isiSiiF.6OrD\f)PBgtgo>f%QU`V&UO3USP!Df\@2X
/3cBt^qdre;dr*_<^oV^DfC-aioT+Vj+;oD/MBF3+>eLqM7gO>XKAlt6rgt9`:ip!qYL'OkNV0nlM1/M
f@SVW=]lpm+oq]F*#or!<`ZiE]@56XUnjg,a2a7%Ns,[j!!!#!WiD\`T:DFAPa%Cr5!I-3b4P>u91qn[
!s?rud2O#D>[1O\d*Q**?AaVtLkpl/aiSdPGW%H<,U=Z0p\/QCDFR)bLPLYiZ*D-]_7mXt0ekCO77HS0
lqgMTkND"0!Wl7t;Yg.a$47+h.4O67iLQO1NK&q8_o$5(CB"53bKJ(oQ'Lq2nhMsUJqATVXf]O[`!6MP
5X7SfKS8g_n)E?dV5:#*D/CC<+EMUF?XI0ieC6fO6G0tDf%/C~>
>>
/CSD add_res
/9 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 51 
/Lookup <~
s8W,#XK2C%!%olV/M/PX>$BtXrrAAb*23DojlHOF!YlFb+sJ4ZI=4[Y8^Yr5qYL$p#mn_qafr"RL5(Gq
]Y$3`3<&pV5!D.D',03Xh>R<N$k*R"gtXA/.e3'!<`W7kS=IU=`XrdpX/i;`k2t7Get&A&5<h@>$4;`N
N7ce87Rfj977G;=aEVrS0JG1oBP<g%RENds~>
>>
/CSD add_res
/10 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 48 
/Lookup <~
s8W,#XK2C%!%olV/M/PX>$C%LjT5Jb'bqH-+sMG`I7["%dF$A<qYCL)$-C<2Yct?dL5*@R]Jql1rr2m\
5!BVn'A_L#rVc['$k1qHgaXd'naZ-M<`Y`\SArRg&J5VUX/kCFk18,7SXl<95<fJ^$B0q&f\"hG7Rfg8
7EEQkG^+He0JI0RBUP9VbKJ'~>
>>
/CSD add_res
/11 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 196 
/Lookup <~
s8W-!qYL5UJc@2's!@aG0b45_S,`$Is*%lN5Tg$F]__L$\$rhsJ:LX"<@]RM&eYfW!!!-)"</:!1c.%*
Ci"udMUpA05X7S9='#V3#Q=W"8kM]Q;,IK#"[kaHI!g<TBP?GtrrAAb*23E4`4Gt5*rgV"s7>g]W1!Z9
#QL0Hs8;fpf?sUp1B1iTs6&GB^pX2))ukD%s7GpAiSfr_P'M=u?smA584ZQR:haWXIXZaIXK;*fosM38
m-O(_GBXW2&^f"R!s8Y2ZEb#Q&BDi3e^`1W$4?:lnGdoLs2DVMk2QDL7fQFHs4l3*qtpDYKE!G+s"Y,b
X.B:]nGdcCs$@n/`kAml\;Q9'f@SV/0els>?2jj&mHs:27n7`GFs8+S!WiGck2uI6pan'L/1`@Mr;7WY
*uPq6S"#oI5p61S!WRU^s/MUh/-u9FMZ;Mbs.58NFBni;.fUn!s*A2TUm:uDjo<TEs-A?<CJt0d%0'Ek
s+5+fXe5XdoYe\dX/i:SKS6_>[*6b<p@e45g"@8^)F6YTT:_`kCMSNRJuu/W.OlnV$k+dB0/,(6-n$K^
Df>Z5G5jZCs(4t)81FQd!rkV4s)D3Agt2T"p&E=Ws4,Epq>('[mf/o?s0JU&rVb[4i5j!\d*U/(l07$[
h$+&fW2QX`77BmD9J\I\:JXddf$FAIC]@O#s1l)ClfeADPQ,l9s&V8]ahZ]eglmqc_83t[o^n6,OC`!7
>[1NbJUuS1gG_&M6UO3~>
>>
/CSD add_res
/12 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 76 
/Lookup <~
s8W+8Chs(O!'ie7='&H.#7(5+rCT[S;,L0o"U.:^7!sB0BP;(e[C,Afm!!Yt&J5W&dEr$u"1#5<&.fDn
a2c`\eHuWjnF5p%0els>?2jj&mHs:27n7`GFs8+S!WiGck2uI6pan'L/1`@Mr;7WY*uPq6S"#o#g"@8^
)F6YTMi3LcT:]n7CP%.iXf\]T.Oki8%+j+_0/"t40JFn'-uX$Bh;-m`:f+[3\-<-AW2QX`77BmD9J\I\
:JXdAgt]!4XHSj3_83t[o^n6,OC`!7>[1NbJUuS1gG_&M6UO3~>
>>
/CSD add_res
/13 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 5 
/Lookup <~
s8W+ae,KE6s(]CM=1S@0g]%~>
>>
/CSD add_res
/14 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 201 
/Lookup <~
s8W,XiSah>!WW3#SXl=4O,o9[NPiZOC2.KV91q<,3m5^iQ'IUA$4?@pnhMsU!s8YgkN@GKJuu/WnF5oV
%1Pj!87lIGH?smpMMdLWOHGZfWMuk<F)t\q?e!TT7Rfj66:(\R!UT1>a2c6rq>'(2j.W0?GB\8'T:boR
p^%65.Olo45<o/HrZ*""#6tLM_80i"BbqR%jQ,CCaN..Q:P"(JXK8Kp8P'9t$UdBN<`W71@U`hW@fuo;
_SX04F`jU[Va3U7+<Vf,WiD5FOs;1ro^qc00JE\8#4qHXe^`1Y$k-EI?/OPs<E3&Cbfhn#1aXOr0ekEV
p@al@R"L$D[C*F(jlKTH=A;La',)&;i8A9^B\1kfio8ri8kP,(NeN1@]=YZh'GUHAqaEqBLPLXD2`Jk#
a_Yd0G^+K-p\-*c.K05D/1`>L;,N70Ml*AK\[f7rH$RlfdoopY+!2TXg"?W:#XCX?='&I0?=!d="VD=Y
dF$@IZEauO&,Q/!mHs:27n7`GFs8+Sk2teX/M6nur/$8e)B'N0CMOIm&18hQFEDW\h;(n(:q4$FW2QZ5
`5LHdglmqcAS#FX>[6%<gD1P?*#or=EcN3B*c5b2+X&"pQBlE+DD*Xr;c?Ut=]qPrUn!sFPa%Cr5!I-3
ar;9=d*U-qLkmrI2C'OnZ*CRJ^:mKC;U<\8f%/D84["4AIA<R4YHP.nkial]2<jAiEH-!,[^JOj6YC%E
St;PHp%<9CE8KI.Za7!N]Y$$V1G1:4X/i9=)&W~>
>>
/CSD add_res
/15 
<<
/CSA /1 get_csa_by_name
/MappedCSA null
/HiVal 196 
/Lookup <~
s8W,sr;>0uf3)6Z+sJ33!<F/[**-*@]=Y](e'k+gUrUNrO,o>*"U+l+!33'!T:_aGS=Gh.PWh8pb0%m!
o^kdL9*57udF$>\)]N$e>gUjE?=$t7qYH),MMR(EaiVYLG^),)2C'Onp\4E"DJhp57YcbSZ*CS6o'jK3
_7mXt0ekCO77HS0m/P2C:f(!OkN;mJ!`Dooq>'gn$4842.K?!"iSiadSXkb"NPiZOC2.MIkihU.o)Ef:
Q'IUi1,=H5Juu/W^V@NL5sZ%n&85`jjlPV(8Lee&F'i9]eC;u76:1),m7g;L"9\j\KS4YtH3ac^I=6PC
rr2pb,NIhETqS0(GB`iWp^%65.Olo/3]\rK0]:mI(DdnfD,_Mr*<ufSnF5p]Bk^aS>4:qK%1Nc/Ocf[2
L<.HW:JXc;JUso(XNf#7V5:"%',0p+nc-J9F`hi)Vl(CM);a6,K7egVmHPo@,:b8phr!<k<E1\*0AYI?
R$a8K[C(sPN1ci:6psH&io3R&8replEH,uGI!cVB'`7e)$O[?N[^L@&G$%jK2`E[3ChuX58@lCD/1`>L
;,N70Ml*AK\[f723B?^&o,f%rg"G&q_SV%^L-S!h='&K%rV[<?&[J^J/M/P[?!Trj8*8srIt)r*2)Q9j
)Ja,($k*PkH[E94\-<-AW2QY5Df=FdglmqcOH>Q8AS'WNgJ_$L['[1N%hC9F/n&0sQBmi_cd-6:B>qj/
]tM+cZa1,O%QHF-KnY3~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -274 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 274 li
1138 274 li
1138 0 li
cp
clp
.06 274 mo
1138 274 li
1138 .0400085 li
.06 .0400085 li
cp
false sop
1 gry
f
.06 274 mo
1138 274 li
1138 .0400085 li
.06 .0400085 li
cp
1 1 1 rgb
f
.6 setflat
3 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
1043.61 1.80399 mo
1134.52 1.80399 li
1134.52 103.554 li
1043.61 103.554 li
cp
2.001 3.27701 mo
214.463 3.27701 li
214.463 105.027 li
2.001 105.027 li
cp
0 .59 1 rgb
@
.2 setflat
181.143 87.464 mo
183.096 89.417 183.096 92.582 181.143 94.535 cv
179.19 96.488 176.025 96.488 174.072 94.535 cv
172.119 92.582 172.119 89.417 174.072 87.464 cv
176.025 85.511 179.19 85.511 181.143 87.464 cv
0 0 0 rgb
f
.6 setflat
1 lw
181.143 87.464 mo
183.096 89.417 183.096 92.583 181.143 94.535 cv
179.19 96.488 176.025 96.488 174.072 94.535 cv
172.119 92.583 172.119 89.417 174.072 87.464 cv
176.025 85.511 179.19 85.511 181.143 87.464 cv
.5 .5 .5 rgb
@
37.308 86 mo
37.308 55 li
1 .149 0 rgb
@
.2 setflat
40.843 46.464 mo
42.796 48.417 42.796 51.582 40.843 53.535 cv
38.89 55.488 35.725 55.488 33.772 53.535 cv
31.819 51.582 31.819 48.417 33.772 46.464 cv
35.725 44.511 38.89 44.511 40.843 46.464 cv
f
.6 setflat
40.843 46.465 mo
42.796 48.418 42.796 51.584 40.843 53.536 cv
38.89 55.489 35.725 55.489 33.772 53.536 cv
31.819 51.584 31.819 48.418 33.772 46.465 cv
35.725 44.512 38.89 44.512 40.843 46.465 cv
@
146.298 67.602 mo
174.122 52.398 li
0 0 0 rgb
@
.063 .065 .128 rgb
%ADOBeginSubsetFont: GDAAAA+Helvetica-Bold Initial
ct_T42Dict begin
-1.016 -0.48 1.434 1.156
 256 array 0 1 255 {1 index exch /.notdef put} for  /GDAAAA+Helvetica-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742071762d4d000000bc000003a46670
676dd9e8e27a0000046000000d0a676c79669cd478a40000189800001f84
68656164dd601b880000116c000000366868656109860732000011a40000
0024686d7478c5a00f08000011c8000000b06c6f6361abbea40600001278
0000005a6d61787008aa0df3000012d4000000206e616d65326574990000
12f400000151707265706aade0ce000014480000044e6764697200000000
000000000000000005c0001105c2002d0597001d0442001d0000ffda0000
ffdb0000ffdafe53ffef05d0000afffdffed03340000012200000122dffb
011400af000700b7007e000400d200aa0109002300ed013200d9011d012a
00d800fe00db00e2001a008b00a0001a004500e801f6000900e901280132
00360082009e009fff700070003f003f00e801050015003800e9ff7bffc8
fff90042008a00c401070113011dffb9002f00870087009a009c010c0262
ffb10018004c00770080008200c900daffb2ffea001a003600e50111012f
043bffdd00020005001a0039008900aa00b701210123012a015bffe50002
00180023005c00aaff4dff76ffb2ffef001a002f004e007b008a00e1011f
0126012b019a01de03edff80ff8e0007001c004e005500630063006d0081
0098009c00ad011f01260162041c051500390044004b0063008e00cc00e8
00f2010001290142017802d503ea03f0043b049affc400050055005c0060
009f0103011d012401550164017001ad01b401c301f602370261033903d5
047004a100020055008800a100bd00c700d300dd00eb00ed00fa00fd0104
012b013e014f017b019d01ad01e20233025d027d028c02da02ef033103de
0407048b058505bbff04ffd5fffa0007001e002a003b0047005100580065
00650066006e0075007f00840107009700b100c300cc00df00df010a0110
012f013101470154015b016b0179009101a401ba01dc01e401e601e901f6
0213021f0223022f0276027d0282028902ad02b202b902ed03110374037d
03c003de03f60415045d04c004c004df052d0574061c064b0751fe94fedf
ff2dff90ff9affea0016001600240029002d003e0104006d006d00840087
0089008e009c00a400ab00ae00b200b2fffb013900c400d100df00e100ef
00f70121011c011c012101320138015001510154016c016d017f019801a4
01aa01b601ba01bb01bb00d701d701fb01fb01fe00190209022d025b0261
02790279029a009802d302da02ef030c03210328032d034b0353fff103ad
03b103f20425045a0471047b048a0498049f051c053d0557055a05700595
05b605cb05d605ef05f4061d068706a406b406d307080734079807fe0122
01320120012500b400be0082009603700132012400430184011d015600cc
010500ed00c500fb00f900c000a7011d00fe035500880026ffa100b8ff88
00dd00bd00b5037c003c00910293024aff3f03a803090132fff700820030
002a002a002a002a002a002a002a00fe0098012a011f013400000029fe50
000e0442002305c2002d402a292827262524232221201f1e1d1c1b1a1918
17161514131211100f0e0d0c0b0a090807060504030201002c4523466020
b02660b004262348482d2c452346236120b02661b004262348482d2c4523
4660b0206120b04660b004262348482d2c4523462361b0206020b02661b0
2061b004262348482d2c45234660b0406120b06660b004262348482d2c45
23462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c
20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d
44235920b09051582320b00d44235921212d2c20204518684420b0016020
45b04676688a4560442d2c01b9400000000a2d2c00b9000040000b2d2c20
45b00043617d6818b0004360442d2c45b01a234445b01923442d2c2045b0
0325456164b050515845441b2121592d2cb00143632362b0002342b00f2b
2d2c2045b0004360442d2c20b0032552582359212d2c69b04061b0008b0c
6423648bb8400062600c642364615c58b0036159b002602d2c45b0112bb0
172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458cb017
2344b0177ae5182d2cb002254661658a46b040608b482d2cb0022546608a
46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545b0
19234445b01a23444565234520b00325606a20b009234223688a6a606120
b0005058b21a401a4523604459b0005258b219401945236044592d2cb918
7e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b2d2c
b92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c0120b0
03252349b04060b0206320b000525823b002253823b002256538008a6338
1b212121212159012d2c456920b00943b0022660b00325b005254961b080
5358b21940194523616844b21a401a4523606a44b209191a456523456042
59b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c764520b00325452361
6818236860442d2c7645b00325452361682318456860442d2c7645b00325
45616823452361442db8002a2c4bb800095058b101018e59b801ff85b800
441db9000900035f5e2db8002b2c2020456944b001602db8002c2cb8002b
2a212db8002d2c2046b003254652582359208a208a49648a204620686164
b004254620686164525823658a592f20b00053586920b000545821b04059
1b6920b000545821b0406559593a2db8002e2c2046b00425465258238a59
2046206a6164b0042546206a61645258238a592ffd2db8002f2c4b20b003
2650585158b080441bb04044591b21212045b0c05058b0c0441b2159592d
b800302c2020456944b001602020457d691844b001602db800312cb80030
2a2db800322c4b20b003265358b0801bb040598a8a20b0032653582321b0
c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003265358
2321b801408a8a1b8a235920b80003265358b0032545b8018050582321b8
018023211bb003254523212321591b2159442db800332c4b535845441b21
21592db800342c4bb800095058b101018e59b801ff85b800441db9000900
035f5e2db800352c2020456944b001602db800362cb800352a212db80037
2c2046b003254652582359208a208a49648a204620686164b00425462068
6164525823658a592f20b00053586920b000545821b040591b6920b00054
5821b0406559593a2db800382c2046b00425465258238a592046206a6164
b0042546206a61645258238a592ffd2db800392c4b20b0032650585158b0
80441bb04044591b21212045b0c05058b0c0441b2159592db8003a2c2020
456944b001602020457d691844b001602db8003b2cb8003a2a2db8003c2c
4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a23
5920b0032653582321b801008a8a1b8a235920b0032653582321b801408a
8a1b8a235920b80003265358b0032545b8018050582321b8018023211bb0
03254523212321591b2159442db8003d2c4b535845441b2121592db8003e
2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db800
3f2c2020456944b001602db800402cb8003f2a212db800412c2046b00325
4652582359208a208a49648a204620686164b00425462068616452582365
8a592f20b00053586920b000545821b040591b6920b000545821b0406559
593a2db800422c2046b00425465258238a592046206a6164b0042546206a
61645258238a592ffd2db800432c4b20b0032650585158b080441bb04044
591b21212045b0c05058b0c0441b2159592db800442c2020456944b00160
2020457d691844b001602db800452cb800442a2db800462c4b20b0032653
58b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653
582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920
b80003265358b0032545b8018050582321b8018023211bb0032545232123
21591b2159442db800472c4b535845441b2121592db800482c4bb8000950
58b101018e59b801ff85b800441db9000900035f5e2db800492c20204569
44b001602db8004a2cb800492a212db8004b2c2046b00325465258235920
8a208a49648a204620686164b004254620686164525823658a592f20b000
53586920b000545821b040591b6920b000545821b0406559593a2db8004c
2c2046b00425465258238a592046206a6164b0042546206a61645258238a
592ffd2db8004d2c4b20b0032650585158b080441bb04044591b21212045
b0c05058b0c0441b2159592db8004e2c2020456944b001602020457d6918
44b001602db8004f2cb8004e2a2db800502c4b20b003265358b0801bb040
598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db800512c4b535845441b2121592db800522c4bb800095058b101018e59
b801ff85b800441db9000900035f5e2db800532c2020456944b001602db8
00542cb800532a212db800552c2046b003254652582359208a208a49648a
204620686164b004254620686164525823658a592f20b00053586920b000
545821b040591b6920b000545821b0406559593a2db800562c2046b00425
465258238a592046206a6164b0042546206a61645258238a592ffd2db800
572c4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0
441b2159592db800582c2020456944b001602020457d691844b001602db8
00592cb800582a2db8005a2c4b20b003265358b0401bb000598a8a20b003
2653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a2359
20b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a
1b8a235920b80003265358b0032545b8018050582321b8018023211bb003
254523212321591b2159442db8005b2c4b535845441b2121592db8005c2c
4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8005d
2c2020456944b001602db8005e2cb8005d2a212db8005f2c2046b0032546
52582359208a208a49648a204620686164b004254620686164525823658a
592f20b00053586920b000545821b040591b6920b000545821b040655959
3a2db800602c2046b00425465258238a592046206a6164b0042546206a61
645258238a592ffd2db800612c4b20b0032650585158b080441bb0404459
1b21212045b0c05058b0c0441b2159592db800622c2020456944b0016020
20457d691844b001602db800632cb800622a2db800642c4b20b003265358
b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b003265358
2321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0
032653582321b801408a8a1b8a235920b80003265358b0032545b8018050
582321b8018023211bb003254523212321591b2159442db800652c4b5358
45441b2121592db800662c4bb800095058b101018e59b801ff85b800441d
b9000900035f5e2db800672c2020456944b001602db800682cb800672a21
2db800692c2046b003254652582359208a208a49648a204620686164b004
254620686164525823658a592f20b00053586920b000545821b040591b69
20b000545821b0406559593a2db8006a2c2046b00425465258238a592046
206a6164b0042546206a61645258238a592ffd2db8006b2c4b20b0032650
585158b080441bb04044591b21212045b0c05058b0c0441b2159592db800
6c2c2020456944b001602020457d691844b001602db8006d2cb8006c2a2d
b8006e2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a
8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8006f2c4b535845441b2121592d000000010000000100007b1c
5dca5f0f3cf50011080000000000a2272e8000000000d8b9a29df7dcfc27
0b7e0946000000090001000000000000000100000629fe2900000c01f7dc
fcdb0b7e00010000000000000000000000000000002c05c7009a02390000
0239007602aa002f02390080047300400473008e04730040047300360473
00360473003605c7005c04e3009c06390055055600a305c700a305560055
04e3002105c7009c0473003b04e3007b0473004704e3003f0473002f02aa
001504e3004204e3008702390089047300820239008b071d008004e30087
04e3004204e3007d04e3003c031d00820473004202aa001504e3007d0473
001a0639000e0473001a0473001506060066000000340034006c008a00ac
0116014a01c6024a02b00316038803ba043c048204f2059205c2060606aa
0702077007ca085e08c4093e098809bc0a520a720b1a0b6a0bc00c1e0c7a
0cc40d4a0d940de80e4c0e8a0f2a0fc20fc2000000010000002c006a0009
006c00080002001000100070000007e80d0a000400010000000800660001
000000000003001500000001000000000004001500150001000000000006
0015002a00030001040900010020003f0003000104090002000e005f0003
000104090003002a006d0003000104090004002a00970003000104090006
002a00c14443484f4d492b48656c7665746963612d426f6c644443484f4d
492b48656c7665746963612d426f6c644443484f4d492b48656c76657469
63612d426f6c64004400430048004f004d0049002b00480065006c007600
6500740069006300610052006500670075006c0061007200440043004800
4f004d0049002b00480065006c007600650074006900630061002d004200
6f006c0064004400430048004f004d0049002b00480065006c0076006500
74006900630061002d0042006f006c0064004400430048004f004d004900
2b00480065006c007600650074006900630061002d0042006f006c006400
0000b800662b01ba000401c600682b01bf01c80028001f001a0013000b00
00006e2bbf01c90025001f001a0013000b0000006e2b00bf01c5002d0025
001a0013000b0000006e2bbf01c6004b003d0030002200150000006e2bbf
01c70026001f001a0013000b0000006e2b00ba01ca0004006d2bb801c420
457d691844b8005c2bb800522bb800482bb8003e2bb800342bb8002a2bb1
0840ba019000145df44009011f04000b1fd819eebe012e000d00e6012e00
0d00b0012e400c0d000963833c1f63838348294109014b00370401001f01
4500240401001f0144b224ab1fb8013eb224231fb8013db224231fb80102
b2371d1fb80100400937241ffd37621ffc37b80801401b1ff824931ff724
931ff6243f1ff524311fd1371d1fd037471fcd41b80801b21fcb2ab80201
b21fca24b80401400f1fc824811fb537291fb4373b1fb227b80401b21fb1
41b80401b61fa437811fa384b80401b21fa22ab80401b21fa124b8019ab2
1fa024b8019ab61f9f243f1f9683b80401b21f9527b80401b21f8227b804
01b21f7084b80801b21f6fb3b80801b21f6eb3b802abb61f6d24261f6224
b80101400b1f5d246c1f5c24391f5441b80125b21f4d27b80401b61f4c27
cd1f4b41b80401b21f4024b8019ab21f3683b80401b21f3524b80201b21f
3224b8019ab61f2c24bb1f2884b80801b21f2241b8040140131f20244c1f
1d24261f2ca0961f2c245e1f412ab801a8b748282a2448279636b801f4b2
1f4d27b801f4b21f9527b801f4b21f6e27b801f4b21f6327bd01a7004700
29015a00250199b348296fb3b80190b21f83b3b8019ab348283725b803e8
40121fb327482784274827362748272527482755b80154402c0797076407
550733072b072907260721071e071b071408120810080e080c080a080808
060804080208000814b8ffe0402b00000100140610000001000604000001
000410000001001002000001000200000001000002010802004a00b80600
8516763f183f123e113946443e113946443e113946443e113946443e1139
4660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b
2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b65422b2b2b4b5279b35279eb56456523456023456560234560b0
8b766818b080622020b1eb794565234520b003266062636820b003266165
b079236544b0eb234420b152564565234520b003266062636820b0032661
65b056236544b0522344b10056455458b156406544b25240524523614459
b35045484e456523456023456560234560b089766818b080622020b14845
4565234520b003266062636820b003266165b045236544b048234420b150
4e4565234520b003266062636820b003266165b04e236544b0502344b100
4e455458b14e406544b250405045236144592b2b45695342000000>
[8069 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> GDAAAA+Helvetica-Bold AddT42Char 
1 3084 19 <0003003bffde0438045f000e0039003a008f404f3b0235367901890104d8
1e0126f3e62ae7230e0d05020005131a2b24232204262e262e2a0d050200
041b0b221b162c3a1f072a0a0b2c320b3a134d004d2e3a352a3e261a3c1a
4d1b2d084d35193b3cbc01190021004801ae00182b2b4ef44dedf4ed4e10
f64de41139cde5e52f003fed3f3f3cfdcd39111217391239390111121739
111217392b3130015d005d010e010f010607061514163332363727363736
35342623220706072136373621321716151114171e011715212e01270607
0623222635343736371302de1b3730405a2742513a5c9b03ad4f223d5d5a
652a1e0afeed0947710113b38b8b02031c1cfeca0d0a033b4d5c7494c19b
55a57002121115090c1017275249416c8fef0a0f1a37433332253f8f5c90
4747c5fe0c344a38280d2a213a25402d35a99bc95a311501d4000000>GDAAAA+Helvetica-Bold AddT42Char 
1 3988 23 <0003002fffdc043a045f00060021002200ab4049460887149701990a0406
0109050610051a4b05461049208601850f871f0a03160317131613174808
4c164c17491a5c165c175a1adc01db04e91de720f720104a014610880583
100402b8019540334f0e5f0e6f0e030e0e1b062422210717122c1b0b1603
02220336177b221e600c800c020c1a24021f0e951e1923249821484e182b
2b4ef44dfde44e10f65d4d1139e4ed2f111239003fedcd3f3ced12392f5d
fd313000715d01715d000607212e01233616171617160721161716333237
3637210607062322001110003b0101d06d0e01bb077b5b88da4740130b02
fd1606613b5358371e1701230b5a8cfcd0fec2011fe51403747c6a7175eb
666e61804b8da44229321b3061649f010c012e011b012e000000>GDAAAA+Helvetica-Bold AddT42Char 
1 4488 25 <00030042fe42045e045f000d002f0030005a40108a1e0111120524302f07
1206250d2429b8013f40201c202c180f30021f121f2527302c131a321c84
1b2d09362c19313298214845182b2b4ef44dedf4ed4e10f64d1139fdf4e4
2f003ffdcd3fed393f3f3ced11393130015d243635342623220706151417
1633121716173521111407062122242721161716333237363d0106070623
2202353412333702bd8a836e96391e203a960b3d68400115477afea6d1fe
f80e01360c1b2e6d9a3422292f5588d2fbf2de5bea97a59ba28d4b6e5f4a
8a0372192b739dfbf6d36bb8a4a332162767429c464623410127fcf3014b
03000000>GDAAAA+Helvetica-Bold AddT42Char 
1 4732 26 <000100870000045e05bd0017003f402505022702580e680e04141712000c
24170710070a0836051a1913102711191819be215045182b2b4ef44dfd3c
4e10f64ded003f3c3fed3f11393130015d0016171e011511211134272623
22061511211121113e01330343a5352d14fedd1e276d7175fee4011c3ea3
5a045e46483d8192fd80029758364c978cfdb205bdfdf75f4b000000>GDAAAA+Helvetica-Bold AddT42Char 
1 6016 33 <0002007dfe53049a045a000d0020004a40291713080a1c1a022420071a06
0a24130b190e080d180d36101a22061f1b1f1827191921229821504e182b
2b4ef44dfdf4e44e10f64ded111239003f3fed3f3fed1139113912393130
002623220706151417163332363512001110002322272627112111211536
373633037473819b3a1e653c52777d1d0109fefdcc82562f2dfee601112e
345f83029fc2934e78be4d2db8990239fee6feeffee0fed2412445fdc805
efa1472949000000>GDAAAA+Helvetica-Bold AddT42Char 
1 6204 34 <0002003cfe50045e045e000e0020004a402bd81eea1c02f80c0112130724
20071306170e241a0b160e031f131f1627151a220a361d19212298214845
182b2b4ef44ded4e10f64dfdf4e4003f3fed393f3fed11393130015d005d
2437363534272623220615141716331217161735211121110e0123220035
10003302e63e28223d996c831e3898405431330113fee6209b86bdfef601
0bc4d27e537f644f8ea6a9714889038c432657a2fa1002374267012efc01
10014600>GDAAAA+Helvetica-Bold AddT42Char 
1 6388 35 <00010082000002fb045c0013004ab900030147b3020f0d06b80147401913
070d060c0a200230024002031517171a020e0b270c191415b80164b32150
66182b2b4ef44dfdc4d44e456544e64d5d003f3f3fed1139d4ed31300016
17112e01232207061511211121153637363302dd0b131b2a0dac3b21fee1
011042315080045c0101fedc0302703f83fdf70442be6d2843000000>GDAAAA+Helvetica-Bold AddT42Char 
1 6952 38 <0002007dffe80455045f0019001a004c402e0a161a162a16381656076507
061a070a0006160e0d0a0524140b1a0d0a271a180b1a1c013618191b1cbe
215045182b2b4ef44ded4e10f612394dfdd42f003fed3f39393f3c3f3130
015d0111141716333237363511211121350e01070e012322272635112501
a116277292361c0121feeb042016437d54f2542f01ec0442fd6f5d2f5376
40690251fbbe9a0532133c2cae60bb02911d>GDAAAA+Helvetica-Bold AddT42Char 
1 7764 42 <00020015fe470450045f0013001400d94070270a560a660a950aa40ad30a
06050a0106061c07110d2d07200d3d07310d4b075d07580b680b7707790d
0d170f360d8709880b980bb80b0614140c080d02200c0c27120b0b0a0607
021f0808271209090a0607020d0a150c0b0908060709001f022c131f100f
14071617171a0e0d0b0cb8010cb30607090ab8010c400c13920819651516
a9216066182b2b764ef44de418fc393939fc393939194e456544e618003f
3f4de4fde43f3f3c3c3c12393911123901872e2b057d104b52787ac53387
2e182b7d104b52787ac5011112392f3130015d7100715d1f011636373e01
2701211b01210102062322262701b1242a4c1a192b04fe70013deee1012f
fe8a6c7ebd262e2e0182d102020a12116c0c0472fcdc0324fbd0feca9501
03061400>GDAAAA+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>GDAAAA+Helvetica-Bold AddT42Char 
GDAAAA+Helvetica-Bold /CharStrings get begin
/space 1 def
/a 19 def
/e 23 def
/g 25 def
/h 26 def
/p 33 def
/q 34 def
/r 35 def
/u 38 def
/y 42 def
end
GDAAAA+Helvetica-Bold /Encoding get
dup 32 /space put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 117 /u put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/VYBLNE+Helvetica-Bold /GDAAAA+Helvetica-Bold findfont ct_VMDictPut
/VYBLNE+Helvetica-Bold*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 
/h 7{/.notdef}rp /p /q /r 2{/.notdef}rp /u 3{/.notdef}rp 
/y 134{/.notdef}rp]
VYBLNE+Helvetica-Bold nf
VYBLNE+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf
65.7593 20.0001 mo
(query graph)
[8.55389 8.55389 7.784 5.44611 7.784 3.892 8.55389 5.44611 7.784 8.55389 0 ]xsh
.2 setflat
40.843 87.464 mo
42.796 89.417 42.796 92.582 40.843 94.535 cv
38.89 96.488 35.725 96.488 33.772 94.535 cv
31.819 92.582 31.819 89.417 33.772 87.464 cv
35.725 85.511 38.89 85.511 40.843 87.464 cv
1 .149 0 rgb
f
.6 setflat
40.843 87.464 mo
42.796 89.417 42.796 92.583 40.843 94.535 cv
38.89 96.488 35.725 96.488 33.772 94.535 cv
31.819 92.583 31.819 89.417 33.772 87.464 cv
35.725 85.511 38.89 85.511 40.843 87.464 cv
@
.2 setflat
74.843 66.464 mo
76.796 68.417 76.796 71.582 74.843 73.535 cv
72.89 75.488 69.725 75.488 67.772 73.535 cv
65.819 71.582 65.819 68.417 67.772 66.464 cv
69.725 64.511 72.89 64.511 74.843 66.464 cv
f
.6 setflat
74.843 66.464 mo
76.796 68.417 76.796 71.583 74.843 73.535 cv
72.89 75.488 69.725 75.488 67.772 73.535 cv
65.819 71.583 65.819 68.417 67.772 66.464 cv
69.725 64.511 72.89 64.511 74.843 66.464 cv
@
66.997 67.464 mo
41.618 52.535 li
@
67.053 72.628 mo
41.563 88.372 li
@
.2 setflat
111.445 46.464 mo
113.398 48.417 113.398 51.582 111.445 53.535 cv
109.492 55.488 106.327 55.488 104.374 53.535 cv
102.421 51.582 102.421 48.417 104.374 46.464 cv
106.327 44.511 109.492 44.511 111.445 46.464 cv
f
.6 setflat
111.445 46.465 mo
113.398 48.418 113.398 51.584 111.445 53.536 cv
109.492 55.489 106.327 55.489 104.374 53.536 cv
102.421 51.584 102.421 48.418 104.374 46.465 cv
106.327 44.512 109.492 44.512 111.445 46.465 cv
@
.2 setflat
111.445 87.464 mo
113.398 89.417 113.398 92.582 111.445 94.535 cv
109.492 96.488 106.327 96.488 104.374 94.535 cv
102.421 92.582 102.421 89.417 104.374 87.464 cv
106.327 85.511 109.492 85.511 111.445 87.464 cv
f
.6 setflat
111.445 87.464 mo
113.398 89.417 113.398 92.583 111.445 94.535 cv
109.492 96.488 106.327 96.488 104.374 94.535 cv
102.421 92.583 102.421 89.417 104.374 87.464 cv
106.327 85.511 109.492 85.511 111.445 87.464 cv
@
.2 setflat
145.445 66.464 mo
147.398 68.417 147.398 71.582 145.445 73.535 cv
143.492 75.488 140.327 75.488 138.374 73.535 cv
136.421 71.582 136.421 68.417 138.374 66.464 cv
140.327 64.511 143.492 64.511 145.445 66.464 cv
f
.6 setflat
145.445 66.464 mo
147.398 68.417 147.398 71.583 145.445 73.535 cv
143.492 75.488 140.327 75.488 138.374 73.535 cv
136.421 71.583 136.421 68.417 138.374 66.464 cv
140.327 64.511 143.492 64.511 145.445 66.464 cv
@
137.599 67.464 mo
112.22 52.535 li
@
137.655 72.628 mo
112.165 88.372 li
@
103.521 52.398 mo
75.697 67.602 li
@
75.646 72.489 mo
103.572 88.511 li
@
146.22 72.536 mo
173.297 88.464 li
0 0 0 rgb
@
.2 setflat
181.143 66.464 mo
183.096 68.417 183.096 71.582 181.143 73.535 cv
179.19 75.488 176.025 75.488 174.072 73.535 cv
172.119 71.582 172.119 68.417 174.072 66.464 cv
176.025 64.511 179.19 64.511 181.143 66.464 cv
f
.6 setflat
181.143 66.464 mo
183.096 68.417 183.096 71.583 181.143 73.535 cv
179.19 75.488 176.025 75.488 174.072 73.535 cv
172.119 71.583 172.119 68.417 174.072 66.464 cv
176.025 64.511 179.19 64.511 181.143 66.464 cv
.5 .5 .5 rgb
@
146.909 70 mo
172.607 70 li
0 0 0 rgb
@
.2 setflat
182.046 46.464 mo
183.999 48.417 183.999 51.582 182.046 53.535 cv
180.093 55.488 176.928 55.488 174.975 53.535 cv
173.022 51.582 173.022 48.417 174.975 46.464 cv
176.928 44.511 180.093 44.511 182.046 46.464 cv
f
.6 setflat
182.046 46.465 mo
183.999 48.418 183.999 51.584 182.046 53.536 cv
180.093 55.489 176.928 55.489 174.975 53.536 cv
173.022 51.584 173.022 48.418 174.975 46.465 cv
176.928 44.512 180.093 44.512 182.046 46.465 cv
.5 .5 .5 rgb
@
3 lw
541.098 2.27701 mo
1037.69 2.27701 li
1037.69 104.027 li
541.098 104.027 li
cp
0 .59 1 rgb
@
.063 .065 .128 rgb
%ADOBeginSubsetFont: GDAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VYBLNE+Helvetica-Bold gcheck setglobal} if
1 2852 17 <00010021000004cb05c200070038400c01062a070204080917171a00b801
58b2022505b80158400906190809c0217572182b2b4ef44df4fdfd4e4565
44e64d003f3ffd3c3130011121112111211104cbfe47fecafe4505c2fefb
fb4304bd0105>VYBLNE+Helvetica-Bold AddT42Char 
1 3588 21 <00020047ffda0434045f001d001e006e40459916a81602871c0149155812
6812780a7912b815c713c81508180206041dd204241e1a07160e0a0c10b7
0c24140b1e10360f1f00361e171d1a20083617191f208721484e182b2b4e
f44ded4e10f64d1139fdf4ed2f003feded113939393f3ceded1139393931
30015d71005d012627262322070615141716333236372106070621200235
1000333204170103100821306590351c1c338d64540901230a5486fef9fe
f9f80112f1cd010518fe1b02bb3d31428f4c7e7849886c568274bb0138f9
01190138b8e901a40000>VYBLNE+Helvetica-Bold AddT42Char 
1 5844 32 <00030042ffda049c0465000b00170018004d4028170301080c880c881003
170d180f660d0305241814070b240e0b1818080236171a1a08361119191a
b80176b321484e182b2b4ef44ded4e10f64ded11392f003fed3f3ced3130
017200727124363534262322061514163324002120003534002120001501
02eb86867d7d87877d022efeecfee7fee7feec0114011901190114fdd3c9
b2a4a4b1b1a4a4b266feab0155f0ec015afea6ec0240>VYBLNE+Helvetica-Bold AddT42Char 
1 6536 36 <00020042ffdb04250461002b002c007e404f09100626190d030904210b0b
4b0a490b472144204829d703081d22200c0a04162b04161a2c2c1207042c
280b2c2c0f150a201d164d2207152d074d251a2e0c001d4d0f2d004d2b19
2d2e8721484e182b2b4ef44dedf4ed12394e10f64dedf41139ed11393911
12392f003fed3f3cfdcd10cd11173931305e5d5e015d0116171633323635
342726252627263534363332041721262726232206151417161716171615
140623202635010163091e358f54632828feffb94c4cedd7cc010113fee3
06192f715d4f2a2affaa5554f1fcfefff501fb015c4c203932323019193d
2e45448097d9a3c837203a3a27311617382851527ba2cdd9a8030300>VYBLNE+Helvetica-Bold AddT42Char 
1 6804 37 <00010015ffea027805680016004ab6102c0f1f0c2c11ba01710004015c40
1607005c0601061817171a0f06f4040927009203151718b8010eb3216066
182b2bd43ce4fd3cf43c4e456544ee4d003f3cfd3ced3ffdf4e431301335
3311211133152311141633323637150706272635111598011ab1b122570d
1d0e87ca4a30036dcb0130fed0cbfdc043210101d505074d3166029f>VYBLNE+Helvetica-Bold AddT42Char 
VYBLNE+Helvetica-Bold /CharStrings get begin
/T 17 def
/c 21 def
/o 32 def
/s 36 def
/t 37 def
end
VYBLNE+Helvetica-Bold /Encoding get
dup 84 /T put
dup 99 /c put
dup 111 /o put
dup 115 /s put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/VYBLNE+Helvetica-Bold*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 
/.notdef /e /.notdef /g /h 6{/.notdef}rp /o /p 
/q /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
VYBLNE+Helvetica-Bold nf
VYBLNE+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf
285.31 20.0001 mo
(core structure)
[7.784 8.55389 5.44611 7.784 3.892 7.784 4.6619 5.44611 8.55389 7.784 4.6619 8.55389 
5.44611 0 ]xsh
437.322 20.7981 mo
(Tree)
[7.78809 5.44611 7.784 0 ]xsh
1 lw
285.583 86.107 mo
285.583 55.107 li
1 .149 0 rgb
@
.2 setflat
289.119 46.572 mo
291.072 48.525 291.072 51.69 289.119 53.643 cv
287.166 55.596 284.001 55.596 282.048 53.643 cv
280.095 51.69 280.095 48.525 282.048 46.572 cv
284.001 44.619 287.166 44.619 289.119 46.572 cv
f
.6 setflat
289.119 46.572 mo
291.072 48.525 291.072 51.691 289.119 53.643 cv
287.166 55.596 284.001 55.596 282.048 53.643 cv
280.095 51.691 280.095 48.525 282.048 46.572 cv
284.001 44.619 287.166 44.619 289.119 46.572 cv
@
.2 setflat
289.119 87.572 mo
291.072 89.525 291.072 92.69 289.119 94.643 cv
287.166 96.596 284.001 96.596 282.048 94.643 cv
280.095 92.69 280.095 89.525 282.048 87.572 cv
284.001 85.619 287.166 85.619 289.119 87.572 cv
f
.6 setflat
289.119 87.572 mo
291.072 89.525 291.072 92.691 289.119 94.643 cv
287.166 96.596 284.001 96.596 282.048 94.643 cv
280.095 92.691 280.095 89.525 282.048 87.572 cv
284.001 85.619 287.166 85.619 289.119 87.572 cv
@
.2 setflat
323.119 66.572 mo
325.072 68.525 325.072 71.69 323.119 73.643 cv
321.166 75.596 318.001 75.596 316.048 73.643 cv
314.095 71.69 314.095 68.525 316.048 66.572 cv
318.001 64.619 321.166 64.619 323.119 66.572 cv
f
.6 setflat
323.119 66.572 mo
325.072 68.525 325.072 71.691 323.119 73.643 cv
321.166 75.596 318.001 75.596 316.048 73.643 cv
314.095 71.691 314.095 68.525 316.048 66.572 cv
318.001 64.619 321.166 64.619 323.119 66.572 cv
@
315.273 67.572 mo
289.894 52.643 li
@
315.329 72.736 mo
289.839 88.48 li
@
.2 setflat
359.72 46.572 mo
361.673 48.525 361.673 51.69 359.72 53.643 cv
357.767 55.596 354.602 55.596 352.649 53.643 cv
350.696 51.69 350.696 48.525 352.649 46.572 cv
354.602 44.619 357.767 44.619 359.72 46.572 cv
f
.6 setflat
359.72 46.572 mo
361.673 48.525 361.673 51.691 359.72 53.643 cv
357.767 55.596 354.602 55.596 352.649 53.643 cv
350.696 51.691 350.696 48.525 352.649 46.572 cv
354.602 44.619 357.767 44.619 359.72 46.572 cv
@
.2 setflat
359.72 87.572 mo
361.673 89.525 361.673 92.69 359.72 94.643 cv
357.767 96.596 354.602 96.596 352.649 94.643 cv
350.696 92.69 350.696 89.525 352.649 87.572 cv
354.602 85.619 357.767 85.619 359.72 87.572 cv
f
.6 setflat
359.72 87.572 mo
361.673 89.525 361.673 92.691 359.72 94.643 cv
357.767 96.596 354.602 96.596 352.649 94.643 cv
350.696 92.691 350.696 89.525 352.649 87.572 cv
354.602 85.619 357.767 85.619 359.72 87.572 cv
@
.2 setflat
393.72 66.572 mo
395.673 68.525 395.673 71.69 393.72 73.643 cv
391.767 75.596 388.602 75.596 386.649 73.643 cv
384.696 71.69 384.696 68.525 386.649 66.572 cv
388.602 64.619 391.767 64.619 393.72 66.572 cv
f
.6 setflat
393.72 66.572 mo
395.673 68.525 395.673 71.691 393.72 73.643 cv
391.767 75.596 388.602 75.596 386.649 73.643 cv
384.696 71.691 384.696 68.525 386.649 66.572 cv
388.602 64.619 391.767 64.619 393.72 66.572 cv
@
385.874 67.572 mo
360.495 52.643 li
@
385.93 72.736 mo
360.44 88.48 li
@
351.796 52.506 mo
323.972 67.709 li
@
323.921 72.597 mo
351.846 88.619 li
@
.2 setflat
468.759 87.572 mo
470.712 89.525 470.712 92.69 468.759 94.643 cv
466.806 96.596 463.641 96.596 461.688 94.643 cv
459.735 92.69 459.735 89.525 461.688 87.572 cv
463.641 85.619 466.806 85.619 468.759 87.572 cv
0 0 0 rgb
f
.6 setflat
468.759 87.572 mo
470.712 89.525 470.712 92.691 468.759 94.643 cv
466.806 96.596 463.641 96.596 461.688 94.643 cv
459.735 92.691 459.735 89.525 461.688 87.572 cv
463.641 85.619 466.806 85.619 468.759 87.572 cv
.5 .5 .5 rgb
@
433.915 67.709 mo
461.739 52.506 li
0 0 0 rgb
@
.2 setflat
433.061 66.572 mo
435.014 68.525 435.014 71.69 433.061 73.643 cv
431.108 75.596 427.943 75.596 425.99 73.643 cv
424.037 71.69 424.037 68.525 425.99 66.572 cv
427.943 64.619 431.108 64.619 433.061 66.572 cv
1 .149 0 rgb
f
.6 setflat
433.061 66.572 mo
435.014 68.525 435.014 71.691 433.061 73.643 cv
431.108 75.596 427.943 75.596 425.99 73.643 cv
424.037 71.691 424.037 68.525 425.99 66.572 cv
427.943 64.619 431.108 64.619 433.061 66.572 cv
@
433.836 72.643 mo
460.913 88.571 li
0 0 0 rgb
@
.2 setflat
468.759 66.572 mo
470.712 68.525 470.712 71.69 468.759 73.643 cv
466.806 75.596 463.641 75.596 461.688 73.643 cv
459.735 71.69 459.735 68.525 461.688 66.572 cv
463.641 64.619 466.806 64.619 468.759 66.572 cv
f
.6 setflat
468.759 66.572 mo
470.712 68.525 470.712 71.691 468.759 73.643 cv
466.806 75.596 463.641 75.596 461.688 73.643 cv
459.735 71.691 459.735 68.525 461.688 66.572 cv
463.641 64.619 466.806 64.619 468.759 66.572 cv
.5 .5 .5 rgb
@
434.526 70.108 mo
460.224 70.108 li
0 0 0 rgb
@
.2 setflat
469.663 46.572 mo
471.616 48.525 471.616 51.69 469.663 53.643 cv
467.71 55.596 464.545 55.596 462.592 53.643 cv
460.639 51.69 460.639 48.525 462.592 46.572 cv
464.545 44.619 467.71 44.619 469.663 46.572 cv
f
.6 setflat
469.663 46.572 mo
471.616 48.525 471.616 51.691 469.663 53.643 cv
467.71 55.596 464.545 55.596 462.592 53.643 cv
460.639 51.691 460.639 48.525 462.592 46.572 cv
464.545 44.619 467.71 44.619 469.663 46.572 cv
.5 .5 .5 rgb
@
.2 setflat
561.749 64.491 mo
563.702 66.444 563.702 69.609 561.749 71.562 cv
559.796 73.515 556.631 73.515 554.678 71.562 cv
552.725 69.609 552.725 66.444 554.678 64.491 cv
556.631 62.538 559.796 62.538 561.749 64.491 cv
1 .149 0 rgb
f
.6 setflat
561.749 64.491 mo
563.702 66.444 563.702 69.61 561.749 71.562 cv
559.796 73.515 556.631 73.515 554.678 71.562 cv
552.725 69.61 552.725 66.444 554.678 64.491 cv
556.631 62.538 559.796 62.538 561.749 64.491 cv
@
.2 setflat
598.351 51.491 mo
600.304 53.444 600.304 56.609 598.351 58.562 cv
596.398 60.515 593.232 60.515 591.28 58.562 cv
589.327 56.609 589.327 53.444 591.28 51.491 cv
593.232 49.538 596.398 49.538 598.351 51.491 cv
f
.6 setflat
598.351 51.491 mo
600.304 53.444 600.304 56.61 598.351 58.562 cv
596.398 60.515 593.233 60.515 591.28 58.562 cv
589.327 56.61 589.327 53.444 591.28 51.491 cv
593.233 49.538 596.398 49.538 598.351 51.491 cv
@
.2 setflat
598.351 79.491 mo
600.304 81.444 600.304 84.609 598.351 86.562 cv
596.398 88.515 593.232 88.515 591.28 86.562 cv
589.327 84.609 589.327 81.444 591.28 79.491 cv
593.232 77.538 596.398 77.538 598.351 79.491 cv
f
.6 setflat
598.351 79.491 mo
600.304 81.444 600.304 84.61 598.351 86.562 cv
596.398 88.515 593.233 88.515 591.28 86.562 cv
589.327 84.61 589.327 81.444 591.28 79.491 cv
593.233 77.538 596.398 77.538 598.351 79.491 cv
@
590.103 56.701 mo
562.927 66.353 li
@
562.842 69.923 mo
590.188 81.13 li
@
.2 setflat
652.698 70.447 mo
654.651 72.4 654.651 75.565 652.698 77.518 cv
650.745 79.471 647.58 79.471 645.627 77.518 cv
643.674 75.565 643.674 72.4 645.627 70.447 cv
647.58 68.494 650.745 68.494 652.698 70.447 cv
f
.6 setflat
652.698 70.447 mo
654.651 72.4 654.651 75.566 652.698 77.518 cv
650.745 79.471 647.58 79.471 645.627 77.518 cv
643.674 75.566 643.674 72.4 645.627 70.447 cv
647.58 68.494 650.745 68.494 652.698 70.447 cv
@
.2 setflat
691.369 70.447 mo
693.322 72.4 693.322 75.565 691.369 77.518 cv
689.416 79.471 686.251 79.471 684.298 77.518 cv
682.345 75.565 682.345 72.4 684.298 70.447 cv
686.251 68.494 689.416 68.494 691.369 70.447 cv
f
.6 setflat
691.369 70.447 mo
693.322 72.4 693.322 75.566 691.369 77.518 cv
689.416 79.471 686.251 79.471 684.298 77.518 cv
682.345 75.566 682.345 72.4 684.298 70.447 cv
686.251 68.494 689.416 68.494 691.369 70.447 cv
@
682.833 73.983 mo
654.161 73.983 li
@
.2 setflat
727.947 64.491 mo
729.9 66.444 729.9 69.609 727.947 71.562 cv
725.994 73.515 722.828 73.515 720.876 71.562 cv
718.923 69.609 718.923 66.444 720.876 64.491 cv
722.828 62.538 725.994 62.538 727.947 64.491 cv
f
.6 setflat
727.947 64.491 mo
729.9 66.444 729.9 69.61 727.947 71.562 cv
725.994 73.515 722.829 73.515 720.876 71.562 cv
718.923 69.61 718.923 66.444 720.876 64.491 cv
722.829 62.538 725.994 62.538 727.947 64.491 cv
@
.2 setflat
764.548 51.491 mo
766.501 53.444 766.501 56.609 764.548 58.562 cv
762.595 60.515 759.43 60.515 757.477 58.562 cv
755.524 56.609 755.524 53.444 757.477 51.491 cv
759.43 49.538 762.595 49.538 764.548 51.491 cv
f
.6 setflat
764.548 51.491 mo
766.501 53.444 766.501 56.61 764.548 58.562 cv
762.595 60.515 759.43 60.515 757.477 58.562 cv
755.524 56.61 755.524 53.444 757.477 51.491 cv
759.43 49.538 762.595 49.538 764.548 51.491 cv
@
.2 setflat
764.548 79.491 mo
766.501 81.444 766.501 84.609 764.548 86.562 cv
762.595 88.515 759.43 88.515 757.477 86.562 cv
755.524 84.609 755.524 81.444 757.477 79.491 cv
759.43 77.538 762.595 77.538 764.548 79.491 cv
f
.6 setflat
764.548 79.491 mo
766.501 81.444 766.501 84.61 764.548 86.562 cv
762.595 88.515 759.43 88.515 757.477 86.562 cv
755.524 84.61 755.524 81.444 757.477 79.491 cv
759.43 77.538 762.595 77.538 764.548 79.491 cv
@
756.3 56.701 mo
729.124 66.353 li
@
729.039 69.923 mo
756.385 81.13 li
@
.2 setflat
816.164 64.491 mo
818.117 66.444 818.117 69.609 816.164 71.562 cv
814.211 73.515 811.046 73.515 809.093 71.562 cv
807.14 69.609 807.14 66.444 809.093 64.491 cv
811.046 62.538 814.211 62.538 816.164 64.491 cv
f
.6 setflat
816.164 64.491 mo
818.117 66.444 818.117 69.61 816.164 71.562 cv
814.211 73.515 811.046 73.515 809.093 71.562 cv
807.14 69.61 807.14 66.444 809.093 64.491 cv
811.046 62.538 814.211 62.538 816.164 64.491 cv
@
.2 setflat
854.835 64.491 mo
856.788 66.444 856.788 69.609 854.835 71.562 cv
852.882 73.515 849.717 73.515 847.764 71.562 cv
845.811 69.609 845.811 66.444 847.764 64.491 cv
849.717 62.538 852.882 62.538 854.835 64.491 cv
f
.6 setflat
854.835 64.491 mo
856.788 66.444 856.788 69.61 854.835 71.562 cv
852.882 73.515 849.717 73.515 847.764 71.562 cv
845.811 69.61 845.811 66.444 847.764 64.491 cv
849.717 62.538 852.882 62.538 854.835 64.491 cv
@
846.299 68.027 mo
817.628 68.027 li
@
.2 setflat
892.934 65.447 mo
894.887 67.4 894.887 70.565 892.934 72.518 cv
890.981 74.471 887.816 74.471 885.863 72.518 cv
883.91 70.565 883.91 67.4 885.863 65.447 cv
887.816 63.494 890.981 63.494 892.934 65.447 cv
f
.6 setflat
892.934 65.447 mo
894.887 67.4 894.887 70.566 892.934 72.518 cv
890.981 74.471 887.816 74.471 885.863 72.518 cv
883.91 70.566 883.91 67.4 885.863 65.447 cv
887.816 63.494 890.981 63.494 892.934 65.447 cv
@
.2 setflat
931.606 65.447 mo
933.559 67.4 933.559 70.565 931.606 72.518 cv
929.653 74.471 926.488 74.471 924.535 72.518 cv
922.582 70.565 922.582 67.4 924.535 65.447 cv
926.488 63.494 929.653 63.494 931.606 65.447 cv
f
.6 setflat
931.606 65.447 mo
933.559 67.4 933.559 70.566 931.606 72.518 cv
929.653 74.471 926.488 74.471 924.535 72.518 cv
922.582 70.566 922.582 67.4 924.535 65.447 cv
926.488 63.494 929.653 63.494 931.606 65.447 cv
@
923.07 68.983 mo
894.398 68.983 li
@
.2 setflat
1003.22 80.447 mo
1005.17 82.4 1005.17 85.565 1003.22 87.518 cv
1001.27 89.471 998.103 89.471 996.151 87.518 cv
994.198 85.565 994.198 82.4 996.151 80.447 cv
998.103 78.494 1001.27 78.494 1003.22 80.447 cv
0 0 0 rgb
f
.6 setflat
1003.22 80.447 mo
1005.17 82.4 1005.17 85.566 1003.22 87.518 cv
1001.27 89.471 998.104 89.471 996.151 87.518 cv
994.198 85.566 994.198 82.4 996.151 80.447 cv
998.104 78.494 1001.27 78.494 1003.22 80.447 cv
.5 .5 .5 rgb
@
968.571 65.979 mo
996.007 53.985 li
0 0 0 rgb
@
.2 setflat
967.524 64.447 mo
969.477 66.4 969.477 69.565 967.524 71.518 cv
965.571 73.471 962.406 73.471 960.453 71.518 cv
958.5 69.565 958.5 66.4 960.453 64.447 cv
962.406 62.494 965.571 62.494 967.524 64.447 cv
1 .149 0 rgb
f
.6 setflat
967.524 64.447 mo
969.477 66.4 969.477 69.566 967.524 71.518 cv
965.571 73.471 962.406 73.471 960.453 71.518 cv
958.5 69.566 958.5 66.4 960.453 64.447 cv
962.406 62.494 965.571 62.494 967.524 64.447 cv
@
968.552 70.028 mo
995.122 81.937 li
0 0 0 rgb
@
.2 setflat
1003.22 64.447 mo
1005.17 66.4 1005.17 69.565 1003.22 71.518 cv
1001.27 73.471 998.103 73.471 996.151 71.518 cv
994.198 69.565 994.198 66.4 996.151 64.447 cv
998.103 62.494 1001.27 62.494 1003.22 64.447 cv
f
.6 setflat
1003.22 64.447 mo
1005.17 66.4 1005.17 69.566 1003.22 71.518 cv
1001.27 73.471 998.104 73.471 996.151 71.518 cv
994.198 69.566 994.198 66.4 996.151 64.447 cv
998.104 62.494 1001.27 62.494 1003.22 64.447 cv
.5 .5 .5 rgb
@
968.988 67.982 mo
994.686 67.982 li
0 0 0 rgb
@
.2 setflat
1004.13 48.447 mo
1006.08 50.4 1006.08 53.565 1004.13 55.518 cv
1002.17 57.471 999.006 57.471 997.054 55.518 cv
995.101 53.565 995.101 50.4 997.054 48.447 cv
999.006 46.494 1002.17 46.494 1004.13 48.447 cv
f
.6 setflat
1004.13 48.447 mo
1006.08 50.4 1006.08 53.566 1004.13 55.518 cv
1002.17 57.471 999.007 57.471 997.054 55.518 cv
995.101 53.566 995.101 50.4 997.054 48.447 cv
999.007 46.494 1002.17 46.494 1004.13 48.447 cv
.5 .5 .5 rgb
@
.2 setflat
179.236 223.357 mo
181.189 225.31 181.189 228.475 179.236 230.428 cv
177.283 232.381 174.118 232.381 172.165 230.428 cv
170.212 228.475 170.212 225.31 172.165 223.357 cv
174.118 221.404 177.283 221.404 179.236 223.357 cv
0 0 0 rgb
f
.6 setflat
179.236 223.357 mo
181.189 225.31 181.189 228.476 179.236 230.428 cv
177.283 232.381 174.118 232.381 172.165 230.428 cv
170.212 228.476 170.212 225.31 172.165 223.357 cv
174.118 221.405 177.283 221.405 179.236 223.357 cv
.5 .5 .5 rgb
@
35.401 221.893 mo
35.401 190.893 li
1 .149 0 rgb
@
.2 setflat
38.936 182.357 mo
40.889 184.31 40.889 187.475 38.936 189.428 cv
36.983 191.381 33.818 191.381 31.865 189.428 cv
29.912 187.475 29.912 184.31 31.865 182.357 cv
33.818 180.404 36.983 180.404 38.936 182.357 cv
f
.6 setflat
38.936 182.357 mo
40.889 184.31 40.889 187.476 38.936 189.428 cv
36.983 191.381 33.818 191.381 31.865 189.428 cv
29.912 187.476 29.912 184.31 31.865 182.357 cv
33.818 180.405 36.983 180.405 38.936 182.357 cv
@
144.391 203.494 mo
172.215 188.291 li
0 0 0 rgb
@
.063 .065 .128 rgb
%ADOBeginSubsetFont: GDAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VYBLNE+Helvetica-Bold gcheck setglobal} if
1 3808 22 <0002003fffde046505c00010001d004f402ce80c010706151d0210030017
241007060a1d240a0b15031a131f061f0327041a1f1a360d191e1f982148
45182b2b4ef44ded4e10f64dfdf4e4111239003fed3f3fed3f1139113912
393130005d00161711211121350e01232200351000331236353427262322
0615141633027a9a300121feeb3d9c74bffefb0101d7b77e653e527d7577
79045c574d0208fa409761580135f201170140fc72b48fc85634bd8c97b5
>VYBLNE+Helvetica-Bold AddT42Char 
VYBLNE+Helvetica-Bold /CharStrings get begin
/d 22 def
end
VYBLNE+Helvetica-Bold /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/VYBLNE+Helvetica-Bold*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 
/d /e /.notdef /g /h 6{/.notdef}rp /o /p 
/q /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
VYBLNE+Helvetica-Bold nf
VYBLNE+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf
68.4365 157.893 mo
(data graph)
[8.55389 7.784 4.6619 7.784 3.892 8.55389 5.44611 7.784 8.55389 0 ]xsh
.2 setflat
38.936 223.357 mo
40.889 225.31 40.889 228.475 38.936 230.428 cv
36.983 232.381 33.818 232.381 31.865 230.428 cv
29.912 228.475 29.912 225.31 31.865 223.357 cv
33.818 221.404 36.983 221.404 38.936 223.357 cv
1 .149 0 rgb
f
.6 setflat
38.936 223.357 mo
40.889 225.31 40.889 228.476 38.936 230.428 cv
36.983 232.381 33.818 232.381 31.865 230.428 cv
29.912 228.476 29.912 225.31 31.865 223.357 cv
33.818 221.405 36.983 221.405 38.936 223.357 cv
@
.2 setflat
72.936 202.357 mo
74.889 204.31 74.889 207.475 72.936 209.428 cv
70.983 211.381 67.818 211.381 65.865 209.428 cv
63.912 207.475 63.912 204.31 65.865 202.357 cv
67.818 200.404 70.983 200.404 72.936 202.357 cv
f
.6 setflat
72.936 202.357 mo
74.889 204.31 74.889 207.476 72.936 209.428 cv
70.983 211.381 67.818 211.381 65.865 209.428 cv
63.912 207.476 63.912 204.31 65.865 202.357 cv
67.818 200.405 70.983 200.405 72.936 202.357 cv
@
65.09 203.357 mo
39.711 188.428 li
@
65.146 208.521 mo
39.656 224.265 li
@
.2 setflat
109.538 182.357 mo
111.491 184.31 111.491 187.475 109.538 189.428 cv
107.585 191.381 104.42 191.381 102.467 189.428 cv
100.514 187.475 100.514 184.31 102.467 182.357 cv
104.42 180.404 107.585 180.404 109.538 182.357 cv
f
.6 setflat
109.538 182.357 mo
111.491 184.31 111.491 187.476 109.538 189.428 cv
107.585 191.381 104.42 191.381 102.467 189.428 cv
100.514 187.476 100.514 184.31 102.467 182.357 cv
104.42 180.405 107.585 180.405 109.538 182.357 cv
@
.2 setflat
109.538 223.357 mo
111.491 225.31 111.491 228.475 109.538 230.428 cv
107.585 232.381 104.42 232.381 102.467 230.428 cv
100.514 228.475 100.514 225.31 102.467 223.357 cv
104.42 221.404 107.585 221.404 109.538 223.357 cv
f
.6 setflat
109.538 223.357 mo
111.491 225.31 111.491 228.476 109.538 230.428 cv
107.585 232.381 104.42 232.381 102.467 230.428 cv
100.514 228.476 100.514 225.31 102.467 223.357 cv
104.42 221.405 107.585 221.405 109.538 223.357 cv
@
.2 setflat
143.537 202.357 mo
145.49 204.31 145.49 207.475 143.537 209.428 cv
141.584 211.381 138.419 211.381 136.466 209.428 cv
134.513 207.475 134.513 204.31 136.466 202.357 cv
138.419 200.404 141.584 200.404 143.537 202.357 cv
f
.6 setflat
143.537 202.357 mo
145.49 204.31 145.49 207.476 143.537 209.428 cv
141.584 211.381 138.419 211.381 136.466 209.428 cv
134.513 207.476 134.513 204.31 136.466 202.357 cv
138.419 200.405 141.584 200.405 143.537 202.357 cv
@
135.691 203.357 mo
110.312 188.428 li
@
135.747 208.521 mo
110.257 224.265 li
@
101.613 188.291 mo
73.789 203.494 li
@
73.738 208.382 mo
101.664 224.404 li
@
144.313 208.429 mo
171.39 224.357 li
0 0 0 rgb
@
.2 setflat
179.236 202.357 mo
181.189 204.31 181.189 207.475 179.236 209.428 cv
177.283 211.381 174.118 211.381 172.165 209.428 cv
170.212 207.475 170.212 204.31 172.165 202.357 cv
174.118 200.404 177.283 200.404 179.236 202.357 cv
f
.6 setflat
179.236 202.357 mo
181.189 204.31 181.189 207.476 179.236 209.428 cv
177.283 211.381 174.118 211.381 172.165 209.428 cv
170.212 207.476 170.212 204.31 172.165 202.357 cv
174.118 200.405 177.283 200.405 179.236 202.357 cv
.5 .5 .5 rgb
@
145.002 205.893 mo
170.7 205.893 li
0 0 0 rgb
@
.2 setflat
180.139 182.357 mo
182.092 184.31 182.092 187.475 180.139 189.428 cv
178.186 191.381 175.021 191.381 173.068 189.428 cv
171.115 187.475 171.115 184.31 173.068 182.357 cv
175.021 180.404 178.186 180.404 180.139 182.357 cv
f
.6 setflat
180.139 182.357 mo
182.092 184.31 182.092 187.476 180.139 189.428 cv
178.186 191.381 175.021 191.381 173.068 189.428 cv
171.115 187.476 171.115 184.31 173.068 182.357 cv
175.021 180.405 178.186 180.405 180.139 182.357 cv
.5 .5 .5 rgb
@
6 251 mo
213 251 li
213 160 li
6 160 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 274 ]ct
[207 0 0 91 6 23 ]ct
snap_to_device
<<
/T 1
/W 621 
/H 273 
/M[621 0 0 -273 0 273 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
img
B\r*FH!JVIs2S=p;&BW8:2"HPCtYORPcSF695)D\YK8QAQDH#u=qnu0phGnu.;P\418@-&ZE#<VM:,_n
pV+q#5JM8XpYKf\\[Qp(n)ra1;4l1f53MP:SC`%Yo0.gM#U1oC4@h;Cf>jQ3\$H&-mL)m`p?r;M.+5aA
-dUgg71]Sf'LkF+PB#Vq2/M'A;uuB!2**5PL/KlMAJ@EA"AoA0]L^c?^;G,u6c[IS)B!_Z<2l:*G>M)E
[6J!/**lNCUhn:>IcA#Jbuj[`j_>4<9a!`nU_5+-/5/cdPPY,mDJgNh#(ds'Jfk>N+:*QA#_F0)Jfk>N
+:*QA#_F0)Jfk>N+:*QA#_F0)Jfk>N+:*QA#_F0)Jfk>N+:*QA#_F0)Jfk>N+:*QA#_F0)Jfk>N+:*QA
#_FIT_SSXMVFM1#5nN_LdA'3q-;A7&U4oJAVNI"g\8gO]?G%[LMiWo0Ut!i@ZF$u4:/8em6kBJeW[<1D
IPklick*(#p$/6ETou_JhnPdX4EBLRlp_+D&>TXG'GNs3d+mD=/hSb(-caNXNaC,af"QM*Y1R"8]6>'R
h2I:$lq@OJ&>Vo1+!4jrAk`h&7n6'eQdaF4P7pFs%hGo_9h\5KA/$:+q\)7,"K>:$=BL(T[VXVP1Gb6,
\9ROQ:)n+fD8g*lZY#2QN(WYF&HkB26nPrurAmroR$\`a\s8Nq-]Y($VIK-4'bskU>I-(')]O]@MBE1V
<#ru;)$BGB@q3D_I.QK[[^J(ANqW2?P-QG_-gU*aF"(J0HA,X^+:*Qu&X&<?W*G(2KsB6XI=56?e'#p-
8g3'JhDCY'Y&86!0ma<-NK0%Eb0#n($qPR=p?hVChr>YA&-P9u#_.>ROM<i!lK%*iZId@FbW$'^daF;-
+S=6e>;Tp;SioM[`Pf^1opRaR>$5!Fg9g,,c'oe=HiVPF/1^q=(%-g0KIgB<d+HtfP-%oq$Ju,@+:+].
3'03SIQ9DKYnn&d&m/3L'Ms*!g"G%8jbt'56uH;AF@i51>$hiO=M&bD#7hm6)aP#<5u`Z9Unlr,i7-7U
p7eUg.k>R)5s`p,aj8;2Z?Y<C!KgSqA[E_;L5*0Uho=9!+:*Rt3lT(Wc'pZT"Km(Dl=jsHd^.`>F,))k
p?\3gX\r^Eap0"hqP#]r+:*Rt$9)n[A7a'3cE>YJ5!D/lZ>%db-#[cY$?t04%1EXr/M3;@>P@XL9C-^&
5nHG$E,fl+p$Tn`,Gf"W\$q-W;l<ABH&Ki/^juUHn+?8ELCYKH`PoN;pC@'<5nF/r93S`<`G)9RY&:4O
<?QjQNXd<E%hC==Q^(DN5nF/rD]V,lbdsNYa,V`/95%ueUt"#Jcd0ojGo($+5nF0u3WoZmZSEF1&5[,-
6%]A-b3@BQMnP$(MBE1V<#t,GS&`\8_hSc!Vb]u[eC<!$PYk:T@M>Dn+p`cC<<jEn7+'W<0/`^&7>i:b
R@0J="K[R!hfIr()),HKOc`MC>.%$t9SO'"mc3@!q=A7cGm$DE6k-B)Yi''!F6Cis'0gj;XCf_GO>8@<
9MucYUW1<n]mB@G`R_.q[r:0<n?9!t0"o]+6%ctg5jWk$5nHH7Z*L[pA9?1k6.-F-)`J7i[;Xs:\@>X=
)XcB/!7D`&)-L'D88mVPk,qjnL9:gb9:%8r;@\:$#_FHh;l<CP<"F@G.4N0P_eHE_B?s1AG5:]?RV^in
H"'cobEa_bNB;@P`)hI3#_K!-Rl5-C7'0%E-Bd0%-Vp>`Y?rC"bapt%H@aD75B#Ah[>Ts$U]fVG2Jh$-
eu5@=PE:lVDZN-8"Ar#;5CT]9Xj&;ofM0]AeC4sK3l##7',+]HKBCIMbLHkn/%u/i5nHG,EHH<`6k(,-
&6ALB6psG<7ZH>lJUp*l>T>CSSiV"OX7<6o^<4^F`OC@?#_K!'=]nmnQBn&DeZE&"l-cDZJUqUgY-kR@
U(K[s]68VmiWW[HhRIQX4fiu0rdB/%#_F1TlB7^/]j\e_4Ztrf&nkun9q+$m-RVEMErQ(8D]^'ne#,tX
'GO)0QB73D<ZsV<#sf+*5u[mse&]U$2`J461M8a.3%S19@+VPe8P)K/B"rKS(-PY)9Un(>9$3B_'NR[6
*^#7LO!"^[<,ksB?HjoDk\4@0StqU-M2A<m?FXqTHOiCR"KCB?4$.N+BOG3jAR5&YV+[nK5'uu3HOiCR
"KCC6KnWB,XBiI3p?gV2Ui^g)k;9PEVbYle#_F0)o)AT7)V,iH)_34;;,L3&G3q7,4`om!Frc/W#_E&o
LCXW$*&(cNPbXn`GOOZNFNTgsfP(VC+:(;*:JYoZWYO`mKn[M#[r4ndfX,?+VkNM4\,ZC%1Nj[g+:*R<
`5fpMX]lT@;GU),rquT>dF"qmWGp8Bhgak:Tq$iI))C9lM\k#O#_F0),!nmoMNa6fQBmhk31;aBHLg,g
lm2d#&-S-4]mKLd]tJ(&R*iNin*]#DK<W5-=0>fMcHaGT5nF/b&-P91"@3S%5nF/b&-P91"@3S%OVb3"
aOP@MG9`M7P"`5.mYf0.T?5!_Un@_b#*C.L`T6+o&fsZRXWg\\"[B2UjSUb'ij%DWK#iqGU8$8C?cU.)
KnkH`o[?T+Nuj:<ML+pYdAKd4Y]Gm]&/@rP$mE;'P;X?=IiWXPG<LcV)No_-O9g>d6llXWPPUEEod&7_
BjF#V&:`2.KLZ@V$EdXE&el&@md@eq!a]2>LCYI28]C*aV"*sW=m72O"=s9efUCTU`bn.gi71ccBN58k
"#0t?'gX<eHEUZNq"UqWR?K!oi[H@&:fpgJfCXsYl8d;U5@k\Pkg)Y\CgKH65GJZ1jTPM(6b>p&h(m_k
VqND@(V6G6\]N1DO,/U"-.:&_D=62i,=dbN1G`h']X`lUM3X@VKF&<X/R-4AgU:s'6:-9/gSPIL+rfIu
:RX,>7>hqMR[Q]87cVLJ]6Nk?oIM]`JWs>A>*bJ?aiVXsnJE/.`+<tW#;Ppbdu)qpL0l6)B#(13BNZM5
S'Y6@B8RgC28,>0=XS=eo&]8n\$&i7RYCreF`iHJ)7"/93\JU4'.8$K9@ZF/AB)sAY==Ki,$eKfHM,Y3
:e=g`n))G<L,i&k5=SK^);D2Yiu%a&eL#KMn_6IS5l,iUWt>lNB@`0?]uBD-AETS7rn4Ma""/o"7usfQ
X-SJKJ;_!XiBf/,:f't#%&#eW-CQ,7d!N.Qk2tfGEH+!!3HfRhoSU)cp>*?)`THIB]t6fOARo=NnrrG3
iaEh%^S0PJ]KH*Y&Qr6tJN)=f4:\t:OcdMt6@XK7We8UBc6akb)J&qkD=HK"S6HmPbti_CqIkb&`5fpM
XB?2Tm-*ZSX[mebH?'PUiSbq<A'+HKh,Tk=nh`WDG0AK6#/BOii(&[G`.]m/%1dn"a0APT=h&M6$<=kV
.otlul"Q@icnARY]=[sp[hW0W;'/Mp)%-f[BPkqY/Mf1=\Vl@^0BO=of%*l<`\hP_Lchu=3JJ_+.O*ot
Gok,^Bp8FDi-1'C_M9sWDTK0OokHnChI5"[dUAJ`4*Kth;$"E2rd.hohS"7d\?r:`RNaQ>Y@"30NJWL#
Y?P.4E=ZMnC+;+pFLANa2>bJ"Z'Dej\:6Tdiu%_(l[VX?81?MoP)J]ZEPS_GUqeVG3]K*4</c.rlE+C+
R[,9E#A$5M1du#rN#;^l[BZuF0>;`'7U')dHOtONHV)nSPEY\4osp<j?G3A/a+/G^a'*L$b2<L+N?FCo
I8+%&#J]0"@L"-@\9[Zm<P=YJ=-e1n=45N7<`W8s>,<R7+u;e^8bCEI_SXsk^:q<thg0Qn8L_U4gRF+o
/sbnS)u/[FdEt(2KTW5)EZE6af]*3p8Arh[Nje,W*]k4$`6k>MWTnWlekLcEVGEgZb:MOB;T3FoqtKQq
m=cEH`OBs4LVLSg1pp)L3k;f3lub*?1[]Or['ZVNhRRdp(/<JgB?sIkKSl:jSM`8^+[,W"W\Kb228Tk>
OiY143/'^L"csZQH1gIQj%DkDXK6*'=0Gp^8!=Xa.5u/"(clbPUIL6q`n.=sGL3!KQS)QAjBDUQK;tK4
SCi`R#ncE%l%NY\B@E)$B$?@"/0uTRa,V2-g9os5^3oa^C(+\C_fL3],cmHp'Fmu&0^s)`\f1KT@U_Z^
4`]US3Ei6Z9`Z]:lc(c=C%C?,Y-+o8(G6[eE$,T##(#q*OdMN7Qkoc5G]7V@C2,5F&XpX%E_oSooKr-?
o3leC.1[CX+EAtT+CN?V.>%j9L52U>=SS-.rl4Mod;'?hfcjo#O=">P_^QQLJYu;9;SDu,qsSfp;/k`4
Z/G;>UK-m9Pg>sdGNmNZDRF3-k5>&H,"oX'?bW$kFXjN4f[q#D[o-NA[&SECk3U4F['V[S=mk(U6PD\2
p.XPukg?09U9q>9qt99q*Xgt%7MRVAmFdAh/L#r8QfN%2d?3)+84d9"@]8/:f[sm,MMmB#/K$CGipGf.
;oXk?&(`mbkj[`Z)bJ^aX]e0"S"#mKb,`'uo-W4aG'8&*B(>E]JWrlu2D'4?iPUHJp?aqjr:o`qrsjK=
>a[Ke)ZMQ2qjZArZ=O^>ZUMfO^g$68[so??1K'C"-VmXFldVmI^G7i]aqS$"8JN`\4DG3/$8"[BJhm[V
n(t`$RAQkD]6BNZp_r9<lm']Z4Do(U%k5>[QDJu>aQUepEZ`GQFMZ9=&OUfAghlN8;=%nj,Sr+?UghrR
:EP$sFMWP4[,guMhcII]4DIJb:_55>n`.[<95o*!V^Xu#6P]W9>.&+a4g2#kDQ--]+G#Q5%O;Mp&!s,?
\]AH(1$MjPLGGY<:r!e5fd!ok\\c3M\Y`GTioB'ufSpn5Q:DCd;5;.BFmG^Q/R,[)G^rXP4DKb;P7oN\
n(tb+$OI+GTdb3ShQ>`1!YWiQ-bQ!JZ[gUo8pu-dr;:qFWfW-t!fg;@PTc<B]Vf_GFU0'VRI]k2dA'9s
-FIO76;ph3aN/&M\8gG,8^HDVir^a<['VA9/YsPRW)BFfV,8+9ZtL&41>8g41Ks-@5Q+RO7e3T/S:&hi
?U$"i8kL8MQS56cV'hH3_83tS,6n>SPaZ11TL&4gY)HB%91HBCPN,Kj78M0_15&FMool0<:$A?I?0184
#L8@N\6ZdoFX\hZqtKPl'9=+n&hT+FY2\$7>=%_nH/oH]<#d\M1Ff07rq^EL)p,:\m+J_#24O!f[hf_m
PY@C-PQX$?UQ.QeqP<'D12l#3p5pF\Hmh.+@U^NT.EeO^nrhC!LN"Xl/%DV!%pP@BdIu?3WD,Ts)dDIe
k&GB\3B9*CG'7+-s4t;2`THIB]t;?FT957e7RoIXhuK%TDnc%%0,YcnH8I2ehGM6raKMJZa2a+F[U$Lg
&J7@-&OA?;GO@#oC@_qkfVO*o?#"\sQiOH/frL4$N';M0a.[=u@WhP>E)hm1:*5dsm=b_E7jl+Q83J:i
7n7G\k3;-PN<UFF*b$q28)u)2%.EH^-jZ)#nD1&><"MDa6T6q_>,IMt-*kG#VG*RD\R`%%%j);X9>7JN
6XG(YeuW#nQ*H3[@:?u0$j9j^ib-T/dI/81/55aej<^S:]MW\ea4b6k4#b[O]>IW+Sk4E-g_\++6bCqt
BlDOsTBOqUZ=V5'bY7Hail-g9]<\iP'q93fRPc;O.`lV2C4KhgS2bN]lIAl,^rNXOL;H&ucC?o%1g/gP
AUj/2C.`euHMdF'`C<=V(bn?Y<u:kedF$XP@n1+D(Fq!dY#U)Y%?d;"]GO0D:K/[[Q_TMRHVJhMb@NNr
X@r8'-$ad9rnZP5)P?*QO?a>eLPY^#O20LMENWZ`:+[h?-:ZF6@qoa.2K)GiOgVSSCOWOnYuTTOhS+EM
E8a-NrBbG<k=LBRe^_&nK*E'Qd=2&jd@r`c4S[W.P_Z-KJ,c,.T1X^%j0%KUlI;e<9D\AL.j\bOGW8E@
p?^Hf<?XjM"jVeBEBpjE7BW4\h+nP_eTdjf8?g\!f19$4^6\6Ur82]t\&64E)$=J\@q3D_I.QJ09\qb(
ZF@<0PW_#e=^PO.9DRl'X"%n2T0Ih^]QnRh3d%shd+$QeEH.]C#GZ(FQZa<,DTj]qrq4lMHo5#TRc<Af
,O&?Wp$-\sp?g"K8"2DRi`ad+8J=ZoJgX?cco@uWZY,W4$Mhgm0R!Y<@ooS^K&`SKSV/W@(eUAIWo=8>
X(qPD*@Y_9KA2Os-V7&kZ#.DAS1Sid^_Pt6QtVV)Es6@#W^]la&sZ+PPr`8Z?e20g]Y($SipH-X*B]SS
WoW:'4b!>(lIDqZmbB8aLnY4W;r@QNp]'D@rt4cC_)G.c:Bta5$92eMW,b;n)AsDE>-s*O&/#VmA$b9j
.J`f80IY?A>:Bs05Q("<V7\625B_K(G(D\3275f,%WE5S'UTf([0jIfkhB(QNY4!4fg-]p^?!XYTeaBb
6+3mB=d^c3%H=B+%tHl(`EL>LbRM[V!5aHFrt-Ie4!&36PMEl!-kL4]7i-`iEOU8XP7W5<;BaNgrr-:]
i'?Ddk-EUL:_5\O8Io+=FmBf;fs><eYmF<+;HBu-h5ja8.#PF_YJ:'_d%E[eOc_,1HKWVHs7Y2cg#ms:
c^[#5p<WU8Z#&+!eu`0".%o+j<?!o:i4='sB\ojq\+4l4KQg.9qXc5h!%k<CNug5uhLmB25UI7jGP=^T
?]L/,>T;U,5RZ8W&J5V7)E!+N"pP:n>M54PMuk^M8?YJt*QQaW'07WN?GN"46A$P.$>5D2'`hCd.R`h8
ZJ8;b($ne,T6949$"jK"Y(KK'C_*hh[#O0m,+1/R.#hNqIs"d,E-?C/RrNIh@P9&R,d>0,9]r2fP+A.<
;pLabUZ>_M:$>&TN>aZ*/M07Y^^6GoIm321p$^f<cThG/3RbTgq_gOf"lQ)+Jq?BcT7N=F*Zi%e@H>Ll
3]]<u3hZos/E!gYH?tGWpq4D;VS%BV)I-HLe<DC\fM8qqiI]-EK<BG@4aL)tD_3Ii$g`sj7btXuQS)P^
(`9c+m94b(FQ'oKf<-c5]I7._MNC^+7J2sA.-ES@hjE2\cnOrZ*%XK:XWGD0q3S&<<OIF1Jd2f->e+kY
L<?$V*0hJQKZH\3*m;[724;PQC;att+J):?cQ85=k2it`Z+\3l#m]cKT-;c;Kb?&.87&@4i?L%ki8A#4
37s.lY-+knJM'JH,X4Mc\sWd5*"][R_[euY(ch(T@@1VEJcEo2>C]4ks8IFH0g0Kf-;9fBmWCkn2f@D!
`F!ukr;"X/4#pGcEH-R*Z\=*%M\[mZf<.gUC!`LR\:3@e:7aS9F$bFbIeff[X,F:!Q_o:HE\e'LOclIN
N'+^rmq*sF1hud@]6B-^I5(3GY[N0USt=R<B4uc``^U-R.-3d_@+hZ`:2$W-[:';s72$EiZr5,JgACX5
(G/h?V+VVJCBhKbQor]a2m:_@f1JP>0%n!6FG!uh#kBgGoXmU]jJO#oA$*$sThlb?Phr3dc%<HFd2;FZ
e`p<T!1PoccCVL;91tJ?jj'DY@Y6B'hRuRc2f.,Cllq;-QGb`>HrD<(PEc.CPa3k'_B)C'/ct54mG$&b
5NV"gSNhUQ]f89i\C3/`0Rnh&Y?[]U(JQo;pb9s%BP@22j$tQ32g4Oi[YeA&G#d+oKEmQsN-',^RlPPe
K7a:$rm2LL=B;Y.Kuth5+cSHWP%bmTd";1E<RtVZC=>f3X(j=<mbPLA$at!/\?W$4.1I,%))>_n8kOu(
O'qU*aJhP&?S`ks(tVuroiWW5-OLV>A?e9&$\8g=,N+,*)6_ICj>V#6A.?H%cE>YJ1b>tIe#">@5m"Q:
g:(uR2Qt3<k<Jt@6YUlO^+p30O*^KaYmp^#]C3nRed@uh%+jfVi:uj&EcOLc5$^T6"`i!#nb2Z/m0bP$
.6Z:6i-26Kf-(NZQ;J!Fl1I\[YGYd)\*s>,-FBsOVUuI+($+/""X@>V:;?c9%"5.[BdN4J2(I(jL_1la
&>ggNSuc50QJI"DBdAbEoQ&pe7:P.CkagG9+VDc<?Qc<(jYLHA#(\.;g%=/Wq\kSWp;CUWi)]XhAn-<(
(n59[OLr$4YdSc:8Ehi51koQ+e>XYD7JmY#r`X,S/=XZ2f2i:U"FT:&J,\-BaG=\JhnFMIb#,kS5t\pG
MiWq6Gk'e0K*Qo(nOKUK0Hp8RQXAZ4IJWRbkaG*\%&I7AG-kJ&s8@.EdaPN/J@2em$9b7;</upC>WM]M
YVU&S56Y@SX`Bn34Kb]T4*OHk$h/G!c$8pH<<E=*G#^+W4^Apejl'QWWiaWpm+$n3o)8SR>[BsJ8(-8b
;j8DZgfL]g+r!DY9)2u<>IA4bfn6H1DQ1ZS+9@If#nIO_\HTR['kM2t/9]Vd/?l4UX^E=s,!'o6a>U>@
gU:RD=t@J1Nupg!F]8`d[n'!G4>8INVB7[1Pj1H?=O^/:ad5^Ps%VK2Xn%_J/b$0JQC!q.-$'"_q,6e#
1n1Ubfs523eK+\&+tKMrKjhmbo3Od>5:KYq`KL4,&Fq(Z6[g@MC"j#*+DVDD:6q=p1c,nElKdd!kN@cY
8ki%If<6:OmEhQEl-lQLAuDm7*:aA)/N81Yq5;;J1.+FH4aZl:WmmF``;h^`1/3GcO9M^fYsQ^H69SoP
hbQ:)<ApuS>#jVD\6HF[;@3FHTki8_>]o`*f2n7DhN&b7f1M_].W)SMlO<@H*u4[U9#ct1^Mm'G#S%>V
D(d"ST[YNF"q?0Ke#-!.PTWceI!+)G@9ds"RPe$,IX(kiq4pTGfK`\)4[!be9D-Q1//'@(i&6L)8Is[/
o'_="O,4MtEb9Clr:rruJc'&C,1s9fUu\"GI''F9fWg&<b'ijAM51bBDr/\JSs=eW%gLm_FpP4+_Jck'
H1HKa/uK0c>Z!D6I-hnbM]n]OD]W[#V1rq:-72WmM2I0?7s35,dB&12]Qg^0HQXmlc.Ud<%;;qGXkK:*
F$rdh+<nUsSI;eQ29P.Xn`.usl4dT)<)f*MR@0S8$k>qd\ol]icth79]mKKKTtZArAX(P9X5-*T-'W,m
MT8^Sq"EC8cC?m>WJ%L[0K/$L'.59sq2:0Qfcu*t_5r0I0iPsAYjqcPk.*gHA'!o?"pHQXeFYTYd`fq:
*-K*%e#ch5Xu[u2Eh=?V3\N.iYJ0jjr>%k_*;SgG,D*u:(N^+4lJ^\F<]CEo$R&[GlI@%\n(t`XH97L@
C)Yr3.PO_QP`!gd"ir(q]RVlGP]5*/a&TNqqt@9`rVcKJP"PNBf3d3q7un^nS;4k!R>gDX]'t1JR(<_c
cP+:9ON7?t$r,dA-\9R64%iBIm+F2[[?WW+VRX,q-722M6VD=!.L^8B%N[abXB@@Q.kin@^OH-m]%N[F
nauJ71r[PWB\Tt4=0>g(k6o\bdG)-KkI+36o]Vti%Xqr!,g6Vfo^lPFfq_1QYbIF8>FLqHZu+R+9q+'1
]O-0eFi/qCld`&6US@p@([r@Y.2IWZ.&H"%eV$-I6!P_M'HU?+5(381F6RGiWkl<"Bss6mG4+/-<Z2nr
X6@T!\0kBaB4$<p6P@%i<8PtOG:oL"N?MXiU!dGlXfST`1P"_XoYfe0NM?_FMe+l/pA+;mR->%t18J3f
G'"7Hd^*T4Os.PsjMHTY?+P,dm2ng4b$:$*E=rlsS=H+J^F>ILX]c`,G-&1nB,D3u;6Z!W_@@3:-:42&
lfM7!VA8R#C3b)M0\Mau#eMGoZMX1P8&[W1C(aZ,<G5O.;f/i=#El(%2H1H;\KkR(M&>e8K'S]?e>ZC"
F-0?uK(dT&B@!07V<"GJU`)+*PT3Y^NK'L"SWf6f@K$fS(H6<k5diD,)`RK^o2C=WT^KI?q(aWXd)Et8
e>Q4u9**Wc-;i]kK%]4cn_@5<W"^*q?T,$8FA[ce/&eTiZ)"1kYiFK68Wsk\W1Pid[ah0`/YPGbe^MV*
PcA<di.3M#&9:F[9<G!,nkGT3EL+tI8J=ZJ_ilHDlIW3MBkG\_/UQH1KnXeZGk:&,pjgPS0B[pbo^qcJ
ND&4B)!!&?T$2(dl0@QF\[c9`.f62O"=]naP#9B.7q+BY'H>gO^K!-_J1n^LUA+*3PP[`0jTu]=bm[!-
VA&!jY2p%#a?'cRa:Q>2O?\3lR$0F"e$IQRe.*K[^g.TePL#jc=/<DH2f9HN)KOAFgpg5<&,>,$LD;=?
YcGq9]JF3GKSQS=[YLe!Pq/VoP+,Lq-7Wi\8q*gU@Yp)(V30r*mG#+np[LN:cQ=A6=pT9>kjIO+X(_B;
@`WtONqn',6Z@'HYqb="NfKVmZu4\<KU'4i&J<Eh;'WS^?sjN^(K^.l%NdmYL,-ni;_g9j(X-)j?_:WC
[C<Uu2>dG?<"*?";'K`'C9%CoXlR'n-Gmfa+5=/:_c6q_EqqoRXXNaG%j:rW4[".F@'BZ)qKq3[>;V*4
oO3I(T9Y[QBkb[l7GYOtQS)P^(`9c+m92"j.iQab[;4A104+-G*E]hNW@>HhR\$+rmh7u%+X&#K`l>*1
R[KRL];?@AW";?"-';%sC(aZ)?M+/LS2[Pa[]3A):ge'Sb>ko]bo/T+<FWW!KsEkpZN3)E/Qggt`)8@F
*<(YM$6_JmHc(RIH?sl`,D*;0[&-Qe`p_TiPq,qA<Lc*mMT<Re?+L050+o]P)B+J[L8Z[r-)20jVH#"k
>s*CM=t*iZ%5`1NQndC3ki_+VYD7Co6<n./@Y_JMlW?fa;#)OBNP0F/*>5lVC^g-n3=:Zf#;M3sN-',^
RlPPeK7h'n"UfM@g6Ine,\-PBU7s/>Y,ka1@di0edO0C'J<`-6IX,Z-]mKL.$lQpJgot3S+!2S`'LgLk
-'V9t^J1cson><+[]P_AVNneqeR0434aJroL3E.K8\&qHjsT0%7W<[-<Ikl`"?o"I#&D:*Sh!3=a:J.s
5)-_OYU?)0cD76uGO?G$FuD6:'s&=\hT<lr%E,AS]=+c@l_dONd%CsC7lb.F,'MH#9Sbg2P2E9C?=)KE
&L1sd/R,ZrJ,__4XbYRnbW<rd$G#ZT#*F[bdD3rIo0gD5Le%r"lu1&%A8qKL]7'GASYVKsp?Z3dK%jMt
8i&4X<ioP*X&^f1&9n!Ckp\&]lkC14Pu2-2V3KcBRa?gPLm(>/'jO`h$#$9.SK/_WCi+#^`c?J)pp$QU
s1eOWfKj-HB4P(ar=YPW5@91:h_(Im[,*qb'+7tj-#dP>OsR2g*]nPHI($_0kKX8@)R)X>)`B62^'^L,
6E9B;U#[t$WROYCnr]E24*9[_DYpE3W2O6qace*ih2<(&QD]>hf>uTN6A'Z8@mPo"#3,30p_`QR$A]iY
/)6j(0RUC;ce7+/S6]t,kF[7H<)IXTnULT9h\IeIYQEOR7usUI.'sed.\\CJ8gJ4VL%m1]VH$AdcJZNk
WF$2J&0NE)a,V/`9pm5mSie9>7gKDLFN+5r8iX8[$*TQ7&dP*?[r*YiG*E;??XKgH:/4P^6B&_SAE@aQ
Q7Z[Jjm(Bsh7IlD9)q+<HLtl*:>V'^M[IQSjk1k6@u0?GeSXD/O-Z?-4`K=E(h*(/oYSM`,pdp8p8um^
b-:F42H?tgbQd'McljIRai=p*bAmj3%#dn/L4"e^A&uh]5sYOB\^dig4#f40:u(^6n`.ZEL5)3"JcdO8
r5H^s%i[Ec'i4u7K:P)Jk2@a=Ul(pf1.o*)7c4c4Cg)D5TEKci?u9aT,CZD_UH]-MQ'M%4j$s[-`5KTJ
$Q%7$,FQ[XB7/<7U".+?R`+<7P4B6f=E/jL*VL0ArbN"Rf1J'BOI)6Vbfi8!qG</ehRrZ=%3$p*](G.0
)mHogrq^F/qXlm13h-J9*BQ/(6`+?i.4H^pVb^rd=4aHPCXoFb11j#f2+L)HPUPdn'oZ5mqtJ\j$hj;f
V%d*0+BZ8Dh,n@Ei&"8*EE5WpLlEQBI99'EGP:CV*^+g?0tAoB]);8k9Mrhaj`>Qe"o">=96G8qW^tnc
JuBWg/#/?Y,gf=:Ro\V8\OpQDBP>/0rA;Y&bj)#>HJp-SD'S\'p0C42,[,*IoCj7kcoCo;*%V4/Q%Nl(
Y3k)ZHh$+7_hJWdfWjIe!<X)h=qhej(_[Q-2VLlYr;:r`/olb[nDM.WmbPc>O!$cf\r9NrIj9--KK$#f
.Xojhc-8tXll8-4:jd84?74dXKc[7$1D1HsA/GC\`;r`4Wl:'d8n_mOX&c?)/+(oigZ?VFnSKM,(t:oB
ad5`&6b\htBsi?anoDh8++O23>0sTGAH$6c!U]Rq$2TeFjsX5r,Q@g'#*pSK6[mZ`3Fg.,"$WfSR2Ke4
`l?"A+X%\YM]`X0)]>J#pSLsT]R*B(bpDbW0p@0WAEu#A+Uq.Gfm0/;=9B.m+n$[Y-W(Hs4Et7PDpJch
^:sU?mFs?,(I:YZc"*(0pDq(&'g&'_kbC80<oWqF7<WSl?1`dOEL0BF8^GdT<U>@DBdI;:9,n'rpe&ap
s84Zgegr]j=%>d$`PprVLCa/D&O`M"?N"E!Ep=4^RoZ^k"MmaF)p,aTA>1Ai?URZg9HN%*7+,+h_F!hN
5[nUZ2"j\L-LlS[H)`-8\UoWW*b39LMoj-i,Wq<->=GFC$@Z;3an]H-`FDfN[FWRG9K+mh?!U_o&9m^+
aY.#$gF4V>&j1R:nB."H+X&!ns86qKAE:FNpYNW4Mi6*k&#calOtW;*Sgu;%Bb_@XAdf87Do2K7k`G7Z
&FVJ%-bISS]QBSNDC\]?n;`)=&QS":ZJ[8iqdus7$9gE%JJ%lP!1D>tFKHq<p.XcZ&qp%H<DNu0$N0i"
)Du9JY2\0hgA^cs?g@7r5V%J>K7Egha7U(t]Qs+_IJ[Q6?:GLrW4.^`"IiFZKK$"oPM=\]chR#4=m72O
"=s9efUCTUQF0_42p$`e6J;5SOV7sR&6Gt61BV,#MBO&c#U(^`=&4[J<>fT``"Y=7ff4!27%6)O6r&nO
\8Xa)3Z]:.UIUBJQ^L!`p:PkQ)@[H2%oknb\L.Q)J/rpN=TFdS&m*BcXU32G1XRJ;Q]UR[dTZ5$0j-J*
-l9B4Ha]6\R73@4_Eu'?Le%rbk6d&#jPX)\g+BZY/E<p4D%aKS\m#MZ=7>"Z=TNBjXP(FB#M!X-oBtGH
*ZcB(8hO8PAGl5mQBmi=>IQLK2MOsD4aQbuq=E4?>K<Sn\8c"X<)fPXiiC7+9;)\^I9.SlNf9,SRoTQZ
9Ad,!81-$Rb<1Tc5FY^5^"p')AA\Js^:M[I\nSFL+#?;W#@?rS3MJ7hV[eP1"-7JsAVFr=6=7PkXTSq:
$)9tL@Kj,frVE+WT"2DBlI=(N5(,J4j9VZBDJj@jqtI9oX-TRAB%<q`2`3Hu\T0!_,p4<Q2)SB/c$T*H
dA0?t>-qt:WMsTBA2J2Z\;M.V9$cMWir^a<['X3NOIVi"?]m0BV.>el*p=4A;:X\bXbr"WfNo:2a69_/
2Rse(s-81clG&1Cee&8->r#`jG)'$;*lJA:``YBCYk\58Eff!]NHhZjZ\F&<)e\WC?dG,rVcpKCS9ED`
=ju'W3B]N2c$D<559E:K'1@([6UO4Dc>M75;eP+.M<otr4?CO/c`]ft)C9Mg1c/00QMp^TZ\_24*/WR7
1/\9ePS3jtM+t%EJmHlS?9F0VoJcDHP*[OudlY!>FFDfh8k<KT.`LYiU+t_HZNV6s&s?4Vhr8WP:KCL3
Lk;4i*]FR]'*R1=M\e%rZ<nh#+ugt"b/t&R3/t5j\T;E//Nn(2!5Aot5s[fD(3=Qg\@B&=S/aUP4*j>"
>PmjE]4,i(n(q?GOVo#Sp]2fa<E;SG\4s$teHK8)?UG_/(6'&bWJIuh4bn2^e]GrJ**Qc\aNLh+.eOUg
CmKl1Ao2C5kDjSTSur's?G5@RagQ'@C6XV\%2uaf]$`o_h7CR,gZ%8RCY#QnjZ>LaEk@j5St93#*ZcA3
1Ra\uLpR^=(r%,gUFOG8"hXj)"kZO"3W6_o$/J**;ukkg`/kLpPJ+YDTjdFTDlcm8:;?f)Wu?1-]::s/
oOs3kd&U5$hNrC;/1dITQ7Z<QB)[9bg#Bu/fqV#G1Tjle7\k<mr)TUK5oHNsI>@GRQC!,jee)_W8e9fJ
Wq&+$78FtZGLTHaC"&qDs894W+,Z#9N251:I/.e3!Ca;eWMqmpg,)tOFBukPG->8f:.pV(M.*Sl=]oa0
R[T\&bmQ2Mg=i!4?>M01"tAX]N%ta9]d"P5a\,*IDa6ZW,]`dNr74.(Y!o@=s1NdRY2[X8P*U:[hnNO7
k)C67#0O<XZ!f<"H1OL0>FV\@hVMR:p>k:FI=6Mrjf;Idn;C.):dum2kN04D43&BO%?ZI=],Y\6B>*$n
hk,Dt8L;^!_*N]$/1iGfR:jj;X[q30P*2bKL4t>df6r'qg$65_]VH8$mHmW3l0@PkGfR^V%5Tq%^O>u;
IR]S/b,>ArZG&eABS](=NP[,L76#MZ*0n1"ENS?bl`\(#AHi;A<MXL2rr2OTNQCp#1G^hi/hJY,km'On
h7?$Rp?^Ir]q1@K_&_/G4F$@s=gNSPi<N.Sc^d.AmZP_tA&n)FitIYS"Unu3A'XTfL_*V3E=,bZp?pa0
,nIAD0,^lmXdY`K)jKUTmTu$HAS5Xg.*]lUM7o:<OMKFYAS!1$OR2=MRW?E,)=7$c2fG#Z!V>mQnB9i$
PYm>9if!$h=p3Ot,)-VBEXra`lR<fegnmf85k!:,>moAa_&ma]cDBh(qXs/p2_QU/.6':H2)UZ4kj%HU
<`H*:S"H<KcbLS]E.GX9J,fN=4^,ULrUA"j'9poEA)Bu<C<ZZA?8o$-Xd?:eL/BcR&eUu&=t9%M@nC6+
.*F<1OsS;-N6IYUp*#9b0[7u:QXs'0N3+WU<+6Q8d_;a,s#fnsn+>C>h<O^hX8C]@qpfIgk.0AjSo_X/
4Qge"B2QlL[bh>d)GgO@=6.lmnoWDeg8O])X7bf/ZQFD=f@TK@WKX$L+cc?I=CpL1M6r5u]6B=T#-Y,0
m*VR5Gt[bkc*O^]UaM"WMkc81;Grn.ktnj_FRIpeqAM-9?pI19\"_q9UFVk-Y5pM"FI/N/gsOD^.YWG)
!P95<R@2GX)A0gJBkN9f=?AUV3g9@9qd[h;h7H<B\$`W?cQ.ud4kecLIeN-]F6ChkW<KS0*??.0T,l+*
N+2c]QFi*)k72nLW.FFL3H_k[4k89X<(0/o9K..]=Ea;CZ*C!6'FQ"@%IWZPc@!gWP:,Zi14K.GD!C<Q
/FgAcc^rZgH>=cO,_UUe<b2!ffEYq$;<ocH?sEHLB\4ctCHr?MEsc!EX7i3Ag4Snd&%KfR4*MGm>j1G:
\Rs))G%Gd@S2ms8^3K1"`<OrEeKqE7JRh&4JTQ6TTW+oINPiZO-(_0<X7Q/br;:s,3BVW[W)]m!3/<nX
B>Om$(I1H(Ar,LuUFB!4Y5pL'mjXcHCF"AXOF,mkMq5KM*BLDQUKEuLCaJML1kqg%,j$VS:7YR$&iu*g
$AE&&A^'=^rd^W1R$^E?Ss,AeVb\CNBl%Tj<)`uBS6Q%3V=@\3a.[<7/'\Z:JF#u0;N?1OEB*.[GNR*e
>42k/%GB0+/6d4fIXZ_s(,[d"OSP2jqtAR.`5]e$>Iq>S83DCplBR!SKCn/'<`[r-g#;":K#)=u%>Y$?
9(P[e$t[5p@G>f_p:W%N3Ua_MQl'#tXKAVXP0naWqU'TJ@$&@%/m>W<q3K'^+%s(=9MADe=3$WYY$I7M
F^)=m`G%1d1bN.L%,[Hm!?%_*:6=L4k.M0a)Ghs!Sm]7TAa$'-lMgDDcp5nRn(G$[[,e>lZ_h$?G)b,#
B$Hbr=gE_+'5KF_7AUM&Oaso9qkZrP@S9Wu;]4G7kKY+E,-?n:gpWD&+JXU8A*'GYHKs^,mLNlZm$&3Z
&YHD^j^Pg%$.RN#C20er[a39Ea*I\b<`U8*I$dsJ=gM]t?:M&uXQ\GeI=2J2$X#$\\[a_GMij-aFQ8UM
PSPiS@*?pDd"]95\@>XJ?_<YBMM_c9aQ*`MkWdrJ3r9RGBeRMW'Y>/V)$/:()S5*9AC-jccF3&&.RiRP
XkS[G-TLS6N/W]I>IMo4B4>>u(_,$Hf&!oV,Fqh$63=d\'T#6%$T6@lmHs<*qll=p5?U:E>NYI#%j*ug
O%etlN$eOX*%g6JSmQ/1r>Q944tBH9%Wjbi?XbW2X59rP\cQ.pOd;@ki#q7Oh7MJ9ASc06=k[`I[]Rcs
\Vh7WVXlfhjp^R0FEVgSn$91%OCB(K*_r21\8\.8DgD0L-%/9qba:-SOXU?3QI2EnoYW_p5[ZuU1j(3^
"'Y_jkl+;`eck=.WZIUXJkk]'jlOk^<18$qB[mNrhD0?^'(oY7mu>m]IeXHa7EM3^"-Z03(1h)iEn-p"
'buK6*MO:qc-<@hVbR]O:k:mikibS#Y[b]`G*d8a]Y2##lah9,>$IA^S=JBKI=#ejlKTk:>KFt\fs>>M
;c<fK/#/58P\;g>`>p"u\;2'\fNR)omf2af*lT9M9<k,UqP-9X6LRiA.OqBB'_AKkTQ]P;?>=-3:5mha
9D1SmF?:DU.R-.IeZ)Vs5+d,%A`(4MjW'i10pd(8Y@!@.4Zn"gVhQ*.)L?XQD#,67*^,ZV$'UO81c.&1
95E>T9M\H^DsliRl,b(03&uDm#`%IR=%r^@Tn5&r-4MPt.XiP[![TS8R[?`]BW&k1A"+6*hA$J1&JK'[
\*,@7G;AeV'`q10E7E"r"3V]^k1_A<huI;dfr2W?P6^Je^,%JuOhQ1`4PUPi*R..\5CE6FgU:re%2UQt
:hNnaW`?*6e#&6QRl>8GN/X!.$"qJL6!iBZGAf%6b[3#0]LWjKA&jW"naSBqs4qnVd@$%40`jNu"eegL
MC7A6IV:ts`Y*&W'QP$j?Wq`I8W@YoNFQ'@CPt#BMG\o5=989hW@0_j%sfG?_+j:&6>Wj\\kgTL,ipJD
AgV$FRlV60f6e>'_M&@Y3]]t1Qp,qE>$;j=4Iqt2)\`uSAC8TD$eKL]aH?>qqXdB//Y-"\E4BY$DngVk
C1=i"n(q-L?HKU""U,'qQBn<]g9bS#I/3=8#7bS&YX'NIdC2LK%NP9'`=(Aia"]-9o;Yfki3Q>nW[";5
Dkcb(_uds/F""S`_PL(>etp2KBL.(f-$fA+H-E.E8]"o,.5cm%l!3>ucY3*O@KE8(7T<PhX$,kW5Q--/
Bf.FI4gJ"4(Fgj_nb2Yl#R&B-_!Tmcj6,3=H!FUEO,qVaC1,Fo\T29Sk;Wa\HM+:IQFi'4MX]r9PZJBT
Gs's=\T<[eMe1'l-74IXFn4Tbq!o,P.`c:@2VPfGCtEB;?Zc0k^!^M*Tp=*m23*[_L&R$I5cO2/OpjAu
(o(;4cm:]kb7r(qaE+H0MkkZqI@c67LY&Tq3LJFu3`Tp0.XdM4TW>-jgMaiHn@R#k4`TK"VKrdb&FfPh
CBYLbMePRI":ga\c_'[ai36b6&jJTFgcCG:F2<G3UflZVMrN[-N/!mt@Qil<fmR(%6[.ClR)WGuLNZKE
]f(3:.e8Z2B_H+S8N,qMe;2`G]3Q*e:*RmL@RK/'W@7F"FA/M9pTXhT`?Ip\0'LoA?f?BrL9@+<]/QL=
'<8X$Kf3rjO8Lq65J<1j@5]SbWdk'J9JIPLG&1Vs,59fbTV*DV.4I;=qXj%$5Q:F&Xdd&=^0"f`pmI5*
OI_reRE?Eb(m"s`n>Yb$#DZk)9,j0WVF'6&ZD(/!q'\Ck[;m$!;<&hNGNJt_&*rLe*!Vi_\"\td5uiQs
H.N6ZG-26dAY?,KXH^!&]R9JAh*Rfs%(psOJ'FE>q>":`Gf@Y@H$S1-ML[&_jCE;;B$Df:S(Ifu^e#Cq
/YQeFI9T[1@sI_HIqP3lRB\BJE"^nZ2=HEO5)/!":bJurX`Y4ka,'nt"oP5)N`d,K=MVQdd]H_4fN(p?
Y$\q=)R4/6[bq_9_*&Zq]o9%=<t/VGBHZbT8e]mshiPJ^0mPIa)[lUD$,@4GF%<4+IaWDZXf7LNb&Bp.
/hYH)gmkppMuOSXKN;(sp?pa0R]fYf:>c]&_'KuDG_9&A&C[:$VC3Toa_HAsj3Zh"GW3b!Ks+iMDf*'2
rZuh0B^mA?k*9seiqW'(3##qq)I9jl+`+D4$f?F1/SR:`D/F6Jio#QM<`G_jqpD'[<J).fpPHRUI"eB#
!:<rcD3C&#p!]XQ8JDn+T5@ci(>65&))Purg&;ss$Wkd1jQG^<]=[\1HnlfPKu/@jJ9#4WWE#H'.oqa4
qs:Z8^`eSf"#>bo9o4R#*4t1NPQR_p5g/N5Wb.r!Sb@^Ge#)a4LjE%.%MmNaT%'/_,ptE%dFQm7\]/Dq
A/$%)%1V0Yq>0E\8UGmbq<-ZIKoQ8X/#2ocaCb[aqand^lTWhC'TR213r3TQR$^VhMXKATcMK=f:IRo'
M`$BU,t^qj;AF][oiE.S*N#2b3B<q4V/`Jp>Tt:5J9cPL*25EW=%4kAN.ugc22LpB6*5EuQ>j0uE;4_P
-gK]"e[V`Agh4cQB+S_jjlP^i/i95$<Eki6UfrP3Pa%DWH[?,'!\ut"J,B$9i9/H!RMoaKAP8@B2)6qU
4F(sfE\]UBE@@T@VERNAa,'s$F0*`H,jmT,NkT^`MI#9t&tlpB:e<B`A-HuA:Ln)`2OX)W7bLr"Y&nDn
lEk9SQsltsY&7?D(j#u_TMR6Y/Ls0n[Sqrua>enVZsQV-<g13jTh^.oB+^jZkdT$fQfUkX2VPZ;lpBnq
6Za\FFW:r-("L'KJ#8Tn*BQ/60bLu$T^!qfN8BRa[K]`aQlZcTE'nn2.b\ik7Z)siC=IrqLNfC]bD#Q(
BNXFI=8-WipA:Kn+&pJojlPU9GOH:SKg\N.I(lMVB7@RXgrfm%H(Yj,qE>RpR4B$Y9JAs1DlJ';<E,X?
#LUmnP&$$Fd\1$S7`nXdCS]U)`RTu06*8"7AnEYtY^jdS&M`\(X]oa`0Q\'q7;:a:>$6^-*CW=V<"3<V
XjKp/+LoB[aNm<0=/!?U0c/eNM6!PV'F&`Rs!G"ABZofliZ'q4-8$prgt\F1`]JSCE;U80"/m26=[j))
U)#5HJ\^8:E&P+9?6g]'nRB3Nq)OE0Z4h9cNRk4PVLC>.D)j(rV+XC?+$YcQ;50jG6s[<A+V%Si1Ooh[
1hF%m&FE^i?"R`,_R89o\`t=213N#=.Aemhkj^fT9ETO+N`J,2hU2QLekU[C^:V!=T?elo.MN3l!WpMQ
aTt]TR\5U/L7o2BWs1:0VE6q<E=oQX]te.0M7mBAi-IMmDEc3j$biTmM@(%;J-NHaEh,dKFE/J2ZN/KD
@Uc(6XY"URf>u#]3]\0A")skZ-)9_(BZXei5etJS,s?i\C,!3OB^7TdiOj.LFP%CpQ@a$ik#!+e4BS]R
XdflBO+q]Sr-9;'*N#2b3B<q4_+"jKBpsj:iY^tE/i95$eKAJX&Y8k,g8@e1H\1C>'pFC"]'.;?i#"3>
o;F+Y(E-:[ZI)$h>Qr0h7S-1.\$rh3+<X:6s6\k,K:dd;!,g4!AG"`NB`%kP>9!%iPQFKGr>urQ0.*R&
8#)sm_(cW?c_BBj<dD\]P<,6B0mfZe9hh0:D&P2]e^`1Z$O['_!$(([b%PZNg:36u]HcIh3(%fb3]%5f
I/&3nrMZ8Nib'6Y@F&RtW3/p&VP&4C@^?GTC[/\k^`H?M;>pCdB8Ys+Z""F\'>ZI)Vtc''H9N/TlWc<'
ol!FXFt>.r2N\g/=_RC>lL"lHq4Mo\>.Ua0*7oE72UkO'aq&)id"R\160(=WH24$pH\=^/;,TTMn*0))
T+ADd!3YfgA2NBsRQX7o&AW3[HNC7B#a-6+@2IDg2L6ipRHR\9fFkY7%rGL'noCC1aHaun9NP:s*fih0
Zs1"W_83tG)1W)C=@PqVW4f+C/ZQfF$Z-St%bfkd[(CH&0emegK9?nX>ii$qC<rGRjbX)eKA4`h'Ll>4
S@Q0jF,bD=nDX-cGQpu^'Iff^Q]Y9dZ0f)=b>A;Am<g2%b0Z:>`NDet2a^f8U7Cs_X(c,k3cbE5(,E&m
Zpr)bUs=_t$7@5M#`#-B8TBROk2qE9<U^EiX=-P-hkd(_:1Adie=l*r4`LGA#KLLaY%$!GYhTBKVG8FW
K;T6BK=P+Aqg&Tqo*S\#,Ee[kn)<6AkOXOt$AH?IJ:M[-fDs'M]OeIE!X/gbKfk"ATp,AP!!-ao4MHkg
N>0h[>6At16FeUH</>p'M]Jc8fo*H@"#LH"',,5"D4,1P7RfkpdF$ki5fo+gN'<+dPD=r'c7>ffbdZO'
-H`/]1eL:/kZ>o*V6%kjo17B+WZllekkhcd\-O"`WH%q8Go[nGVO0D*3i8aMJS+tZ5u'2(T80k(,IUQb
h$<mu(&Zn;.4msn^I-"XWZ'0U3V$=H9P7L8^I4!o&t9;'s,uE?Vj*^7P*2qO[gE6>U87SAgU:t:cbVVl
&g.]&]m(;%s0QMP1Xr3qkE`t$Tfcku6#0c)b93Sm9fl6GnP+DslGEkld+!SHN+.9gc5hW4<!lN%;]Qht
QsltsY&7?D(jH6ulEDe602p61Z!r:"*%UY*$/DVH4GlL$Q=?ulT70LY8Kn';Z85sS<h5ZcA7n1a.MkrZ
;>pCdB8Ys+Z""F\'>ZIi;rl1R'H'AW<mnn2Ln<hnA(4?hfoBa3Q(e02:d;(^EQkKl\o8;;XRuGJ)6.U/
`H9KqoQRV-)-0d9ahpKm:/Bqe:&Xmj7_bLkVH^>H4Ni"G*B(pKacuZa1!k#78pP^XSiqFR66T3(5+fT9
p$2I&fe:BWB4jGXr:p$DIh*#!5'H9p6q"tG#7o\)HWLMd*<@%f(67P1U1'V3#"IaITdH3j)!tMaJFaVe
U8W^8,R6IRg9aD=G1-HUPSBm@>K%@Nqsr,E&!W^@J5#HWF`JS3:!#N+/b*K/L,'#EBRl]RH3+QC<0`)u
JD/c>b\\@8-8RI,e^]r*it4$5eud\`'.4]_$.d87^qfEQqef=aCu)\qnDV8>0ejCX(#X/+DK<)2l8c84
@+G:YHDB6Hlc:k4"*lqcV4'@Th7j-=jreSL,ELMe5p)\WKcEST)1PsV6Sh+>k^-E*lO8$14d!CQj(a?U
r='4T-0!qDbg"D#CV7Q?&'#4H9Sc'f;l<B-W]0hLmsjrk%6.UA2"X[b;nPL<)2<liCVVq'Dd98:*Om[N
X<BqN0:Y%SL3-gV'!9Qd+.N*U'VLRN\;dARM04sf`mf#sD;]jU[$qC8)qt&_[mYdr22A"f3qh;n7E!-s
Z9*25#N.!r5s[IE,ta%^<&Z`p*3Rk)J,fNHmG#*+<UuVt^6plrR\ciln(ta)p?XeUfW[r2-7rQ:GiQf'
`9,fm^V+gXRUSa)/ndlUGl%'so]ahOp$/BVY-+n/D/X?Bq=8+]8c8PcYpF:!gg3_:l;PuTj?BW\K,F2u
ZnApAIO@2H0B>)tbi\4?e7L5(,(uM]PY7_QUct,%_\&``+f0qm3Eerp;7dl8F\#u7h[K=^7"kfk-JSeq
QQ@1hHp40YWDG"u]6CH3^?"D;SNM1\.&3,qf8("`['[3iC8#qEk/PE\X&lJO8bVQ+Q_'d$Vcn%-;sFg0
+D-fLT8/)Qe<]1:OX!Q[M%_7cr+]21TW(9t23-(6?YKAL</Vu"hpp4^6LrUHc`-kD5h.886G#0T0dCa@
rVO"$i.'oThIh`5>0?bUq?b;j7qMHJ*IZrjp65G/l;/In1*e1ng=k79LKPiHUZgok-i%=bAQX&1+QA3b
9:%8Goq6HnekSt8bRN%qn)(HXG`HH0]fC?,+C/e>1UHlOpu::B4$,P#M2$c)rVJI%\L&XM&h_>Kq:N`(
%f<OcNmW>dqk?_J,>jN%-Wj(4YZ_!i8-&BT:]9I\2e0bT]IS-c]<W&$G@[iE/Y.cNp5#86122gKHN:l:
99nT9q=?X.3m<`;dErOrC)8O0,XJA",[qfjWXi3o8Q^<2kYZL6nT%,ulGm7]rRIW2$XDU-1M2^`K,m$s
OG[l3^:hO>H?slM<Q=J'Qo00_KF/:C)To'%!_H.;0,gL>^O`8LMJiX]aK+@[5PLQoo.>2mPpn.2_(h]M
+<Z<=QBp+#;5<?gc7cp,6;8dfFQfrHh)\_2Dr/.K<b]+>.J8EZ(kuZbb\KhoQ7X<rZ*q*D1#`!%lQrQ9
gDiQm<)cC0"_$`CZm-<'!!!ZpFUpWqL4:[Cou)><HK`B;i,!oj2)Wq#_1=W-NYsWbd\KHLNF:tsTr]p7
E^Wjk9l+Vs?.tY_Z0U-gObcuTf\!^RZkX;jGWNdEnuZ+<n*7rUn)Z<bRC&m#VuWJ[$4G4A?IV`]4Smno
6W@4r4pE9gMMh9.o?ZYE(CQOn"%DlK?!VmHgpseT*]nPHnOpLLd?Jr5A]b]leBt$]1EX>Zqc6'OK2cCZ
q!ka<:J4=o$AHFhji`u4V]&\UW1TBg+p'=B!)OWDUZE>PrYZ"P"sh:2aOm_*"!5$jD/H>WJi7X`pYj#F
N@Z,@1o9')VP_dA$OmPV52W\Z&(AY7^:mK#fsPT3D'ff"lC>u/H1U1pp$6jSOdDETAkfH,-HDh(D*33V
5csD/,0.F\^Bkkg89"=k?!?eE(3gdNV55K/kCj9[)H/Q5CC3dJAnHF<HpU0:M\e#\g`-=q!VG@6P*-I?
F&Q"9k078tQZm?(]Lc<;))A!GS&i[l&L0cPCY+U2a\P/"eBQ8*eLNOq?cmL>Zd=F[(T<Tf?bmEd:aBIX
@C5)q5M%A@GVl;h4F$@'A'1Z&9qb-R:0tPU/NLi+]QnSrhmRCV>$+lTCc-J!b*DauF6:\T5()q^$.HR3
O[sdF77BYPjh,m1WrJNQPsrtY2f$u\d\KIkhVPd%Gk+3deC<"?o($P^K"P?D1AjZ"irahs0X!m\'Fp3h
LCP?!,nFc5>;D'@B06[a4L].[;Gg:7F4h8#.5V23"`)\j+nnlWF`gtp>]:G?cCKmn9e/k5:lkaI!sdb8
JV!(M@Rk+_X]riIEh/DXZEc7^^=(E(7jWU6/hT%<1SaOZ0OTE!\/c;!e[]a6qU_Q:QStij,C7L67\_WR
`s^B^G*[M;*_bMmENmIA8-J87L(,*+p8P=;_M&A3FairENQfA*\#.NbIf8!AaGA,9>?a0G1mBHf=CF:5
kWjp:R@0J#D^-5:p?9nVe/-0H31Q5),VC^02GQh8Ond&?abg!g?XH#Z41fgma,_>&n=R/ZoCHb/6eQo1
pjRc4LqP#,^3;^Ag^FbN^3rY4h4d>re6$;A`//T]p[6jIZ,#^@$Kh0Uk<41c,ceZ07=Wjf<TJ;#:7Y:1
)r8#DKBZK"41dP;q"squbO42u90Bt9pFaQ83&nFVjD3AM-)\_&F)tnAoW9OP%qR8]i;3[mi92f(pUqe5
_9Du=iPUGXfM.r"R9^[f1GbeINeh(ak/O-m?qO'b#7hkLp2fc"U:O'k5(1N<Q7lUJpbm/:G@stPjN3U.
-5f$s4LT?TG*[A:@DW..PHJ3'QC!riQ5n40aQp9Nfcj(_s%\mW;"gGAI(qoUKSRX^mtI;62Zn^L04*"7
LPK,XA^n`>L<^YE+,^;7;,]/N(.hQciScX@\$i^l2Ba4eMJj_cF-[e(/gr-0DN>5`2)VGd-p'M[XP;c-
8]_!gr8d]nhnFMM.<K,I)V>g[1>jCMJ14aG;fFNX-n-U=`GWqh2=/KLS2kZSSCtS3_Nq'lJ!P/4XI,BB
e<WI";UVL@UC7P>]Y(m&%Laifr-"r=VbWddB+h<=fMX+3QBd_8Ink0iV.W+QM_WPL4d2`+1INp]!?V>f
:Z77:UIH;6#<7LR^H\iEoKaD(nFZ@KZXm![=O\%DX/dbmlDL8'C7;7<(`:>qo"KPLl:bYs@tQ@=>[/PG
1Uk,Cm]9o>a55[E(`th_9U;FMXH;I=2P:cnAO*@ks&+l*cZ(p((m*\"R5;5,)&aF!V4h#"kWEE@l<+cO
C._oC@>bmQ862^hWD0^A,`[=:If*<ZI:?Z[]"0r2]QW\2`(qUJN[4Fj4aU4U50W-Vp$:5Q;Y4=J?ml+@
%bm;mZ0uO4$4[7cLl$t^-',SCfLYl3lUU-[mUdZ$RM$Y_:@e5IZd6_a%j*t\,UE<eqsVYKa\iW--k(E3
QV:0>ZsUCd.CM&j26HkA[^L@M)o2Xf%hE.9i8>_Nd?>7)30\\AK.e%>Q![>.Z1!ANJqF(1SiqEi[R])[
CY*e?D:YfAOsNcb4L%A^=B$%njdU2&+^#6q4;e$<4Or<FT$QRUDpqfl>$e^XU%76G+.A[gPO]P.)+cd,
<M2_Gd*U/)^G;SQ9:%8&cO*18`#+9717!C:=)o2!N!/?U$@KBLXcsME)a1b(4fdG<\-O&_8:WSWnDV9l
lHPbTX77r[AS"<nk3M>;=BNXR;-DB_O\!DQ<.*fM(&B1RT0@[.>[6(?h7rmY96+3Yd%E\k*gEZh''5?q
9Q+S_(`66(rSlgGAfK]J>C'>>2fC%__hJVaZ1JoPcsS$o6WqbWphYLBM#.;=WO(CME/&RG^pQFeA7T4e
fs6=_4qeTn`b;<Z[e@_#)sOF:&e`hK-X3$k_9Y\RrVQ=*#R!72n,)RgBA,IrqNNOaG4+-G5!E<C9uFW"
A78mi`KDcNj7'VUY;nU'b[u`mNgB\$D;2K2irK5daBjGh_(6+.e%^RR76nQU=ik^Ag\M@='p(auCb/`C
D;2M$bfdPT(GDZW3HO<kl\/kB;_T4RG*FD&N<Oe1r-?ns?"npt]mAf%jXI]F]Y2!M$#rOO>@('":2\t'
4go?QFfj%64$-YY)3m?'V-,d/[;i9t9D%cm!eC,D>_K3UYh&P<l_:+?E%2uaMMd9YLCV]=kiV$YWDf^L
C+'SU*$$'a*-U]$_<u=r%9o9QC#6K_Zga_[O06`j\P%`AUYp;e8kROYcl`LjEIg/64e4cJXf&'uS(i"*
EuVKb]4K/$k(0d,e_sdp125([:j1V95#n6Vgke=C4?!&-3k?=@mKDg.\[7:&",D4c*j;.RMMH0^&!'Hb
j3aVlngGYcRY$Y]9QfC8NS5q'?&2Y,Q7[/uEYR:]1M4iR"mFdS2g,8of8CFudW6HL?V=OF/hJYdf!ipL
7N4:(PW49F-t4g&Tq*)`Nbqr&bIKlj#nB4TRZ6TZ3-ikgE$S7U*^4t]D;-tCL'nbJW&#uAeZ.0,C"#V9
c'pX^7RkP(KWJhoVFQ[g9Q?;G(72,g@W9Poi'o.D.'U(c,R%l1VTn\nb7>RPY[PERO[qmtkSZ@!@%E(G
E&Hs2iFUiVFi;qdg7!_1]['!h*G$527eB)u>_UK;OHGd*BUY?JI;eCIPl)A'#W.@mgt\Qq+<l_M?=)*Y
:EMT;UqXQ,]i%Hq-^HG+Y1hXbY?no2)"6:mpXQ<GE\/>:RUTf<<<"1"?[VAI0j_;)RGo0^W2L!J:U&TS
:LeW3hV>Y_Mi3MZbX>N6Q_ZZdm[SB/>YSZiHhM:,C2ta;R<<4_&6b/++"#>_.Ore@5G3I/%1>L`m%b6q
J5!o#`VK<(CoR[Tc'9e\<e$,7q5[T#QC!pgTPU]CMNsGA8bJ_Ur("?gTL"3dnUq2^5$"H:MFU'&i/,_V
q=>UH*0r-YiofKkR[RF+jQ"7>,IR=:`uh,s:S'\:(uq4'Ai6m#d)tVG)TP>@6@VJA`sAoho0hY!]O$$4
_46Bk!MFGjYk5kj':\8Q5X<-Nf<5oo]LHXnLPH+sM%Lt%82iFa2'p8;7ZC<o#5.W\,dkE2I/U)c()Fo=
Bs<uE?9s?i:b04;HN0Q=):AQ1*fY>fTWnGo,9H3)!qP8D)S159mG:O-+h-h;YARNW,Id3aIhVJg2?3aN
-n$K78kOu$N]qmf1_*r-h=UC5`<qO@c\-t)m-JP"XOl.3B:8K`V&T0pf8gb13B8O&;as5GP$1PJ1eG8u
[r1#890Su?T.g4%eUi15T%ZRP"fN2>)(=ek\,fDC`PofR^H3kT?G1YRc67].aX>MrHhHYm":3&_8m:>^
Z8-GF=Sg5B:Q:0OXK8LrgB.EU!7e?^[3agWs8MuNbcpqWBk\1&Rl>78Dj=D-?;2nin(tb3bl%D:LtVUq
kFnpV!!!#Lq;mrMLfeKJ[]MHo.p&kbZ_9aA<\!]q?"R\\ldi3&\i;c5f4\)h?EUK8ce=@U!!!"LUL6A5
G@rsYkj[rlZg'F`'c"Za<NB0BaiV\3lXRtqO]at85X>#=cC?nYrY5gDoXhR4!!%P,K;Fc:S1u]OaN_t@
r`W?'AoDT`7-F'u_q_3`p?gW!)QBd<]=PR;J,Yse*ZH&6D/E!B(1"V"'m^,c!!".45Q:GQIJ`a!i6@ZG
B3r?%SWJqPjN*H:^\j7DhQg_9SND%9WR_k<>j0qO0:<sh"G/OKg5u=T1M2T1c!gYQ!!$EtjN/&JKiQ19
b,WJS?=g%I]_pQqF6hG]`t>ecZ16276YF`:]liYlldr=-QN.!c!#j"PJ,\]sl&#(T^jlGf;r$0`%NIHI
qt=mr$ig8-!!!"lRZs/*bLIX6!!!#/a4$q^Vb`rAX&grsF`hP<D0pX,bEjkT:ZCj3O"GW>Su&8p>$;j>
&-)\1:egZOh95!Q--eM-Dr*T%,c%jo7ueQt)Gck_&_mWl!!&r?#7hlOV9mH1/3Z83\@C2:cAm@JTqP?<
.<H4:'+*@:aiOQr!WW3#.`GbErRIW2$S6lcB$;C0S3(o\+QBnZqt:pAlKRP)a=*?^n0\29!2*5WS"!mk
eBu[ccd*sLQRuE2`6m;m]#KEhf<:O&;7Jau!!!"t'X=pJZi\7c`%[gA6m<h8`l?"UVQHeq(c?%B;at]]
\cj\i!!!!uLFH0!@/1a)H8P6PgUD)Y1c1"JNZUL"[cD.:BgSMT=MB1Y&mPbD!!&r'WMul(>_[uf18"$g
Z\KE.qYL%\a^j#+?*p"b+K2BCCet.-SN8WRo&S8t:IA=d!!!!k7mK<>QG;"Q>F1S=0V=i'RM$(knT`J8
K\j@ePI;GdA4V@0NY=<dedNoG1M.'&"TSN&TQI8?\ItsqS2kYX&"bt0_@/k%,*DLkMMd:)bB`^Aec40F
H$MG33cm]F-"R&V!!#h&;H$Kr!s@$$e!U`uX]ri1d=VZ79$a<7X:.V#f^e7RU\0-0baC9/.mQQ)!!!":
:g$rSUIPh=E6Xk2ccXCnSg5p@N]'X(8ZClWJqJ]D8e!N_!!!"<K,Zae0EobIcE>G<rr2oLZ?u?6om?pD
gGWp&J;aO0!!(flh;+VNE$nGQX>@unn`-mNZa4_$o)J4<_m!ReYl1Y+ZTpt\!!!"ZTrY4ee4h%s'GM6P
\&S]AR[Vkg4?U8?q0RC4@H0P"qW-_uJ;aO0!!$7J.4L)kMGB^'[E^$@+X,K9-kqu4Q.9Rg'c"^Jnb@M2
h7IlN=:-ej!!!"<M86nlVMsrt\$+(&2E!JGd`'2%:<WD#hfnPG*?4J&\J+qJ\dL8#!!!"<M+*=<0kL"I
j2]U8',)&0e^^qd[;4CZb^@Qt.G3)&g:FSq&qPuC!!!"hK0ChS,8:LNZsUCd.CM&j26G?unDV:;nrlj5
+a6mO7KEJh!01K*DGI"PaN-o`ECrhqM\[nKAS>bUFNZ%-Sd5H#D#)h(^QF9oUAt8o!65Y-6q#aFCi#md
gY:Im1BR^]HBGWo8kVe^%NL9VETkPm%Pe@k!!$sHB4kj$D&*m&;Co`'_eHFb(G88)F61Q0FDP/Z;Smek
1("!]!,r?bDf6h:?+Y9^/^-m`:2\t'4go?QFd8P,6pu^>]"42n<^K-)`(qMNza%/fpda6>`l;lrBB6nm
8TqNY/<DQDoYcpqrDXZGqldDU;[bSWIJ+[/77KEJh!:DRO`XJSZ]mKLn_TMfLil-hH3d&;(FmRa85!E;
!<o_2Z_j4YXoi7!dJrBa2!!(fLTV0*KdZOl@Rl5,L0401d^juq62MaaFqNg?\JHK8lGTf3lIt)raWNE:
nQ'G@E!QZYh!!'f+MMd9LDr09L<@bIln9DUVF6=;T(JE*5_1Mu]R[Vn(g9k_(fmo"_!!!!=#)d1`7"gn
nfDPI9*?6&b/6UuqkEhX+>+`/]$!A%H%:*7F,,8=F>0NVaSN@)U#64`(<#-8d(UZ_OlI79P+TMKBTX)4
WpFa!/p@$m7FOSIXN;6CT=W-uGzV!uP\^VJ\Sza9K^6za@o,q#a%sl$O^nZze4F4_AR8^"K*MpgXK75:
C2.LT4aT(3,GVWQ'O1b@!!!!V12bmW3fiOrGeD,=8FR>o!!!!i?ta6+U.'u`mFl^Id\UU&SpgJ-dF["%
e'mX5X-^9'G)$PJ"9O.?Q<$==!r**&zzzzzzzzzzzzz!!&H1s"D.fCGTG0~>
%%EndBinary
grestore
np
6 103 mo
376 103 li
376 97 li
6 97 li
cp
/9 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[370 0 0 6 6 171 ]ct
snap_to_device
<<
/T 1
/W 1110 
/H 18 
/M[1110 0 0 -18 0 18 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r+,a\Dn''S]JtW&T\KBT!PLMY$_[Rq78WW&Ah>g3LuDDYR9a^3$7TJ$on#h>+UKcD>?agm_L;LB5.l
?&MgWT,XaZS(U>4JEF:<8%*&#Ij\O6fg\tlk4V\Cp1ME33X3K<UFJNM_o%;*lMH""hP69^UFJM:eL9GL
m-E1d:S0*Q2%rsjg)+0dFK_icDXSe;+6jWA!jqMXM5dDQG+^<M9@#8Tf>65=`t(D8$;d%g!+i,::mS*]
AZ6#5QDsprW<uIfWW6V0$;d%gr"kt,$ij]l$SV~>
%%EndBinary
grestore
np
474 103 mo
503 103 li
503 97 li
474 97 li
cp
/10 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[29 0 0 6 474 171 ]ct
snap_to_device
<<
/T 1
/W 87 
/H 18 
/M[87 0 0 -18 0 18 ]
/BC 8 
/I true
/D[0 255 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Gb"/a`tEth'ElH2#>Cd@-Hq?Tq#@O=/>]jZ*8\f3:Xb*N[>+pC;'B)e[3i!l4T.^D8[`YV/))f"U8q*D
'<a&.=Cd0oNA;AEr4jKq9ZX41m$W#V\#9?\,T"YunlC)'g853F)h!J.DLXX/VmBA<\A\;cF`pcIV")^E
5G"b"P*/&m"U30TWr~>

%%EndBinary
grestore
np
6 97 mo
376 97 li
376 95 li
6 95 li
cp
/11 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[370 0 0 2 6 177 ]ct
snap_to_device
<<
/T 1
/W 1110 
/H 6 
/M[1110 0 0 -6 0 6 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\m3+TJg1g@V3FVXDA;4)6e0iHAR?>CZp)#Rthdcq"P!q5sRtC6km]W'??k8'W=b.`fUDgP*-$TA-?I0
!cfCaH'kr?OJ@VGKT\))W!qq/!!B69=:tdq]#IS?P9qdq055.d$j*?klCkg_hdEB1+[[Jr58fq!Bb-W#
J]\^6EskVkCE"tVede<uHXKDgk5]*d4+bX"-Qpmk7F2bpj9?69LT0qHE]h$iH`=lTiJh!hp^D.,q>+Op
aZj0P3%Zg4(ti%8Tu.uZKnZ9)F[Y:epCMN_0/A?D+eV"7=B*5X!uVE%Jq?S9Jq>GN$u+sX)4;Vh/5S>>
%p,50jQ6mJ;MB[Q.i0L/jQ-p>RKa0-:n&th7>%;-!Wg7dV.Ja27g83Y<)sHh,ZJ&J$V<a/oaQmT_n\X=
bq5"]95@:,HNt_ESR'%*U-#ra(YCA)A*=/<dZZ!`:4s<NPCVH1#dmT]go2Nk<+.JKV?a:iVp?4N2%:B>
K[6.l.jeoTR6/Jp2fF.V_1IBY-38\6U<(;HMO+et&#Cj^^1*oq;+anm#suGg-m5\u<6,?J?3?<o$Y6G.
-s[AEDAW\V$4nn/%,J;$[V!_6@H=>`l>>:"Pa:YE)d^(!'F[I8bI0'!EVCMF:M9.1r<EfRK$#?ig+`ke
LOn5*(tsaXWA4f7!C2/9!.7R]%f~>
%%EndBinary
grestore
np
474 97 mo
503 97 li
503 95 li
474 95 li
cp
/12 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[29 0 0 2 474 177 ]ct
snap_to_device
<<
/T 1
/W 87 
/H 6 
/M[87 0 0 -6 0 6 ]
/BC 8 
/I true
/D[0 255 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
GasbSeJ?"e$q-H?mLI4,ipQ77s#j%(V/MmKe(i0;fo6R>R#&hbK*=M@)jHm5]Q!GYV;#m<7nAUU;5`k-
D14+2!+[cO@9uBI&_43B5Wg4ARm]0"L<*n^PT3Q7+GqHp=4jTp;>QW]!UFd6N@(s5[bARD\tTEX.=E*C
5NW522R4"S<3B9Gk+p7H!E/_.>-9]#%D=Kj>Mr8^<f$^JS+7Opg9Khaolbh4*JH.$Jkt=j:XL,bq[Mr
~>

%%EndBinary
grestore
np
1009 97 mo
1129 97 li
1129 95 li
1009 95 li
cp
/13 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[120 0 0 2 1009 177 ]ct
snap_to_device
<<
/T 1
/W 360 
/H 6 
/M[360 0 0 -6 0 6 ]
/BC 8 
/I true
/D[0 255 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Gar8OTJBncJc]PO#Ra=ZQ.gD@A2"qIoDt`G9HPr,cL_.4iCk=I)U;Fc!7Zl,%f~>

%%EndBinary
grestore
np
6 95 mo
376 95 li
376 68 li
6 68 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 274 ]ct
[370 0 0 27 6 179 ]ct
snap_to_device
<<
/T 1
/W 1110 
/H 81 
/M[1110 0 0 -81 0 81 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
img
B\r*FHX'9Js2S+PV86PEb"t3oP%kEq&2fhEK?4!mR:-ZT%(Y8RGqp,F:Lc4Uca]jl>qY.MEf6?+WGtK:
PpG0bVpb=KeniYrCEK*GS^+4JpK?t:q1IMWCTm&JI6VLq(BEP[I(d=s!WN&+7AJUGe&ln%TT7olh/o;e
j>+t_NFVESP3CZhnDV9cs2!CA\Uc6We'jdJG:o(l8kOsR77p9Ke^i;@=bVTbP0\c5K?4Y+?b]oR%[SeR
,#cdU2+tdK:rW>)lPC?RVs^F2=o]#?=8jucV_a`=L]$&FG:)bS"c[DT,u`='I&*[fJOU5-;un^Is&+hg
`8='Y9iYM+:?RTdl/,g,A+/V&dC3IR8-ktkg9k_J5Xc)%3g@bXb*=JL'PZ=1D($'GIJs*AI.FhMXY'DV
*?C]0N!stlq"a`Jjb\kPP*[p_2j[*GBP?Vjj>;;]oVG3I"p>'Fgph?f6MBm*?dj<u"[q;W;un]^n#==g
j3/Z-cmW@X.Ner'HD)C?,&![GUnih\-^pKmC2%B")]OhW2t"nX1Y$mIcCI&/G3ukeodZMOZFnC\j1n$s
Fn<T.IRoMEZ%/XmMA7Y'VGNNZZEgcF'T`C\T`?/V+-an.acji%GOOCR&QoH]E--24;kb.rSXh>c-(7k,
=&U<*e>Q\Q!E&Un<Bpg]$(1%YEV\7oOq'=+R%XimeF/+bC*E3b$4[Qse^]q)T?rdXLkmP<%1<P2/faK*
cCI&]SE"SIKR1\1.+G^-daQY_WA7u'N!?;WFmIUP[Tg4Y<MEGgT0<\p&!o<9=gViSq$Al2jLnkt;UV@4
'/l\t\[d<1Knb=3=3#jo#M-Ck;uoj@!`_LA4#b^%HqaR'%Q''1TaD(TmtIKCg10)"%rq^hQc\+@rl0p:
KnY6IKaSnASV2Y!"n.bDQQ$e[YtgXTRi@o>*4E%NduZ*HdU6^W#-6H8?6s?`:S0gad%G<kq.@R$&LpaF
8@'sT\eHS9?XM^=daHkDF%&MdLCP?GX%'Y1\agBR`5IakR5o>cJt/8#VOGr19q,eAT%11`;uokk!`_LA
rB&Np\+DW-W90lfrYc#A5_pMs=1\Mp)(Eq@M3!^1:4GAg4BPZ=+<Z2WV:MbQVr776f<:BefAac-l($el
jf51$pMKL+RKF0R<`W8$c#`1"WQ[(n>+,f$"(/Z`NQce2aH;@]ZEGpL3&4Bop%[O)02NPh","FB#EKf_
DXul1;l36V.L.<<L(,).]Qd;1>#5Aji<rTc+]`ohh0$hg+o568&cS4,<BreaO<T#FmYtJK/mZ%&(DjCg
]tM+[H(De/hk0Q&%Ndl.k8X`,J2BUo/Qf6-b^Am9]a>B63&m"";fE$KdA^%l`A)Kd&J5UKSsqZW<j!3;
!E&Un<Bu?X_q"1dh"t%*9h6N,2&`KFJ4@AsKoO)4GO?IHgtpnZ[1tSX2@=IA11WrKI5t#T7_re.'O9hH
S_;6[p%8\#$g"4L80m7B+DYb."kfVt:f//hC/e#+TXY!rmbM[4Zmj/Eh;)B$>#5Aji<rTc+kA;HYM[c&
#E"F-gjV)s?dk\U#k9ZK]k4'A$\:3pMi.sQ*6<mQ)&_/^g?ca"4aOKJf9%_AS38cAp[6l%KTej\lJ'3R
h!LH"T$EkUba:+PKaOc$ldeb<BSig=+]D9:aNV\b*NL=QV+[/r`'-@K$527/Gn[%=eZ5%r!p&M+R[KQu
q\;Ogb.BK0!E&Un<BuA(Om649S1R1bGVm:065@j/qR<A/W!oZ)WJo73%1OVU#6tKt'7]uWp%!-bn`=B-
RT5jJm+o;*e^\gBrr&Q0Gj8>elfO+Pig,ptqt^%2WNp!P$6:--<@K%@.k='i77BYq^6%=4iFM'o+X%1*
Y?A2d9RQd5E<V2k5CYk*_LtXQ2CV0q;,K&qpi)HtbEa`P4F'hoMGOIEi<rTc+jqF4GPPA!+l^M:&cNKE
JDN$Z9/W.MIifglagQ'@R#%=2r-\(GXfX0:l]KM]Oc^e?#NV>:-DEEDjRqij)`DMg13%>T'&2&;X85#k
8+^j=#ms/(Ztn8g<=0#6I8$56Y$@rS#sCF7aios3Oq]/_4ErP?^W>)pQBjFFfWYf(2UpsVhgbYhP?%:Z
pWA+<+:;JK$AdZ)k%\-bIbcF'Atot;'F[u,%%C:td>T'u/]9"+naSnDHh-7>jMSTRn&dVI$?C*-FB"*R
5Y`GKN<8p2@N0Z/<Srk#6pGl++$RoI'fL`WQK[Stc(-q_aYP4hV=l3'ZA$Q9<NB.-;O3T5)&O43>Cr:'
=1%O!s3ioFhIO&)r;HS0?P0;g."$Rq+9m#p2(ftj(WG*E1r>l:TaHT!.3;jm;hkhHB`Qg>K\.PGT0<\p
&!o<9=gViSkpqLBKun\TUni[Vcu!Z<Y&m7jh;-b37&YVGrMJ9lGM]i\?/l,FRPdY9g_/JX(&co^:/5EN
b,SIB9MA,pYCK*$(r9a='F,R!?5nuf@5IB$ViQFo19oqI?=)]"SXc3b'Q@A`>`=t\k+cip0bUDdU@8>d
J/C2J<gW`h2MApK;77@%n>EpO.NjJU9@0TE\h&\RDtrXu#TB\:U7t#1%cgZ9DJlVi`9\p/_p"N)Q2Be5
h7LdV7&YWrm/r89.NE@os0jjsW379W'Vl?`T'*>u5i7%f/T\I&Bf^J+]_[+?If*:o`NuqYAFgm#C6X=7
JUrA_@J9&M"u2F.PVB_0VbWe_k'*.C=b>(s[JnIB4"@38<Bq845SXjJZR8kTW5EQLU_t-\8#sB!g5JMr
;r0eT:eio"R0$u(lFg&No(VrEaET2uVRgs<)EI+RNZ>$3AGQ(bM'F5iQ1uPD5sP/&"48TkPQro<1R/KZ
T0D8EoO_]IdF$A$T#AUe`Tu-ZB4MAfE`S\)\"cHSWiC;SOX<ek,VN:d5s`PO*Qdm-^OMmS/"/cfM1L3Y
H#HabBk_:@)`Lgb_FbOSKeH7+KXAk8T:f6nosucYT>I4%7+QB8_OpB/%9Ge"_kD9Il"%8<!aW36[tW6M
ep)gY@j6DNf]!:X707>."Uc*--=ZH#]a>B63&oF97$Nt%p$LKM^$ak<+Z9KL.=nUMS>.0k/nAVlG.'(`
-TfMj`?dN)=i=87_1Mu//=_EJKbEsS@Ddi&Y-)U=Rm\Gt<S>$t]\'Cr)DjukZLQtqbK)CnFH)D[MN<ii
fNG!)k!PtA"[q;W)QnUR&n"BTFf?GC[.O<Qo46]'85Bmnj3\-^au_F\!Bn(#PO(;NI$P.(UY2kFAS1#]
J,bpQ.55BCkIH!G34_V9D8pHo0IOqqKn](q,4CXN&_>Oa8pkNqMA=>I7W*+HW2rDR)&Votl$2EhK9^Ic
!IXKmC'L9?/gUFMo](Z8)k&^(:3tEg8`.1+,M"l'kg1J2J.3q2EWfF"Z*?%3.I?B#<K"nY+(mg6X/l-s
D?*Qq1@$Tf7>hptJqSd[*??0mnAp_:ebLCmgmQ6@B$HdD0FX*o+:;K&=9\>o&-<V6pP)Rus&j"0j"NH]
Wm#V=)hPhVHm+pVgWcdm8=[j.NUYOr1f+2f(ZD?Q]L6pX4*6)Ga56bp,#QV9b'+LY+2&6g,AfCH`qP+=
)Zjc_P`ul&[Z2@i<^C2_H\+FF4uN9Y1,@S;g5R".\om<SEoof"-!k3#HoK>)5_CZYYBPIb!kc:1$HCq_
+4q*9AS$;gp"*AN>,82@&J623R9a(1A]kii`Lp)[X]r:"*;p9d3croP<U>Vk:S(O2fkbJ@fIshJ]2oQk
orh]8qY]s2R6N9.\BraTPkd6Vs68e4nB[D1NugI2'2)!Ao()A:I-ub3IUFpNE,\W^/Z8`Fn-.'95\H/9
*E:V>>;Us)9;1F=YZTBb.LG70r0d3Fca,"W4dP]k!QK(h\+n[B7egaIR\kTf*!\tIc>NFg$Y6_(8kX0*
)C^e`oX">npA\C>Vr,4BLn2o%%HhcY_TD9k>nAS(*Ze)%erYt)"c:j4=[ON"If+GM^6OnG_edBs"U2_,
iGaCX&ubR!L>]j<1.^uFX[%P"@IdaBU9Beg]EWM3fK\6mG[+LDSXgeS,6J/\]RB[cpuZd7Bk_[2oP+FQ
eL`='55aofpP"ZjO\r;g]uZt@J:N0g`'e_^m/Ht\mG#*_^Q*t=?smAE=P2unZe9C\5<hAs1+Fc29nn<3
dR<6t">i#Rg,(6-WLBIFg9iGp_u0?%<EKX/J1,e2dhL1#<:CmDZ1dSqOSh$bc/mD.nDd]oTB4Oq+CFik
E>QI1QBQ,i?V%[ZVUhRUrYg[V.%ndsnEi3\/=ng$*o*$M4t/d@elV#neHt^*.fc!(J;'L$+P'9Ga7%o&
j7!m]:J]D,.!EVW>\6q"kih*j99![i>2$2h__u>`T]#JtA&^3(&XfbA_(21s^VI7dlk/4"9Y'DM:06F/
B[ocr8gaknP/$qc9:IhVaF<[Qp-rLiHuhG.20JNQc)\B+=gI+hYJ,$tEcQ/>R5o?Nb*=Jg&k#2YW\m0u
3B7t*]$bXJCMR_Vi!ChW;D'+22/9L:hnEiSkjmiYm#-5aW&!:s.Nf(*cl<3g<X,8`Tr3IkeD#BS^].J_
@cUpuR%`m7fbq>3Gl&6dKL3G^SGh1G*g$2&*,S@or&#0_:dF.(nDDJu@jmn\]j'K+)Bo_]Y3"?FL8.c`
r+qj2'2_J%+5q!*jQd;Hhup5nPF.9\%'<^@;V5es"pP9J@N-7*nuomG_<Bj>+[b>(^2rI4Pb<0bf'Ggo
!@o9<8c4#+9cpg=LRM4h9I!2Z/hEDgh8RRb"Kn8s:3#jqo&e5gX/i9oG3.%7s85p[-qa9!QBi^hZ+>5a
"pS-.Gbp]gHLqJ7/O)HaGB\7,:X:Us[`$,&<4lk%ck=!2j2Pf^VRa7Jq>0qOI/'rBT9qfj3nqDnmbCZJ
iMcmQn-'7u5dt4]b8qYZZ0WFNX_QSt/MY>AW36'GJsDo7G0cs,Gnmgp/G,b,,$hX*/cYQ`'gj5D2&FXj
TS2Xd$TS.hT&nJ_e2$i<pgjQA^@?n;a-C51E*[9gku?<C9ps6;jL#K,iab$j*q'!Kc\<\u1A'h[7mY;`
f<:Ab_TU,\r2Z$F'7.05n`!0urVQ&u)>-B%c3`#nS3G"Sb!?EUVNi8QWBh#-q*XJkm*V(LB@]dc_S<p*
%Rc$0>H9U^H2C-`P'pkVCE"33/&']/St:E,o&TrY%_R9:[!(h?,lN`D4*L5Xc(^pV1"D_LRU]/<6:1cQ
!E&WDkS;J1=9"fQ&6F4?\+&#"lFr8m9u'*^T.&@/mGAt^Ip(%P1F[%[0Pcp>q9ea2_JO!*iNKeJ=97OH
inAP*QHmrf(-&%r2AEiU5HeJ.'<r3D'oA`pKe+mtf0fDAQ51)J(eH1\+]@udV55J"<C`#eV''>W?m'/-
a>f]QOqN1kIJ!$YWDi9#.$7&^.usVomHmV3(S6n:RKCs.\^sIZ6ct$bjdDTjQ`@8t34]?qnlh[>6q'P4
R$a!*bT7fH82?"Oe=j/AjN3U$f<3*5a1llh6@?g[%#'Chg=k9I?)NQ0:V(<uY,MJsn-!_]TL6J6]E7Dr
n8eR>8l:2g;B1F>+;B39j2h8RU[bM@KbLle0s7+#iB:bU(#6JK`5\YdrgJaI(!s46S=!;,I=0WNR0%hh
`1$]g0\;R*fZ"JGr1F+FV)l[G\4Ml2a\,Z2:scIW8(+!a^OMmSCLgs$H=C8i:g@8I\[dc^&,L(fSir4B
8j4&SPsAgfFW;<<Cfd?NG^(#h$]B=>p$1(<<3r9l@8Kcs.;ri+V(0P/NFpG(WA\gtJ1,e2X:"/g'"AD1
-k"?5OIjJ4U:u$`qgO^a^KiSuZ8.*`j>=_\EtP#G8pPs]gIVK&bo,ulo:O(tnW>Y2o$9AW81K)HjlOHV
eNnfla\+O@r-2-=kiq>oS*c06WUpJ\e>ZAM>$Aud:J=H0hs:Wd9#P#RTp"JWYgO3.>CMd)Rd02'9(n^A
R9=WRZq(UWL9YUM2RX\lqWK0SAkj'PKeJ6X!>QEe`YG#:[6Yhllk-rJ)t2\\E/JLB#X>Gl=hJsl66lCc
(GR?]1ul%@EN\O80S\cn!is;:;`IsAe3P.9OH`T1j[.F^SZ994]'nN05Y>\:U.#O$ZtRj=9otHuTVJ97
*Zd<cCXobsZJ)a(.k_$,!*19k)ojRo1#!pin/X@EE;&X$$O[?Jmm`<WR@KcuGdF&Oq"a`j4_SYJXP1mt
!i#/fOXZrjBQ,en/g&mg_RfP&l<Ym74Fe<e3IV@9cKX3i;0El:YITHY!QG$=6d;F5YF?$'r>&`E'I%+"
\3##GjA]d2%!\%;^Z?ZK9&/7YaX[S!?G645o?Wgh/R5g4eC9`Y\$i_'F0u/(LE8U)TI7h7Pa@`[jQu7"
XMFW#g.J#-L^N0aQAm&@Y(uc:."lSA(*"=L]QnSh#]KP0j_ru]B-GiNk09C9G2L=^J#qAJW</g`"jn`k
bieKOG`Hs7n8Ggd8!%l(Hs1^nf%g@iid"jF)W@m1Ld2!Sb_5e0S4PZ:&&.lfFE2G1NAo]%@d@U[%(k*`
G=Mb[p\+"/ZP1p+_'(Kd0J"bkp?^J6g[++dLJgT17Bssrn3NMagtWnJ]4o`kmp@m+]Ql<>?]ASqV;LC<
Q$@6a?iMClhQ0S9q+T/q/h8Gfb*4>Y>$Bua6:=4pi$Xb$0PAZN[c:%T9N7KA<Bq84+9D^G?B4t:Rh)=<
a/:$=Rl/.8U*(toCE$nZYcBZ5T3h!`[gJc?rgJb<'bD:4HUH_Tk0geprr(SP+GQ`NH'AS5SN&h,:bt(T
[(_E]S=Js*imOJTXKAU#Sik,l7*:=M98H&s)XZ:g:F=!6[r43CgfRcbqn`NI$Q1%g7*uqZ=p!it`1apP
>W=@)E>KE-B4kjIG2L)d"&W]fB4d!bmG#+V?%s,+eRhPk&;;bC>licAK2J7[<qZ^bnEQi@H7(WV#N<bl
hZeX"_Sa7=#_1)f\-aYS07;><)NaD7i:A'gJm@Wf]5fCuoh^#9;,9<#oI)IMda-7ch;-o9drW]u/MSt7
(%:Np'c%R&gph@XZtXDqDSEj!%j*u_5:cA-B);O#5$baA@BDq]-;DQG77BYq6iG=Q",BY"^-F_-E"Th)
.P=PQrpn5cD;)@*)]osn3HO?DjQ),<QAL4AdSb"%n")[h]"5JIH)fTBW</g`"lUr(Jik%/d8aD^JiIlh
a_`@B*[SW]?Z>q/+od/#7sJ-6)W@ln#Z1U;(4a.1^)B@6X4TX)hG^8I&/NJMnESjAHtPfA[\0ZYFm@H\
[:&I[]ldN6N2J@B%*,/>ZA4506p0o.o((qgSZAflbI2\s<ipQ3f^W!9-`rWu5nsrb0*kMXSVVfG\!&Ed
4ds0p2>%g>?5Hj+!D_H1Mrs*:osfKU.H6EX(\\bF)Smkqdg'<3Z#hHukeX-]+=Y^&r^(pDodl."ldZ'R
2kc'RcjF>qANd&NOH:%)9(_H$O8MpjS^$KkEqjc%=>uMRI%OGY+B1_J*O>'"L(#65Vld(<Ci$2MbWEs3
:^'8G$\D;BWK2#Z"t9\hq#\tcCIDeYrrfHqaB)g9NdM])ama$E<m20T2_Tfi-++VU+<Uj[1^0a:bO-XO
4OD#Q]71(;SSSY2mLU$`f'4;;FJtd,MW:nV#]$0N[:&OV69flsJuGUr',)%f0=8*n4?P`n8-"Mo5SXia
0*k)L8L1Ng/QaosXs!\t_t![Df4AX7oURSGIuBO'TD!3B(?,;i'eGi/4VlQ$PkPcC!\,dU*C#(>^3&B,
D$,Q;BmS\8E>Sn(iU/-(_i_F&UHTDhhJ9c(7E0-SZ[fPY)E[/?Mi1Z??B&bYgEVH-L4Oo,V=]jT"/$!W
_A@m"J?GL(gu1^$^Y^"ZaOf4-HZ0e8)T(=Fm=lkI6q@2Gp`BpbOXb0/;r3<0$7P<dp,Uf$7)%kW:WUkY
?&+P5?tUV72NtS1\Lsu^(32id=$7`OJi*o<"q7HB%j0V[[5QdJ8:u]mds,%aC20cLX".nec-4D+UIBM:
8R\8!Lr'u'YCNoc^]G%,X7,m6gq?.g%Wh=L^:l04'.C$^g\QluJ!>b-.$Mn;CD7e2Q,%#9P`lPLVnP7-
@t#Y>+Q5BK1g,p:>rI[`:=6["m+R2tXpCGQMMh?0r7e]!P;c;V2f9TQ)>Wjb9*nLGlJqD_R/@iBJ5#tU
SircWNTBHZZPF;lU^e;'Eb'3212Ro665:&c0CW*F<E-d5*Lpmu[`u%7p%C!)2^uhc%h7Obhf`oDCV3*E
J#aF:a0ua!_1lNG-_,$RLJDgV-lm2j_bUGh$qO>7G2q7NZn[5@2@/-8="d/8i&6DOZo_JYlktB*`nB%U
b%"mtD=-rXc`?iYOqQE[)D(NVbrEKU:.E\%<@MKjA\l4!c'pY)4%2q@Du&tcDr/.#N?^Wc!i#/fhC>1o
";oaWZOhUF*jRP7O&aK+/6FWZF#aLdI_TaM&8+eX$L#>5E&?NA"T>P)MWe4p+!)o)L\G39!86tUb\+;d
Wl:qcE&?[`T'$AMGp'VC=B\lP?Q-K+D;2Mde>\Y"R9B:Ph7IjtC2.KuCi%n4AP3+-K-j<],UOk<nuG;8
P"5,b/:[[?'Gf&(V3n?cX=7)FBPD1c`Z4[!rr&:0eQ;*6"[q;W4B+Ra$=Vb<I#u1I+G7;AjjUT?WWpR7
G6a/c1<`&uRSIE+rgD*KHRu&q-hbS^Xsf1dPl`EfJtOE[o/ia\0-$n'<&5dGppu?BTsP[h)I^f_02F#>
.g+p.iY[c^G5,1!;JkFQip?$ua@!Oi!sd\sI@I[(BV5]g_AE!EJBf,9q[UQ5Ws?JaTqn'!<"1hc]BoOa
N8[+Y^TA,K7ei=:6hi!g^Xp(Dm/Iqn;GjHI576WP0c[AfT&0](_O?:T*6=s`r&*YX:nQ=CmjB$2/.63S
4[3t]O[!Oi]=1]@U'/QALP:GiC"%gEl8gseF6:]gajHd.D@o5N&;;e,7fbc"JfT!^Dte4h2b>Gj+=Vl6
eoCV5j9kb\LhZliPnF!%2o*Cu(jfGjE&,(P8]O\NiI_3SHj4Z3E6mtWi)hs2mC@QO+,5qq41lqG40S2A
niuR@$*Ls%m5&YnAA=cH;]G;uo&e5gX/i;Eg@J@I>4'tIj"49g!f&6J$=D_D!\,^QSUk1F03pd.5(\Fe
V4COh?=q';.C/i[HUG_k3Cl">r^[YGn""9h0?iBE$lqDeUOEph)UH09jQQP+Xl)Gmh0rE[a7mKENZ:95
p1Quif'#"@aG9f>j]oS@C'Ibbd_VY-P*2!L,CY<JX_hlj/8Z9`65:&c0@[T8\p50`/NMSSbGR_aCYCQo
"7P,fYCmFqJue'J_n`O*d''RY=aDoU+2<TZ;VEf^VB-IK_K?](bqU?!^P87pg*^X/U_pPBJY!(95inZX
=9rR_VkTj!OgHPg)oLggq#$\WC4?3]G7tW'<Wm,NBmFrJUo1->Q4Y<?!E&VY4Y!,VY@-$?m'2Y7'n9Mc
IA.KP6u_QaT\lhJR_+(Hj<8n.K[Ujs%"kq-.f;WD-k=t29>)aH][sB6(?bU5Qj(E6U2sW-A3PbPmMs^3
Y:Vq[e"#nQA1Nb\+:SU^-ci;ae4+FtZ*1?LP9s"+*Frhs(`4)l9)#E?#$!qd7oLCpqGKQ`_f;IZ]6m^>
L!Ur^6tc%VP%*(X<d+L$E04c"hb$LKWup3#AK.>X&O[^;<VB!U8J<IH1c7/@daBm/2BFepgmKs2Wql(R
4*Pl8g3*(g!&jrD?3))&"+Aop44-YB6N$*D?(I-t*QId6VuRW<nLIEm`m@9Bd=e:octK6)$)so'Y-+p<
:n3rA=`eaBD&E@?'bG<23!Z>K(!r^DkssVO7^t_';`aX;#eYZQ_:cRlSn,c7NS)"ZEY_10ZPDr+")GYO
T`>K2%OUZ318$!,&J8$W)\s3DC_$'ZcCI$#f!':rJ5RH(jM;f<1AsjjRR1Y14]"uV7s;cM@nq5q3t@iF
&SHN1`8GuoCe_NVj&=%s>WNG]R'UGO>$+mgAp2+K&]r.`I3hTI:^+d51splR9*J:""<3YX73h%(18lFf
4%]`a4cjUb`qSNg/L,*Tm\4C\S,EEN]5d-%g)KJYWPU<)h7Al>rq?'Z2f@D!/1bmdG%R?0kia9;,UdoH
]Y*%@aG@5aDJj=nCYlX"5`ub-cb`"Eg53oF4r$M!F$3Io"u`[E*/doWL>_1_VGKBtI.\-00-`E9>\pY[
V:6/iARuf>DJ\1B3GUPGo^nG&?iK34)qm86LFODfU7i&jSLL3>-c",/\pTn26GPq#FAhCdUO0ej"%O/P
NtpDmH:8#(%=q<D9C$9G%"?s2g,#r-pipEB`5BKFNCscf#[hMd\om<Q]RKhUF`Q)Fn`%LhCZINQ5d=s0
aM0^tGMdlTK`uQ2o7cfnQogF?9_u5RKE&n(;!8,E5Uc8B.BSqr+bU$JQu,$KQ'F4Ll;Vru).@>t]RTs1
g+n&1.NlI!\IM:R.%nfIfWQW'`ejZQrZ+&bGX6<]hH.27kNq)D==040gSB'2CW@<>hbAX&%$c=?GOOC%
icjY8V7=%&IH^(cc.[iE6\d.9h;@+^1a%Pa*u7s?X&T26b_18*31W%+%j_-Ck:Rje'aq1:ar\"jGt"[^
H#OS'<b-?c>Tr\Vm:T`;(Dg^sB1JE;JHH/6^3uKZ$pUEmLi6t0"/Am#<*g'nS+)FU]6s6g$2]2fr2u^f
aE[QBPGuOW^C:uu:DFXqs#b[,^t*2?^[O78)Mj6,@4(uaF6CX-p@e3]9sCn-;38\W+[anH>$>+_g"?FB
D)Ec8[r5^$O.>f'o^CVj2<)oME'ZtRpKt0+OU;=FCgMd;fsBlO">.Wu$>_:69lM?[Kr9R++tP:H9q+&B
+k=ufnac7naiU69_`+LqiY<C!^o1$0-/?:udcBiL_T=d+R_i;.]Ri(Y3W$:Xi_<^pEV^g@G.*)GCg)[6
Of/L$(DeEEQ@,'^OeJnZc'j@6UIWLS>p>Eplg(l+]6E]r]EVGm!_WA`Fu1BrqIM"EVS_7c+[/N,Cb4s;
.t)g#>[/P)_Oims%\5R6gHeJc;0'o.0/%8#]QrRTmT-GnrUeQ7Ds<i"T:cOI=(nrCUCIHlT8Pk,Y1h;=
j9p%=&OT'W!2uj3U&1AYgBKXM5<V^XjaZt,VLQ]:r8c2^nU:(Y0Jt_Q0bg=TU#bh'i*c+\Gl@L3noD6^
kn9D)euW"3.R7TX-Hb;eN>q]hq=W>*W`;:fq=(#eSFa@dAe=hESXmXXBo6^4[!`1,rK+L!4GDI`3<c!b
&!%?;:C;oRUa0tZ)I[Ds)]L<CXZWjl"fd)tK;L^a.T\mUp-HI%dcI5o'DV*EptsUOMD09R#f4\EqmWLG
2m:)\+hRu<YoQ&J/i<6<",D*"qm5%cD*tX9?XI/Prh;9:N5s#\OF-fEcd.Y/+Al!5ebSY/oB.,6*1Ag)
:;1LSAE<">q>C'[3c0.!._K$D[<]PSO@X,OgSlUbDo=ZNgUp^<kBE0%+RYt?4M\J@3(T_9jQ=7CZOdn2
<E8VI[0hsG08EmmJ9=e)+oAWuW%cqP!p016IlB):+bOjkh;-Q/dqb@g8P.$f-VpmN]+uJ1s5M!*HFfmT
;uuLo9m9uEW.:I%KWg/OQFUpg6/#g0`e;L@-h-L_:59<5L*O<1Fu]i=*)BL4UQ4@e_(Z723P0%D8l*NT
>mHAMj5Yc(mc;KRabP*/hBh?mi`h(rNfGuSTmcV!eaVP8RIgq-2B4l+o\-]gQS)Rd7dW*Ogj$eq'btJs
_hG`tj=\`%_oKCM@1Cd=NNg%,ll4Tb%5M^.b0XO`k01s4X!-,q:db;('I.e\9aUB2ciT8sN=^hKZ*8X.
5,f\-eX.H,0,+<oIWM`6GuIgt4QEW]n=H/U/Y*6P?dX<91r[GQ^:q<URP\F^XJ)=r5X7SK%2U%\RkA'^
I,Mekc'pYqk(7F<cThGWm+AS42fBHHd5]6_5nsr\co;77X[L6W3P#IHbm+bLkhbg"bocR4q"u4eY(pfU
E>Vo>O@Wc[+6U_<^C`jUTVG-g+E:9#rp=i>Z9mU4hOiF4>!385g:]SOZ-\,#T>7aHps(tl6Y[NUT9G7_
($)X(`>`6Fo;O735(+=j*\OcdZ=qW0dX[")Kun\TUniZKTZta+'n6^ql2CJO@hN!M><dE(K`#UZ9FQ7a
f\>.b/JTlgK5GD.b`Qm//,e-ZK?.E"c4`2`+o_8,OaXKA>@,?B;3[gu*s*8;.F30Z:BN.\8rB\B3a.o:
9W?UY6U+'S\9b=C4S)n>h%DJTgY!3W?D`,s)H'L4a,Cm')ItW[ZfpW:lF`%^d`I\#='(Hu^qcbA,hh0V
65:&mqEgqsR#<>3(j=HQLDJa`/]atnSla4Sk?XqQG12#Mhr9o]+rZPX4qPjCDT)F]mPWY37<0FU*#leq
`uaf3If(8!g!q5q$qI=Z42AUI^dh&j8ju0;LCP>,S"Q[WQ^]LL9*%b4daZL23E'q[P9s"5mi/uirVHHq
BF-RR1h>$Ng9aGjF\>>gQ,D/J9m+>)/*%:d&K`9\kBBH>f5q[\+s><s@FcjP#T;,(:./(OeqN.SnAoAD
<m?<7!kERthShL@ZI6dU[+-us'L?a4lra]($e![f(bm3p3Ea0K834G6kd+gAP-;Urb/qcI`Pi"Kl]iu%
as;e%N-t5Oa5Q#?J1;[*,>JK@7_<;LaA\&7I?Nq53"1Oh`V!0Ba\NKp8C[nrQJK=3[\i?ggSZLq['<)1
Dq$0(pME?E5.lYh.$LjY*j*N.Y!]?t]11M-OX!@G8F5[.9.!-/Vh2jrDV\c#mbYW]?F$D#QSN8Y[VV@u
Q`$9UQ'T9&?SL*6Ym\_PCd*CJ5Ki2WP7<Gbk+(=gZr,*@&.8HJH4G[6E<aP'!H@d6,q8Fl_kO?!*-dFT
MZ#n#cc>cgnn4J'1PXr"?]'(W.kBAaE?fc%!-re3Q7[GjY`tH>7Rot4\n:<]Yt.-.pu-u;\28$Sd)a;,
=0Gq:?=%I-J:N0g`'i>;nt6>Gc\Tr!\SqVn)<I.pUmp5uO0,@2]ckb'"Xi):f/B;2!_#mg1=d@!%`\&;
Pp]&]"H<cZEcLc%(6,Q2H@J/f\-R\PE*RC<:2p1LIp-O%Jd%rEfXl@2K#A-/%b6W67CJ"DfreVmEqr42
NupSuo3AV6N=)[2Ohd>Jb.F>5n%/nSJT2eHHFG.FOs.Qc?JjpiPWAtj2d/`J[-!kYU(uj&VDM#e;e:u<
hZ*!<iI?Kj"?*CCm,ZfCJCD9^hTuh>ZEg?&SZ8fobo0/`A)i"7p9=p]Mi5]P+!2SsDV_l]W!Xf(L(568
C=Og-`KMZFdakQ8Wdsl'W#QZ85iQ)#g8uB/!K+K;bqgdi?fI/eCpGh[aO)-5S`a<!D?(@IbO49%ao]%<
[2jT=D'85N1sZQMEHj_F=/:HM(I8YJ64Q&#m``s`I=;(26Ff%\,n^M%6YgOUXWZBMY@"%n[Q6>\.k3%$
Cb71h<)BFa93'o%1;AJAKa2hlBH\ID\O,F73ib*%r*8``a4\p,EqlPT=K3LXq*Hq@&*9GY(L0-5K=aYr
G&N1$XWU;t,#[F[ip?$u85F0^^k&t5j1p;"#7n*iB(Y<7Uku5e,c8Z#+N73$8lIA3SKb(apl)-kR-eZh
Z[DC\$a3prPle'(B[pL_UX]LL.236Pm9A6;'A.`OftTsrS(5BsX]<Kq)rD0U$[KfK),;0%I;,:8P*/-a
Lh"Jc<KR"(V+Y?.+!2R.M'F2gWZQ*4ZY*&lEG\e94#]/u^6V",`gkhGSjfZF6:lHQj3Yl@ib/\5ZW/pQ
d-m1\SH"VW_n11.9a*O\@:<U2c"humNfKTugS.,pOEap9C6d#VTk]274BGTc7KEYt#FC[>W2dX)8P'RC
:,Fgce^Dl4;JY'tEG*ReWTLg:mbHL'CY.+;=8C56;uuM);)p>O5I>+"ZK5SZ4cU:#Dldk\q/2[^U9WeB
_RfQ5@:j!T+oZHE2c[FA1IpG@g&Lb`M.<J6.X9SeiSiak9aD%3;36%IRPeX8j2VmKJQ]<kYpk<WJeT"'
/WOZ,?[r#Sq>*W-n7<,1FsX[H+1)0k1f>_QQVYLQ$akpPo%0oGNkXPM!MS!tH$O],k0;B*eR]2%ZY%Gt
/mLAPfWYS&U8OnJGOA^*"<BXO<$gWo@Yu]^"+#P=b:;C<64\o"k*;K!GLh,1;[(*D`8eXtQc&#nl<6J#
Ithm);CDrL*eNP\c3W[3Xe)eqKo_XBZ?b1;St;OL9h7lK;NQ.mi5+LJ@t&kjqkpg.1pdC(fW]pTiooT.
c235$[/R@fQS2^KI!pU5X/-n&mg9Tod<S*Y"LN4J[Zto(9XVWLcB/!V2D^$i)<rA4L9NSb`Ppqe\PXS4
GOE\p_EEAG\<b+g\ofNeXhDFHN>je`$O`MrS_8]A+X'/1Hn%'111CXRk2o_5X\BNAD\8$4'B63]jhn5Y
*8X-)$)J8Dc[`?u)L$)6kg$`"`_4CD_cEmC.7dTB<b>`I^a?LpYp',c*#snYU.(Ju@Vfl)-9cG/K]6Gl
>e#ki4CQ)0,qG/nYKHW!o(VC(pmN%R,*+l1l7sS/D/`H+Ku,,r3I1PtnYW1\<`W6CJ,F;==u0X+#W<I$
['WfsK#PdN1NL^W_h62]+<Z45d(4Ac'YJnnqK9)CM\e%LpSOepLpr2YJU)JN8#`Itq=nhi*@)?0PaB;9
WTnM0Fp@KO!K\=0B5X>*I2&KA=dZk7]Z@iK3B>3_<dK(<CuWpAX13PdI/.e@Z(n(hP*O_-;N6"raDO%E
-uta<XN%O>.#Bi97>A^8%l8fk4^P*6A1UtX8rD%#leT03b,n='0#bfKlpG]0DtZPUn!3eIqidjCeZAMB
V@&-gLr=jI1.@2G7sZ'o-PX+MYZBAkldM=&[C<NMA7t>/;54i$$k*Oi%EP,(He:QJPa(Ctl_B65:7Yjc
TXBhSI.#cM`Pq?>ojng2mFt^ab"Vh5NFp,dLX$Wl>l(p2j4HH)LGghTL6.K.7]j%5f<0[^5h^n5o?*=K
b*=G'-Dj\1Df9PIDu3fE1:g7S9.N*9raX$K!obdUEF=Oq<9*Ohjq&O\Pff,Qi#D)&XM2eDj@PO^a\,Z2
:scIW8(&a>^G!9&(E"*ISer:]Ya^*P\[c81M\iFM#5lesrkg(k[^K5B12?JKh&Y^$TiB=\9Jm;BoNO8H
[P<K3]Y*%GcOWU4'e<>Kkies;!EiQ.0a]<Y.S@7'\[].'f71ks)&X=Gg=lSQ^:D9P[G5d"nlfI!JI4+;
^;*QI!C9!K_Zuh9'e`%TfG]l%oe%^'&jYr;.+Do`=a>ghR/!>_l;`WI68A"M]gOAs/^eDXa=\Uj+LW+$
Q4&VoSk_?2FL(6cbO.C6ir2+bAtANT^R=ng3A\G=3HI_C0ekEJ:7'(53#BPYH$L8pZp=^1/Y>B3_fZ_u
F9KSiTUL?mk;IH;HM*i!S4rA+OH:#rAm;][;;*ZX8q!1ZB-I*X9OD/!c4c"omsqpn63HT5FobS6D%3sa
DgN>>(ng-]m`&-n-kq-H*_oI*fPO2OM%6Y6oB$K_3p4h]Vp"U#('KajUs;>5>oddmB?qV>RaKmEgX+<o
eC<!qdD8G^5lhiTT0i\O_tVq=+(&l8E<<*$RrdAF4el*9e^`42cF's`)S>)29ba"`R7[j`K7a7\BP_M'
%j<GR.nS^?NuobA&ihTuNu7chpup->Y-Ussf@^@P%%r3Y^ZTdu"Zeo-!LafX?=9`F*?ED!!\uPf4*^6;
EdR0*Z&t02M72]nR5;njT?lupn#+?q/mV)L5`<V9[r9fBaN_u+gG>O);.?dI2;[0FSLeF;?TU?]Pq,p"
HhL.*BS-@A>!@]EL?gC4KaWhQ5W)&p\/fq509&1#oXBMDnaQs?JfK+:rd@1&"?s2Bs*cmc2uMFcgq:82
S,)LW>'.NS&oV],\Qhm)Pf[J.">]D#KK2%Q`&K.n8=+5lnMo\=W4!]6(dJ8HZ(Sf36\5q8XFSZ6q$!fE
-733JSXgGN_O[!YL--_,,g_7K?G085e4>4IYcof%4p$m>V$@JMi:2'e`'oS"TjD8BBCFWd'E(BHf%/E=
0439jg7WtTR44cDE1M]W^YX/g:&l$I/d(e&daBm`c5^m)L5(HFkN?3bG]E3/^%V0n\1fj#(Kjd<<6u.:
d$,^c#gi&)e#,,`2_2G8[r^0Ne7`a;TgOUB>U%]"$4*"M5QLn?`AeT/='&I+=dd\g*i17RBOt%b3_DnZ
Ci"nR>$SG6'W&*.Q7TkM\@T9.]Qo^ti.T%rXBDlKd]949;UI-o5Xrt^:LJi_EkZr!oC"A.!#6W1_Wel-
Z=Km=$V$%B,/IWjNlB>jYI:m*=JCY+So#$$*q.gjCL_ePLMp@6Ak5Kb+i[-8&@D[b_#]`'m",<JMfJ0:
)iI%VQofLErVa]j%j0:=5C2sXDTqP)]>sU%hVPtS_#eGfCtZ+cSfT21o^m7bnESQ)](H+=OHD?,',]+_
DO1l0$YJTM(aOV=&gOq-HQ.@0:b]gsEHuhTDJj?>I!egidco5Yd?6o4;oVA)d_`l<?+Y8sgU7PCPc_'i
._S8>7?KS2fk[`O2E$j<T/^gWQe)2K#I706Eo:,LD\%I;"#Siih,j[aKgHOiOHYkAG$@jB_Fcn^5(-'#
hmd[$#%P$/d)K`Rdd13cPEApS/hSdFhPo/mj5Jr_*2]U1lIH>>5Z<96R_[F=F1ZffH,J87<5Z-?cId$?
U!:a&dXLEe%Lsi*GOF86Z-!f&+:A?"!NsuIa`N=n5U2W=;5T,E8p5A9rf3H_I!pFJ!ZLg,\!CQ8AC1<5
^P)t'%@tj95\O:<GFqcXGW;t=If6iq]`84HJf$+kl"ku''UTm>H@stWGH&r"6i6B36S^%-`5H=I-826A
4PmlhJ<!WY[=Q4gGp3]8(I0RBWpcr<&7@b[daD$p<h,_Ofht(+04:DJSigGXOm_Z*`&XI9QV++>/7gRS
r=P-`T:]`AmHs;,QBp/_0JH=o=_hg=RPej`!WeIA_o'C'o`>hh$"D6a-GU\.:gaq"P]3[RSptCYTcG!g
Z*Ub]NtsTTp@\*HS"!p2FmIWC?=hLr%PMDT?f6).eAA3](,nU2!@;X@^5^YM]j4,MVG3PGR[T+^,(6/7
$]u+Vs5qRq2&Orqe^;BNC#_<qU::/.\8[#J:kJg)5n'3t`.pYp$;:pLWc'\*T\ku$S!f[9(9*WR?`Gn4
.OlWSQ'IWGf@Tq`nZq6:;?m)YH2fP-<rfY`]$/\]ZI,9^*JFIq8k:3?XB'@^EY^94W4rCkNfM*h$OR5;
qPSfNbK@t@s.uQg)N=:Ynn@(Kl=pdJK7eeIY7]ftXtEI:%1:050jFcYI$C\n_ga!X*LOF)!8sBCBWfA3
V>q8?D/X@]N#=G@bckTt%[Aqm\_PBO$ekdf"mK6&@5]L"o(J^77KLM;<ttN6:LM-u2aV0YQ&sT_.4H]H
<`](<+*Vr'U]7*kXc8V.,pakb<AZXMHBl$am93t5@:@R@s8Rk0SXl>;f<7D]l4b\HWMq&\oB+:Bje"_b
C2.L0nDJk"/4M,t>B'iNA==>fJba#A=hBKReE*0@E#esR]Fcs6I.df:VZkOO&(/(4kn7.!cCR2"FEDVH
1d4)E+%9+&6UQL?ouUag"s9-a-.9j70J5LQZN!8%paF&q:rgr0O@UY6Z3=qF<qa:.<E6<S4M"+ENfG#/
O`I_7[3`ilrr2Q;Jq='#rC-VWm3BV1m6ms+/hW1)j,n@-$!464Kt=$U..lj3-m4_mE!ab[n(>rQJ$X#B
`uZoKAOYsH]s%/t>VRU%T#=Q\R@0I>-mUmu+$Y2o*Ze(j+2!+'5!/H9n3*7fi;t$eGMR3M!Ndcb^ucUL
mDlH9)%$(sH2[RsfaG96nR<O"O/8[aChtZUs!ErOfP2?<18L5oi*["[p%A!"PEM,nl(aB'Of0ra.uTXF
KS0osLkpk6p[20g>GL's*Zg/pM&@0KX&lL5Z*D+L!<E3A*?Fuu";HqHA%2XgpNN_,J"+:PfJ1?T%i>G'
K),(32TK."-SmjfE@"Ra<RIkRXf_!7R5;s7d/qqPaQcfu;hnJePW/UFQOfG`^\n=Oqqmh\+Ip6Wgq%Wd
Cg`0XM'8;%2Rp?0,.U!7QUiAQ2U'q1RoHb/dj>Niq>'i.X0,^<64OG8&+fUE<-\0*>uE'^#`,ahY:j'U
bg"C$+qa4KV54@g%bo4!4^4QAo:UV-*!7K@K2O&?NO@9tC+3CI5[-9Q=ka>YF*"5;D\,bljDoN77E+6'
LZ@CRr;HS\041<4ODt-mn[c:mp+)?KQsU'(E%1P[$8*;P1#@(..pQ0nHftA.YlqFBBP=?S\<s4^['VYc
:JYh6rIfr]kN(]c'5MB!fkhS>$Z>:]Xm4+7"pX59T22p*M&13>]Y#6IS>_pQd*^6<WB3%Vg_f@f]tN7T
fbka=\[g,F(/5'25_+CuR/1_=%l4ueO+]BLhO?_1e)Fg;3st1^\l!V956;5nH!08-~>
%%EndBinary
grestore
np
474 95 mo
503 95 li
503 68 li
474 68 li
cp
/14 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[29 0 0 27 474 179 ]ct
snap_to_device
<<
/T 1
/W 87 
/H 81 
/M[87 0 0 -81 0 81 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r*Ck?$.u'ZJ,+2H1A%Yr@OI,(^7l";T;f'i_CR`82(6$7[5*fXoe?JIPG[pYPkPHnW+RDY+bnDEPrM
\R.+9p?aNV,kF@*&>U'O[,b^IOBN%$g9>@n3oS\n]eH>onF+H=:;dGE<+gh#gKA[85aRS8h7E@EWN"Jk
YeAG>%t0kp:Rg`I/i67EiV6Cb`n1:oQ(L$l9-`!/W57Ph[@3Dr;MRdp7EeRXN=Ap**.N$sf3e0VL6%G5
No\nkRZ1sLT\7^`*0\lbCpI81auHp>2kE#C1n1LL=u"F24JXfAP2uQqR5k1@eOAuUVJ@876SkTa8uGEO
VBe$WJ*_9N]5)b/Fp;Q)8qXI41J8?BO?'X)4,<3.c-Dg9drT@B@,W<_4gCA7\XFPV>D"lVP.[VU<A$YS
Ep9]l8":<_>FA#?a0h[DkmM."@(#nBc6:IOc)p*b^5b],=Ked[YRt[Ajft;2;kU\GN8;@?bo^/4Fkbh&
1sp5d&[n`PapuE,d3o$P)na@['I1Oi)d>h&SZ:A^eC]01C^%DUh;2@36?<H4in@E.9%1Tt)O:S8YBNuS
$HgLcF^;^nR5$PN<rl9$!KR+&l2W^_oI`0-Umc)]7>H_h\iK?&;'8DO-?Gh8)Ui_L7E9r=-6EjJ::aY9
qC-HIHkp7_es2bFh]Lu[SIh$rphX2oX1S!`G<Z"X^7Zub$\d]"->](2<2YB&GDtWcmZqG8Y<`E1?F1cs
s#SY3O1ds6bLU1,&GE-sfP?/bZQ<=W>BdbafWo)3Q7Z=LCt\[bFmpJ,F)P$3eg0MOLVfP>5#PUM-uXDX
BjPkCTti7PW4.?S#,`OS;!M2I7QSk@?`80@Ya\t3]+aA12Q7rEl[?T-Tp`fS>$Z<^R^)U7TZ.$,q,ji_
5)ND*F$&tSM0_>gd^pkJW07hmj>Qj"PtINGKfsf/RB=T,bq<"?RnPaaarWK4?tIbuQ?-77d%(#ECbps@
rY[5M2O!jdd2VO1NglOHiK1a=`bDaj=VH@`kK<;(0'P6ZES;rf?3#s<?/obtk`mFE3,KG7aM2nZqp@At
&o3jmMl[V;P2QdeU7Xiq;2s%:nWrOR^Xs4>C%M4(Z31(-CRd;tG39ns+5O+YoaiiQRm3!_+[.5aE3$2B
,Tg2-Vp.<F<dZMhG4PDOF>:O$8++B21WOWF'-0[e.]NN(5;]VN^JC>#-r7Emm[N?#:t<r!p-X?2!9k?)
@K~>
%%EndBinary
grestore
np
600 95 mo
630 95 li
630 68 li
600 68 li
cp
/15 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[30 0 0 27 600 179 ]ct
snap_to_device
<<
/T 1
/W 90 
/H 81 
/M[90 0 0 -81 0 81 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r*Al!I.N(rn"-/G4+aZq8\8S$nf_Cb;BG6mTlP>,[N7MBl(FQ%W[>ALC.EIJLcCcb8Mc\^SU^hGYGu
SDT5do:($npWT%NB'(eE9:%8:\od2bV+[/Xs%.D6#!6P)]n<*/'VTC/[-85/41bL7`RU^-huGH@U>VF>
DXJRP!'IrZammA@q+M@dlN4Ek(n6.+J)3/O?6Wd/jEV:RKLISh6?lugOlqd`[m7*L!JFD9L8YC7*Jr&b
C0]hRE[;XZW/-:!<h.q^Da]pG^,]:@Q&B-\M(([Qop<h7M<'ghrFK-+qf3G4'iMRTN2H)EM"6LeH]s;V
@Mtf,[[Pp_e(<4rYEd6=aJ<8c#Rd"WC7;K\"6@C;aMl-N\1,`bH*^IfaYsZN/!19]B>HKJKh?=2G(?;-
VY/dP&8[oM95o0g&QN(FOY6]]PjVFSc8+W,-jQ]T9&;).I>"W][YelY\,4PnOA.@C_&@+M6\7BnW$C)p
M:5]9E0QuKa0;bu)Ypo$:11TZK4cu7EtRjlbHY=-4RB.JS_WlpjHE9YjpZ-5`CW:J[QuK*T2;GrXX2`C
D%aE99!Au_-FMoV6;?J5/F=A05NeK]9?F:e-Yl$&Wg;G!_&'VnfHq\8c4GiINbC'p_<knhX!L8DE//Zr
G>bQdF@6q?]qPY=U<QS/m`+1ch";6S)Jqnf>fR:E2Ok)qIUaq8;(A'lRtU(E=uE\GSPVZHQ4eRL84acc
`8E__\P&aXIa\D`7EYTr<^#S7]"-(4Y2==Z_*+lGH,9Os25=c9EcP"L<hUfZU=1jo5!Z_C5jSSR0F6LA
VrL'J_1u\GW@%@&`pg>V_\5/hP?A6PWkAt8RT%uiB&,9%,e'b-BJ?LN3B@7*#_l]RqZ=b6jX&VS2?pjp
:**#W*G3#>4@\3&<5"QCn/DU%Pe_KV6^]8.5ZEYN44(^nL7E#S]tbK1e8VTLAA8WT+-k:n5>38h7\UUk
Pt_FN!NjF?GcQ:Vl?3JDa_%#W_Jt#_Dp]_Ynh8^ZR6TQ<?gAU,(4sa(SS>&FFZA`rTD6ms`O(n98ukn/
YKYm\9U@A;>3M"I!s%-,PoB~>
%%EndBinary
grestore
np
768 95 mo
797 95 li
797 68 li
768 68 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[29 0 0 27 768 179 ]ct
snap_to_device
<<
/T 1
/W 87 
/H 81 
/M[87 0 0 -81 0 81 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r*AqcaJ+(rq]ElW2n$korQ<+f.Yt>M)QY,[Ij!Bi,L7,V2MR#aIeq-$$d!RGN.rR9I4oB2>k*r,BBb
SF_0lI6KIYT(e`m+dA4UPa%DsPa%DsrW=bI#L&!XOZ**2`I>'<9:&eW7R_qE*A]5.YQ;"pW69b%(%DSq
@a[qE<mlDZX\`(f,:-?Ge\kU##1NA;f36"n6[AqGRDd3&KBjDe_#cJ5fZ7PBEH99:/ihZ5$eRS[nW9pd
BX8:%E0;`Y5i&/CX54<`f%Z/IG'5s!jVR=>'af+CS1Yk@M3F<F6q\A$)C.I_&'@5TQ=DQYqr"qmqu9Pt
f)_Ng'^WY.r=KPpemS]^Wl`coaf\'g=J+AkP[E<%X#kjLJS@UsLHWfUa%Y7/ee=-fr.H?h,j,u3[OGm(
Rnk1r%SJ;QB=up*>hYKoUsj!oOM[UJLHR0c]!a_/4)/WqR\d6Rb\9$'H+"`CjBSY$73RHRA57el.sPk!
-FqWKfaM1QQ<P!V7G1aTQH!^13`3sUK!DgT%5*F\U$V+EB5KTRb02+)L0(R9*4CX.DjmhqZ+"ta3RKeA
)o]l4dTA-=D8Y/>bLh94H/Qq$:6'[$o%7j&^2KAD9W]D`ml(+OICAEr66=mthd,-B)UK!84JHOf+s-'T
_',TNjKSKLe[fHMqudjn"LP)$C(rhFT99>`n<2H'B9_<'lZbStP_`3mUE_X@iG7PAYRf%h.ph>RVj>rq
*./R0^!SKm:M=[c*3hh(H:hp6hdsEB'E<M2\ab=@_A)Le:c`$cGu?,nl4\cJa>.pXE^oFar61@(&Pdb:
Y3gUG@gMrhbY5K]S:Ad14PpL_855K%#ho$W@=.:[L46KFrf"5ankPf>8kM_IU>H"\!/Y-?UA~>
%%EndBinary
grestore
np
1009 95 mo
1129 95 li
1129 68 li
1009 68 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[120 0 0 27 1009 179 ]ct
snap_to_device
<<
/T 1
/W 360 
/H 81 
/M[360 0 0 -81 0 81 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r)[H!F?L*^BW<6taC@=[Ye:!R\[qPf+"I"FQntMPt3EAq6(/2\pI%0T<<m)j_Dc6lKJHZV:lJX=;UL
bpg%W)lKrQWFfn67;%(aF5O\"5(pt)n"'>^+6S+QJFgDISDX.umlfi\Q?NjL$<dJ)[:6R1bKF*EgObJD
.r,C:Si)?HrRc^oaB*g??hkRT&\]9iei"Os3ctYr@pRIN%g[i]Y5DmY#ju<H(P6itR<,m?HOkF##ef&J
=;mk\3P7^`rOjn#=L`09oL:W7\JahcVlquDSO!h+o\c-+pB(_aGG4+cNs^='k-t3-`"$/VG\1c"gc`<1
61N7?66*?S*26sa6MH4LWdGXp*Nkb9A<'L1OYFqHF`\gd)5n(lN$TeI7A[q^2+b"GhUHQ*-V-0o!Uc/6
L;EP[6l5$R%[f;up2M+3KsAba!)o,@)<>Y/VQ-OlenL"%S]jd.UDYkQ[-<%\R`4pY\QNH1'56d72q-^<
!-=ZkjoMPG4[QU>;Ci>n.[WP*Xl:"O<_b7oiq):ib5$,"H&0#'kP7\M9Z-'0:r;RN_h<`%S1cu+,?V#Q
`tBS7WMY8m<7'@(o$JFEW<+KTbrE!7Q8&p>XN&.1l*CXHa2)SG:%)GgXl($7(_ga@]qAAi=q/G/q::eG
TMgDTD_G4n(o8MqcQh-NQ=8?eMUdi6IM<IW@IRAD@>_HOJT24H33S"U4j#Qb%o8G5kr9+78WDh&2j=?M
0;&%7@O`8df;Q$pa1uHP=e8?ur<k?kR,e\g*oqTV)Jkiq-+dYDJX\N_>D8KSaMq8T3PC[+^Wn1\2Lo>a
o)+_e\e4fIcOmj=#6]0AfXZDH[EtgaBe>X-\LXKK?g06>6W@N8G7Ha1cF'tap6\"dF'3hPBA4c!m&^W?
b4!$iK.T-Z3nEl5TDOlU`FpBQU+(Asr;ZjufN;lj\Nc>/W\aSlQ_M^A](*[(s+9DEN2eM/)sBg9:$_Vg
!!`t)?%`+K4N@hq=bso#9<baoQZ/nBD(1*M&I:dr]a^S+7Q:m^74*Y"]g8-aH^MXUhKTWXI`^MNGPE?-
_$85sj(7<I'n^/TnLF*Wf\fnVlp@<8%%_Tsq8gt8Opmq3#V^K]GW'e)@.8"%D")91D")91Cr"u^i7[&A
i7[%VZ%qW5)f5#F1J3j$!PgG9<*oJ%_R'(2^&16_hftg^Y&gVUJfAMjeA#MPnQV+<n:G&nnq'OG<*iD;
l`Op!]&r#VnA_TMF14*7plhj%l\X>FMdj(Pr$d/dh,YD=$c<kFAtEf2IEo;tjR_hc)rC*U/12rUS!gN[
(rEo-7=KESfUY,4d]R3@S)&jL2#-uRk*]=H6Q1B\IftD&="Z,#QlM[n\AGR#m:lhMhrETE#JL&DL<R6I
1)?OCrZ@=7=`G/0SikSpB49NE,jG^sEER4'dumq-=SbTFadr(<hj5ucKV;E*W%7%V(8kFs_mK=uBDJZT
iGR4D29s.W=l*6$O`Dk1T03,2VTdo[p<D$>B5uYU)!9_@E0_0pd!BY%T3,EQ0KT$P5,:!=46<O8OV]i8
5FqFD0@VQ*oCuMJ4:BXk>ATo,$>91PG,68,;)Lg6LYoOmc0K`9-F_qEi,G6QIJuPO`&o64B7\d5`l@8$
3QkVJo8J^0EH*IH`;GjbO*n4F2k>h)B<+$"&A4MO7<fTdHAglfUion'EA322G^\r*I*@^T]O*W^h_DQ6
cdA/sdAjn_n;6H0YdOP00Ce*h][^1:cQ]bi`e;i`.UP#M]1tE@1[cX$\7>OO#J=E@,+g@IGVW8h1*`s[
E;c2h:;g?a`:>HW]-P&<^o,@1*t6Ui7l0!(kdBgPY86-P]J<QppJt\N9%u1CHNNT8Q?59egPP#pUim?o
laSM7.))LDNc'l1`(YW9jNJ\Gg1G$kNkH%APj)`^\W'Rf7M3EaV*f\QGeRE6cQ]cTn4-7F[F*34ZkU\a
./Q\5(BZ58k]Rg=):!%tIt[Lg(MLOc_2W4mMpX/o\K!*2fPdP64LYkp=7o-WdfJslTZuk'nhWupVitiN
T\W9db!k-3(8G.TPLoCArT1j6-[BSQQ9PDK%TcE7+,gOUjOSXu30_Ed)Kk*3k2G3uQ4joTqs'>Zp#B26
G$31A$?+DXLQ\1efmYKR)W8qBlRr6Xg>(gf2cHf>I!I/?!/:4BY@q6N9,hPOZ/XD4P<M):dOk\r5D^O"
3AXDk:3-fJYR:Gr!u),5MZMQ0N^5m^XM'YLY+jE\^3-^bc2C:E+>LLY=86CBStuh@K!\1)9>u7fI,lS5
b-V%K(n3uHDFK@l>c`T!\_?tI@C^N<eWJXMcBj:eX]Xi'n]Lc3^,YZm#5I>N*]shY/fTaUp'k[2D[uab
BKm9Ull&LaU3&$52ZKr-0BpIjg$!bn3Ut'f1??p0Q*a-PXee[=#>g\d"4)S+WtEqL3m=@+q5>N&7+mV)
Z&Li!olJf>5lc\IL9laq>@_4o+$`GDFhEk.?Pc&jgXjeCd=Gprg3"'D(]&2JH;,pA>fM4DLlHrud="4'
LR<@UrFSqXOle6lHmJo\R,"57cd8N6F@"T=\W_d-dGfEeUg6^11isC\VXI8oPgL7U+aEG\)+u"6..dS9
W:bAPnc;_jYr/W<+3Jh@,97)sFq#,qorLWYD@"UlVX]_FV:K]^gOd:k//$[[4O="5HQ9a?YX"\<5+SqF
qQVYdp]gpgO>IXk[@KJ['?u#`k?3mi22@AOpk1]p8A*,,8haVq<uQ2I8(tk:mUms_8V<s;#;/2a9D@YZ
K_<ot?e[,'L%-]b]:)7<(OW-fU:RC`Yn13=EEGCgiF<70diA`>fe4g$DQKWEiV040)_Wir"/r>+1ZABB
T8Vl8OET<pc@@SDcN!e!]+bXubd%-p.K/0McEgSf-32.E#$FZM[<N#==c@OWa)0XZE+2.PG9I`&MmK#`
dRt+-q`!ErhB7@3N*(TO<YO@CSC`=)1"t.j#0-1A%0jd5*=H'WnE_>ZVtY/A2cE+sVSQI3AAh02.[0P`
=bq7/N0&m[Cpu&;NJ421'Nd/[kR3&\,'\PR*W8JdQI&UNU^tcQZqCd#K4b;1EB]a&JBM\SPOgH`2QgNi
=j^-Y'[o@mCc:S"ZY&UQLkLJ?S1gCMZi/,#FnMcS'gr9-"S0@P%FG%II!U8AXAumfJ]$cF;]&lI"GlU'
ZP'n;[l+'.IYH7O)pACHCXk%]?k0tfCAWI1Ob-gKWL$[NL!e*X4DWJ"GMm_+bs7Y$,\@mXE4NJBEd#TJ
HW,;tcV8*&0"9ai5gI!-XcD,A'l]i$Xju`a5"1ra\Hf$O=:W&B=&Y<e!lb#Y-25uno/Rpfg>sXiWNM>8
8c,^'7ge(u>A;G:\)GR(<pLqGADan3G'hcZq/1gtKBHG[rtAc?DCS%V~>
%%EndBinary
grestore
np
6 68 mo
376 68 li
376 39 li
6 39 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 274 ]ct
[370 0 0 29 6 206 ]ct
snap_to_device
<<
/T 1
/W 1110 
/H 87 
/M[1110 0 0 -87 0 87 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
img
B\r*FG?bhP)oi+M&A,csLl,J(N?C./f)cNrN<M1_^o3(s@_irr'p2Su6*UV*>Dr`F%3(%X@)EV^JUe3)
W$p*QB[8d+-Hkf`kAf8t]6hluF+<C.2n(ThF#2-\k'6q<"Q;H:mbOpL]69Gh<GL*dl0RaV)&\j4S4qep
Z=SrbSR%N\(c5pQe#,u]\e%8H4O8[1>=sB&hM'F2+Gf0cAB>H251.j.P=Qs1[>^0-YJT;S\T9`W#_LF9
Gk&Yma[o]@]1QcoC!u(`OWuhY#bkp-!?h`#P_ts")\]%b)B'A*'U7/=r;#sNOQQ)na#JDOK!;e,kDlaL
n'n=8/M/QdFQl+K&c$?iG^)tY%SdLcW#nu(#_F1qo#Di%d#,iY^qe"27n-,^%hD//I.c#k3->LY+:,hs
:]V^FJs=F4[r8[]["tZ;NfKFQXJi)=`5I=+5^W4k_5Td5"@3S_K*hlM&>Uk3$lMB"NKoc/?=$r@D>aA2
)>W=Vk_PFW+:*QA49lT4JfmTeUo(#tC=S24RpNdS]m953is)PbX^^@PWMsTTFuE)6Jfk>Nn/PCm#_F0S
\9ICJmFnt)^o:JCVR*UMA7T4kE\_o]bEa`'G'8iB))Q$Re#,u]\e#!1&;:(V!^[G$Oj/e#0:\Q&['d<B
PX^i`9o^2RK!U+Q#_F0c!>Q/t+G`/8\T>gCf6?N0WKrj9?+P,$RY^l#4?P_R-O2"(5nF/b"9^1s"@3S%
5nF/b1^?uF#_F0)Jfk>NBF^tk&-P91"@3S%d2Ys`+UEZB#_F0)U,ekJ64a8c&-P916utTsKHLPP+:*QA
Lus3p#XK")&Hb&HE9f:Gh$aMjiVkEj88q0423F13QiD_H?T>;$*lUEB&P`Y,*\oK+*^4srl-cE\f\!R<
1n5-Q5m;r2LmL\4%"f[;VQ^W'5Cr`[S-e.?U<O_E@K&Y3A.%^GTM:]7=8Q_d]JD+08nk#$06!p&-$/Yj
Cfpqep<^Pla776oX<rnn"Y46%iF'aP_Pokd89&Wh>[6([oB5l7fs>SP\eSK$Y$JYdp[58iYQk[[OHqk3
1-c"r<#S1o<:k3?+0:k@%T^rQ*jp!peHT4kE16hn5&g0JaM7le6j6+,e/cBA5Zf`S7e_G:$pFg<H8*2;
Q;3'\>N,9UaN_PHi\^lCYh=Yl3E!\+WNXTi+Ck`&)58+l`jFeg\K$[CXI@%lE1A^P.D101Ico"I/*%p/
0JFe!"XgE':]V`)_o4FYVhlDJLDG#cS!f9ML+%i:@S5RGfD;lC&OEeSP7"W":17S)#jiHJ6f%4P)1jWI
.CP?9>hffA:36#a$_br%W8,+rHj4+mioD6i;d<QI*?FP3kp[p"k09ASDVR2j)k4*Ba3L5;=6ct1*Ze0U
;+7KVb7sefK*mG7Li#X4fBF1OqHm`g3/ps..a%?1e88^+HuFZA`8)$b=CYiNagTir711\!Xi?>>J,AWB
@:<SbIeN3c]6j;?]lN3A*s\+(&,u!)Wa"m&P^]%PL'%J9F)B<nRocE#LIFrF3Z`S>1PSQcE>B,i852ef
%M!)mc-iF]Xf\^0[;&^:7ZAm&$k*Qc3mb';^ElO=0^SrD!oCS8K<'tGW.9,N3-V_;V^OR#f_.UQPN\1h
0Q'`$`Pke2LfmG@*3XcJ.bdQlQU/@"^:Lne;EH+KkMX1/TDU7nB8JRq*si>ajO_0m&fB/)nIUq1bo&#Y
mhW%9Gt%:F7BV)'If6hnk7T3[:S0g^?i<Zd1?Gjg5-+6'lIN*'i8DDb%!q^<+g*_>:]^)"&aj<XJ6Y4I
U3d-uJ?E6I/+_B8r8cZQR+SU:^,O7UOrb!?\=5BnU)g")T0CZMd90UTK*MpahpKj!M2@(On_(dr66d^"
`Z$:#SB.n=q>@1E&<qYBZ!/4)/S9(qMQ)5mj*7H4nDJ5T:..i&&rE6Q+*7*bBkb\*rUS=39,H_GaNMaW
-`9<(XWgtd:]^(tEUILE<[h\Ykh-O(^I'M]genVe7OlIQ`q0DaA5b"@gUD+MZJ*.2+[82`IWO>VFc<f2
=gLT;a0/d\`niip04)ktZ/*(o-<6>.J@a6_f.VjGg0us!Y6`gT1rgiED`Y^a`^16iKSG4:ofhqOrHq;0
3d#&ZRRMF@q!_]sD&?(MnI9L+B^thq<$Gmj+)Vb=ar%V/bK9_*$seI4GWso#h7=2bB[s+_DJh)uVQ6aJ
j"3/I2DRJ1HM)$]CE5K[N%Y9s874tYAX\dpV@OEQGDk&-]].I+?r:"I^:/(cc7AHWSj%SFUp7=Fh7AK<
1i:rgq=<Wh5B1[_\D#<&!ob.CgsHH:_7khj[u^-thPi5I;%rET5^,S,3aTkln0FU7_i9J.TNra(4IlA!
T0@Z?D_X10QdN^$!<\^T>$>*JhnJ3qfR/0Hnesj0NpRRaGDk/0]OKT&jZB'50#Ycfe06Zhcd1LQ@08)c
L(>A4V./*2g<s8PH[@9)$Ra*I"r.]Q&Ef(^D7/rDO'Z0[=t3\nj-EL!3a2?n2m,)XF5c=gOuO*Oc/dqr
D/F.0@I3CKbPJ_:+u(c*?s9"dR.+ZpZ+$!ds2KM1X\[&L@3Slro89;i<8r.EBd)rOC6;-LbaC7\rgUX9
IK^IJY-+q.X"3#bdA'3O[/j5l4@=ccQ>dr"l`"Fl=>1&`N,ab,:*3A6kS!7*_r3e+p5F0gTV*G$qnBeY
m![7$Vp%QCaN-nqbF(/!.e"900eoJr,3=Q&)j[JGPiQub2^*KkjdNfST]!Y=#N=Y#EH-!bMej!"M@1Qh
Po-Rlb;<*DhVR+r?tn)e9bh5IChuf._KgHR()IbpA[N\oIJYoP.dG0A.rX8mo=t\J&:Y7(!41`J'lG*H
PL.Gh\!5!21K?GApBE`"mcMc`M*DPoS<8rMI_TsecA]6rki`S[>uhId=0?)G<dAImoCDJ-gt]9D[)cl5
?+QiUZ$ei)L!.PP2^*KkV3maj+g.uNAnGY$H@"pnkXLOMObG2A<fHQrmm\f!]bC92^'Gs@P*q_0bFeV%
k>tM%/hSbu[j`aT4C;q2QS2^SZa9Q,o?Z*^X^/R4^juU6T0H]Q8O`m%+2f&4I+(Z@gIKmn&/lCpW!Q$:
Q"dEnlC7]rM-1i>*SGAf]6B>'/[F]cXK8K;bH?6_il1celV1&HR#h:CkF]m:RnBI&8c=A,i+b/oEH,t`
5eq$)I7C^GieoJ6c->S)X!\Wh%2q'Z3.lIAOd&osF?K+t1LGfN0;8m7j5XjQ11A$&,q>RM,=g2<hRR]_
\#TscfMb8!)F_,Rfs7H,K>Z-694uM<2.43"-B.3C[4@ZAMG,cT+T<M#!(PL9k_<Y^AW0hckK\5#L+`C&
hp7oZhmI6dP]gB?BG'"G_83s!I69/9YBom,9M8;_;qYNeFmE)f`jW=aA:%c5E%52qWB(BoW%17@=0oI%
Ko7X$fW_<Q.-CKH`5H61QKdVs0O6PPf^SV%gEKci/t>hAml=L,C=Pb;7mo`J/QLFbI`:R)ZR=Srfs>=:
]@pe.B:G<WOd9k<Zj@0NPtK\Up?^JnacktlRPek]OjF7H&:Y7"!-@mhC:B8mLS0oDJ";>6/VF5@Wn-ot
TYAOfdA0>I`l*1LH>.)-AMkeR0&$\Fba9QcF*i7\p8qo`^4"bED6"9QV!9@m]TO=o^u\R/mZT"oC40LM
`f6fQq!5,u$k3Z6hO6BASsl)tL1Oo=.b-RdQ[7XoE^*B&==CHe<>PK+n#)uhqe3S#OP_D@mEV7aq752j
`f(d&RW[i@iUuNgA[P[RGVPuX'HRE-+?h%F!(PL9BQ#-&ZAbA42f9ciS$#rPqr&Lncb\/4=4uFs<3V>$
mdBN0`ZZKKZ9+,,N=?:),gFE>jQ,B`GJ<tB4-_4eXe%"D5\EDOi:8?Q[mVF6<s`MPB,M_QJ;W1A]Qs+e
Y`-)N7.i,BA2P2_DHr)8/]`+a\8gPI^\p&A/54@8hS"8[n(t`ZY$;Qk_^H%&?XI!:e?)qVM$cd\?_?b0
c'gLP>]".]U7:Q)-`]k""AY8KQ?4HI\S@ScTE=+/Je)6g*JK[.gXg-#;UO^<KeTeOWp^*!(9ieqqsV;C
B\^@PJ&QGA),L?jdbH*)V41Ui=NH:i83k$EAuo(;?>aY`i9(dhO;s?a>ut*/.af[4*'AK8PFi9o%]2m[
#p^W*_9Yr7ZcZnaUq4h4f3a$(>:(U@aF4=(%hH7J4J#S'W.=Z%huf>g^/=_"EW6eX\PtCHDBTRFU/K#f
W=$;apLr6c-"C'[",!\VXKl"B^!+d)1c$pdi9O@=J1qA6;U)n(rHe1+PF._><_H4a:\I\0oB&c`cREJB
I>Uag2UU[Te#,u`F>WO!_1MtK\Krsb0etps=BK6IAAgIO`/,-rn2"#Z4O8UXh<*_Xj@$Hc#RHOJo!dM*
UKdTlq^XQ3<'Yh#n,\KoO/h#"g?Ck?%U-DB1cfLt9X.U"mg\O&o*K[4j9aSBUIUB2d5Wm:P24d8c&EMI
#YiGlN']&Bgs`/sB/`#'r-2?rs7kUbG0@dY%h!hi<NWtUX9:[L[r:0$Dgr`H*:i^mkr74r>K?Mhm#-U6
f<2A!B(=m",5<H6Mhm/p>,k\-=Xd2Kp$C@qme6##ZTMK0J@1HfX&nc,KaTY>cC[=nDCN2c$r?up(,5qG
B0oS0I15Oo<\=c>Na"dAl?e'acR3,PY$GkMDVMTo7Umd9J0m*0PSX]56gmJ]KiXMM!s8YYNUPc>?WPA!
VbbKcSLk7LXhNE2(\I?Aldh%4\lGe3m*#K3='*BHCi!ouI!kVPeSL"$G3kS%IYl2k5!GR(.MF.&:ne"0
3H?D$m@?=_GduH=88mj"8fo.IJqAT8Rlu9#S4FpRVKV@\)&X<L%0RCWD\5>:POqtpUX2W?Z:;kde>NkV
f(X@anU(D6,]IR9XGk/+J,M7R;Fa64]qH\t-/$u)X^AiW&f)%5mt[jgPcNV*po)KnjKHIV&$K0EWf`F+
Q^=%tDZ0M2fZt*L*A*#27&B2G`'3-T9LM8OD<UKYE;'0WqXe3D^td^M7LoS*%&dS!^50nTbbV'BF46fs
>[1OtDGsG2GduH=mbPK&ouna0->1Vo@CIDNFR%A4rp/.;>881b.NmRlOoWLrXsQZ4Q"X`'O'@bgWE'%*
^W?!Q+TB1/eBlQ=7a$C8Jf6L]PSLS#qYH@68ZYfM$OG"3AL]Oun_Zamn#A:T6m='0.['`=j2[3n\g8k&
H@!.><YC[tn&/>e:(5f_kjfhhS&rdog=k8>)q`p"Qh>@X;$I4/lmPpDhP*u^]tJ-fd\]_XV8s`gA)l[o
Q]hnB4["^]Mg;qg3&imFr:!(.%#L%+-\"i]8EepD48n=9hg]!qJY3)(/KtL/-M?!O.(%F)XLW<YW)S1\
6"U>I7o)7#0e:p1A@.TD`clEB@K4m/elL'1I2+6)f\9e3<@+O/>T;P5&V79hhqV,BGk%M3[;&CE'.-Ba
_\uET#X;']eM:Uc!C!nNo9O%8T$^.X-n'oM5.qUaq"XWKeUph!pWT$]jo9M0YE:O6YJ:(JFmG?Pb#q"t
`jOejk09BnYHM;!q4k!klg!b-GBicD;*M0AWMukoVPYFGJZLQCL(0m[+Yk53*:1iQ'bG9q8H?):KrVQl
o@f:kM,l74Q),%)gd3g%T;m9WKE_BGhk<CB`iLCSN0)H8bKGh2>5S#YAEMt7jjE7uns%D!:]V1+ITD:S
gM2:p/#9!Kh:^=sDCOArgt2i\'r`tH$fNJKY.Y0<n2_FPTGQ\P$ZU&BDr+.r9tWop"J^&$cKmrQjQ,C-
H<@^uAU3T;a_nLsac`MqS$K5c#Y%9Q!s]<8^hNU95s`>qD;,seCrk0YoSm'D+@-(bQ++5H:/2;F=.?[;
h\)F$(s_0^O"3EEW.9,N8-50KD"tT,9"#8bG*$YbXUH&UI*AX@W0:Eugo;cEq0k"t,0b&Yf8J\0O"[P:
AnIpFYqb"@*^4tmr&#`FKY16Y7LaO;ZW\.V#)NJ;FB"Mk],SV<!9#!?=,OQA6q9b2eO,plIpim%%HI=V
.qKIkSkU/[3%_WXU,NQP7n<9B;AC002E!=:Yd1Pa<tWeT5Q*ta!IYR,Vb`q1oB*/Y[E@1U\P]+k9L&LQ
pV2"FVP%5`kg?0mg9pf;DiN,TF_c]m&!;iF5B1[_6<S.`DVS@FLjJ^WEW,b,$4[1R&8r.V!-A+5WqHpd
Wo,lB1=FOl(q9DNEJF-ZTjr5q('2faO?l'X5/25[EFCEQY@#&MRZ/1@L@&&gH@"qb8_QC?CNGao+:NI4
-o2["=AUKi*FSuX/dp2!eSf>[o^m6KS\haJdfd=6,X$`>A#V:d[\%C0J:1Xe\U%AeKL)K*G@h8Y^03KY
J,XiIY$Fq,4Gst,@XD0qE,\r%ccaM4?G/DKdaZcGp=K9<j,`i/dZPnL?G1Y2e^a$>Z^It2eZ*cdmTh!I
hN]TmHM?jPT"r@*)t2Faj5e=G9J0TKqXkSb5BZ8@R5Jaqh2+7<D1#H&o(2I0k%/3)IuLhE2K=Z_\M5QV
^*9QWB&tRTDBGaecq]@=IbOihG!H52iAA^"%&/V`5-1-UHR![#cZYR&[P5A#14@KMVY!;fe2`!'7qcQa
3s5E@,?Eej;@s;1?G1YYK:&#C&os'mNupSmaU8@VOgiIgjWD+6%aQ2NrlmD;?4.b2oh3-3^\Z2L;c$:u
@q3Du8:hVN/g.-3WUmLjeMnM-]5pQ3f[N2ZgV4g-9dU@%I6"]mmIe9h-RrmuQkU>Q2eg]n]h,&sQ$G>,
&J;kQ_\k7BaQT%:-JbahK*Fn=8KTl6^27_(c1KT"H1N4Gh<2eua,_9)>"Z.!o#i]YOetMjnal@Ioukd[
9.__I[C!=%QTl6$(.:(/+8>?sWaPgqH<-M*NuiH0erBZ.f</D92G?Y4(clbPW<;e^n5+?PW.9,NVui@Q
/?il_[*[q/D%M1-*3;,<NpI*-f?hZ\,+c;uk0u]^=B4WKs%59DVl'jjQ%>*57^V.C.rZpGCeZnXcPuu3
TC?f#fMuOI-;>t%SJ&S^pQ!A$?FXr_M\[n3;mhrFWVA\20<\m+NoZ`@*BFlM(09u-_B=uVW:!83jd`S%
IHKWhjbiDO6h=Imj=RkC%5jWE?:IDD)T?g+H1PW6Xrb,6Y^Ht&Y/Bc@Q]]eG_'\t<oJTU!n,9i+Ue`2<
Q@)1S/BhK$f,-gb#]UW`?G4M<UkT<t-DRiX]0!WE84\Pq`p=-'Z>PSPJqDVqhRIPm&<lhMbo7H8(HT0h
VHUBBZY.UMM?KM7IHp(]\`,iN9UYJ)B:jTMqp_`Pf>5:Sq%Q[5m*lX(Xu<Ii^&%<C0BnNW3]aPcS3(qt
IJ`_9_^'QtpYUI%C_Wgupl)-QQtmKtW<EXD*3Dl:HUurH[jgM<QL#s20@6Y&.t_Np(7OFm(tjo/+]ckH
phuZa_-gX3.%iHhR2Meui65u'r2G<4Cfj/\;LF)_G>_$',aJ]G%X*#=-CZ7Yk/rr>8^##,%l;Id7hKAY
OTtW*c'gM"@q4Wu3cuhnpi+pLmnOn!/"HN\+J=s:?Tb*8??XMCD;jIl!W<_^D!q6!I!^3e\s"$iC)f6S
7!Pb&;%XcXVF1[Dmc49O\$)+S55dVqE`.8cl":EkcBluHSa.u@#H-[:^(;ZrP0=(;(9lgsfg.',:AKfu
V!^a/C+*X8LlQ)VfsGH,c_i9T4+#MX<OHSl@aDrZ0k27hIU$XbeC7Ig>@us?d\TU=XfYg8C@uS<R"9eh
#o3=0lc39/&-;n78t@oTXYqG`+\til-6#SI8%Cc.HL^b(Qc]N^f@Nei8Prk0W.=Z%fE.G=F'QOZrmss'
6Y6P#:D.aFrCk2&lj/A7]Hfs8/!ku-iYIu9q_3FHa$%"^7L9`bUm/mr[rV[FH!ft3@,#FXd[3F<;rJ9\
f+[mB'>geAHM$FKnDV8X4WuX<1HTZT,f1o]a7_ms1iiWqrUPH)RM6<-ClBS6NDjYmPC+6QrY+YP$b&Ag
D<@-T,f>?GUHdD:AP5<i?::<<+W\*bXX4U&o[=np&?<f_d./'9Q!%^k,gmo@bjp[Tp?ct#m.%G^ThHhR
"*P6IQ'EZ5H.YPN`%u!!9EKI9EO09%MG)-;s6Hl'fZq-Jh`fml'FF=4!s>BKI3e0oIf6kE&!DKN]690^
)8t#0N>jh%`l;WWfWfM\cB\7,LPJB!<0Sl\!`cMZm+o:?DU>Ur_t<TnZG)buAgq#u@D`9QL4BVekD1^?
+o:<`*u$k$$S/R<UrQH-,.3cZBWnC9(.6kDGl<fR_X(G[,(\>tKT%`jT6cn.PAM$(]i!T/nNiT!hS)Tn
@'\NK=A`4iHm1:"0dJ#tkibU%-;C*rh;@*S+sQ%,5_9+jIXZapVG3O>EMC(WHU:%c\\:M7$4&iN`,55+
'Q2!:Ffkh%K&l;WfU%d8-+!^_<L]I/,N!n?%;fbkGGV0/8*M:@8PW%Cmf_IY.@il_ZQYT=/b_+`[F?c'
:>Q/mW]?oWjWQE#I[SBihs>4d#CZj5=1(/9nq=\,Om#b6j2f;4G%3Hi2qa`8?g?CT0:hBIm+AR@gMGQK
L#$Bef.OINo&NC=gld3slGSMmo(PCuDEE(1>Tk1WC+4<d;H^%0Bg>IPYHP.rmj2?"lKZMcUP"2O!Y:>!
8.^S/J@Tcn>CA("V$5&>b;qdrLcS%+VG$#ko<LWV;QMGE\-5&EBYU0"FZjTLWRCI+8b2Ro0X)O`5t"fY
XS[*E6u59&mI>JD#>M58WnC@sN$b69"[qr1%X+q/q%I1u.7Y(Nb,$#!:\<Z]fXi#-]dR6sFFaYnK!.r`
JJMoIQb9sn4$,OXb&cak/bNqJ6mLcr@:B'qK-K'$gB<O>c"^-V@+e\?oQKg=Cfpqep8)S<Ut`/fW(WYu
_<()I0c$8`E-`aH9YQG*m+Sk**S#)_[S95$%hB1oj3Z.LH+lUClK/"p$m%Nul*+mNVECBCCY,`:3f_%t
aG;5Y"`@sD<"Ki^GQ.O94aZmIH$Mu\T!`@cmbYXHr;%HsGYm[R)4rW<0qfuXlIDs+[-uPG(Z!s%g00X3
!#6(9+)26mLn\%]OBU:J*9$U/"Q'`Pp[jCk5G'E6Q7C6()][021t7Sjitg@S,`ZH:%.]j'6Y/WMQfR=/
E,07+.6s13h:=/dmPl[1Oe7Rh9(`b_;f[?AJ5Sj'gOk0aJ<WZ$G"F7r=^GWn9QC^Y:#,fTI:H_N_%gW3
Oke_s>?b<@?QC/XX]r9#eVl+Ur;5rtH1^=hhna%dc?;R(Wlq9WgXjU45:r/SWe,ZX`'-eY=8^Y3g_&iB
LqP2gE1jAKH-,^Ce(M">m&]QW^]'[98K90(UEm0/.4L,?;sW&=0A!\>09roO[.q(`,pjt!))I"0)"Wis
CY)n#C/n#hEl&GEJI`hd]QEBNRJ+"p1dS<!H?so!]#EF<I6686`/#!4HlX[ZKV<Df(_YLcpmXlP+aSoM
l@5<*(J[gr((*Dm]?l[]d+?S\c5tP=b6g4HTcpi`d$bW(%Pq0QQ=G(RFgAU!*u7Y,0g2L_KH9C;g4`=5
e&`rq4uc_e*n@ttR>'2$J1)F^Q[bp(QrPRH!?8=3cik?1Jcoll"q7.4%o8`W<E?FbDr,/WJ1NdpGj`4L
l6b,W0'?:rEs+USaS-Q":[[Z]*NQNH>\cWu(U[uJ%-Deo?ta4%ULc_W6&cd?R)\:Nk3TkZqYH@6M4;We
eX;hn()@ZZLT[e_r0`k8Pa'k-BC"jJ164s)mGd-"lHD*Dd_'ksE`I-sgpiJa^Mr-u"hkH]&Ah8c!R-52
s"<jf"B>dSlm0CpHe0L9.1&g.%&(Zm1tNs\F:[VnYWm=&rF4m\+mM)@kI6A>.O=;!!Ke%l.j,bH(2,+S
m-JP(CMWeA3\iHGRnHd_<dK'Q=[V3/j(HW*7@+lmr^.@bOL:g$;pGG"VC0\Gb+s=Q$tbLY%)JeM7%EDi
1D1kKr:[aHmk1Bs[;4CH[m`[pYl@=fe1G">=Iq/t/hW0AMNX,eq>?>0AD:D'H8YN'YQm7)e>U=(6k*9R
'P#q.EV*Lq*'$ogp.SrqN>jejpc;A>#_UbD&:?IP4V0k),I'$H4Qf]-OC(fi12`dWN.m\;3W"8lHIVbg
,Yo7UT:5p%Q;L5@-0MbF+ioFokI8TCr:ogDc0\Rr.T/P3qW%ap'kf!!Z;C2^hnMd/(clbP,sQM$3V]Hb
a&iGu$9/^W8iYJ2k6u#":e5oNPGd`nT`\eNg%e0F?=%G4@3>1*jlI?s(m$]&Sip</a2tbIA]g6'K*Ia2
R-<l%1];F]ekO0[SiS;M.b_.;LQR]2H^K6XoHDXYoF$?ch#,;0*??/HdX6IkAN()*$)q+9.V\/*i1S`S
T`ROt.QN#VK`[u?Ih*U'S-"ZkT2V.0@P?(>ADBLrP>(*$ZgH:LO36Dt@c#N(-WIeh4)V;\Tjfg_5dpR6
bfkS9q1h?nliYR_rVBg4GVLKj7GV%&.TJ_j,`:_`^@Sp$6Rg37<!B`naE``J&g$s&/Q==:TW/8*$A<7&
o)(TJ39bg$@9gR3.Y"L8fNE/=O=7.I=Y#GjNS/dOn6nm@+phr)4#Ld&OKiI]J,[)a[;$f\>I.qdgt^]+
6<(Me5ZAS)$ke@o4*KtX=;M3B&/5hse;150Z_g]7-nHnpc04dd91qpPSJD#S<'V?3Nrg0K.3P)SHf/;N
fbR)$'leeZnDY5KTeg-;$KtHA'4/7EJ:F-tgDH9o.,cCNL-W\>O<GR)[^NV,:8Oe`V7u:g2(0UB:nU)o
<<raH($FbPJ$)[uG449n$.&J-)(_/nW;n6&abFBV_BKoT]qJ&0gM3(6nUHNAoK_M%P`(G-4*W0SfpFL(
fM80=VcUgZ,Geu$-VN/boIKaQldr>dSNAc[rd<kZTOuH;T=d-[&N=U_O?.=Xo#i\qDr4<]<d\\7W`cfK
*OE:5DVWn!gH.M[r8e/-,9qVaI$erJY$JZRHDPk43@Z/2Km*QVWYH)iWIs!5E%P0S=d0(.6Af"*_sumX
gGnlg<8H-WE;u4plp1gmj?k610r+'-:W6qV3<C5Jfs>=6F`g9s;87R.ZI_$Pg9bG7Q>PBbD:bprRl5-)
%V90]e=]*[3d'`Olg'aa(T?L"?9JXOL;_h!,Gk"5GZLJ7ECbb^^e1>'>/'!lV8Cpie=?kTMfq/Ne+_@G
Z7*8)?+N:aCnS$fQ1[,1TqRG0ag1F0m9?Oo7-Q7+Zq/>2lIDrU1l.!FTnU_\j2]@?m?]J5DV20:e*Y;C
/(HZRa,_='+$Z?M8^%:dW`@6uh*!j3o'b^o93b_lPEQZ.b>Tmm>.$D1i';;$13l[sBe6n)@+:s%i'W'M
hp9^S)EZLX5"C3_0]Ek:F+7#[,C;BLVA!2s,Jme.dFsMK3+p`/O.SUhbE:4LVZNU'r24Xf`f+@(.F8Vj
P!&#GTh@Q5)O\NGOUmu#IYWQLB1%^C,Q;%Aftun6k0-"EC!n8MB_q/Q]7C%hdXPH1E++Y?/a.\"CMU\4
8YqL1jlLXOfTEhqTgK((/ku'-h9/!g4a^?P"^beFoB+;-BB<-q>'7iD)6[D^`o!UjGkULWp?gTN/6FT8
`!A.TZ^s=,:73lVgY;VTWDiW8\8XqAK^]/Q.A2/rrs?mh/mY,i.1GU:<c22tZ+W+tkgKZpli^@(KF#,:
Q--mQO4qF-b0i[-NqsJ%I(8)Bp4^e73!C575OkF46d1W/qtP*Vc^=<&)VkLu7r$BrA>[90H!mXV1'?>A
@K1ND0;/mu5&A`I&YfO+p[@S4jV8aTm-O(D[r,LFm0o+)9J[l?LaFl725PBH@Ug/&X[I-5-!6-F2,[@Q
W!%0_F4[R#bD_A!hVLF[4s#3?!Wj)J_AC_'J7t\&8Jc&"gC(\[6Pqq7.%NY7;&?[ETdhTM!><$c$A'=k
QOMcI.]f'Jl0m"W.R^*]+I[Lm@**V_$U,ct/%\&6Zs5X&_`MoTO9)J_,\P@I0bu+jE+X_rcHT!sIYpXV
*Xs2T][Z9L1Gc?nB1f?"M)&P`,so"Seb8Ih?]f8nb-F*ToVa7Z=B&8,CY,^99q&<$X&lK2QS2^c+/Rm\
"bcB!8l7j,r-Se@Q7gP:\6QNI)LU`8CN+Kp!re>bo4m2D#N!5E\>dP?UJqbN._7QhK7Qk(gh)PC&etsP
9Jh^n/mY+^G6]^p1h's&MCiIqafgGd>8^Qu_WKVcY\MI_Ea:@*?GBJ2;^<\:L4k5]>e+n'Ue0%5:\XVX
O,/Ve\6^C1/'H8bDq_R4'.6OsGBZhR81:l)U,^$-_\Xq1(_@6$]<[/J@&oI$F6>$$BP5Y_mF8*Kqchd_
D0t?b&c>K5'N@='?`5LZ7$I0K(-6K]Du1EiR1M351<IgnboU8!MmGq"*=#/s20rF=mXq8l-_ds9!e4QC
Io1kk=$Z7^JVN8&S-"\8ZRW"@6Ti"TU<;]RC6qW\<sGmX.:d&Kh#'fO0)3%Wdo'**=pkD_JOC^/!R7,p
PE?f:"q?aCo&RoVCi/b9f3^&u0lGgY764uRs2>d]CtZ+j5[<EgRKb5aKJ-<-!i#M#5_F`e=J/N2$4Gh.
YL)T.l/J&A2fN[6Kue++7=u?jlk*ZdPRBZ'+I^MrpgpUMJHkobLqCZ$7:`3FpL<E2Sh2FAS-#m#i7sR6
Me=_Z'PF\YB`esFKfG;$%2uHn7nQBG=Y7+"gW"-qio6\s#C-+;l,8Dl[C!<n77PIe0@.kd6q7nOW.5Gn
^]t#G+3nd8"AieIliIXB3Reh'.)qn"V2MI1FG($q3&/kBk"t</*NQNlDeh_%&#T)c"9'\kR`#Hh1n`8)
1^&b*!^$@RgLm$:S2QbG3CRJ",od,5i69sJU$sU1=G*PZ^HNl*FEDV&;p2gESMOmg>6,a(:sfn<nm1kM
ce$XpA,<91[H\8er/dG=N6W^Z:]V_eJL:e\L?KWg=&+<9O3afRFY(lf(UpTbpcb3"\@3&-NHbjaKBH%G
fq(!6[d>4&*);Gtn4`r2S3$fNRrJfm*7S>g+Y^uHHh)Au@7q@#Nh-b#KMX'FT_,!J>uo@L*gJ[OSL'L4
$l_*`&KjGq%$ArCB@!/C95SP5QS0*RIHBSPH$aniX&k?6WQ::A`l=`KM$[-H#[cMT!htOd7qHF,mCspH
7m>&D"IT->BBm]V_cBRuRKJ\-94?6bB/><YHGPh.n5BA(Ig$a\$bfdUk_0h#V/mrQWeP$\^NE1/\KB.j
']Ije.V"QG5P;e2e78o;9q+&g!lW4&.6BW'XC_\I*+5h4?[hf>Z*,Z10&F3aYHb>e]/NAUbK.aqoHWmW
$4,Su4B+R&V[l)NVO[84`KRPlUJ/aH]5e[br.4e#_\M%)i7sQXJcaT0Sl1Tm9Qnd<%EhR:b(@)0M!!_!
NIbpM>+hQ=*o<`Vgt5QTh2o4h5cIjOmTbOp4ZF*Jp>":;Sj.?`6%Q/?/Wh1\"pV\_m4'Y<r4#Hf6:/SE
%G@(*`<n'UYcog&F*"e`C#-AnTgOU^GJjh<+G;E;<WU$l!Y)o:3H_hW/g\moM,=lY/8b(@7-m;ncMgj`
RHOL"BPjKRa\4Ir9(_mmgm$!4k6d%-nt0=A?FiBHl&hjtmaXPM<tuaVKD/ir9Lliu%R_*Q%YgPa94k])
%eZ#W9BGbDB4bcLmbO@u,f[jDmdBN+c_#^cqK5h>f'V5$=0,MtYHQ8cQI2HtVkoZjBUA?IE8X!ipA+XX
cSo^p<.J2cW'LT?n-)!+TRVGC:T-r4:4\-+(2-MY(/i[G]oAfu(h9:[DNmN42(A]l4hV>+3%LgJ#R(?B
(MMl?CSK@8`prkeP9NP>&/"n0'-XBCmFCeffC[l.@K1MBQY2mLEM@7#Y#WWabfhU^,,2a+-7'ru3]_"k
CGYo+(`<2Cdn^i!)<`ND#8Ife(\k1aBSb`3.aW.CVo4_;EZnEY5^SSAr-98F>0.Hp;_k]"k9]_YI#Ll9
&.Mp<_7nk)?Xj@)TL&:oc\L<qW<f$-J4ptOjh`/j,r$/^gMj$<G\=O3M<@Z_n_uueJ,e3.B+H%G\7<R>
<`W8(Y--NgDi]d5.Oq?JHiO*DU.(!mpI@8*3`DqOIJNF[HA@6*$4,Su6;^#;@Fl"[OY5#5\6S&$2""V(
M>]D\B^\E0+95#,eOGcj7N-Ns!L'O^J4`=6$AeKuNTr-EIi<N$r5Ld?&?K)V#!TnU8eFJ@`jn=LW];GF
H,1bN/TM.?O[skJII#Lgcb;^a11\K)qtJJ_1^[2I#[\.)!hr83"Uc>2kI:DKiCo%s(b=h_bSeSA]6Q!\
m%L+54R+<Q4uca+1mES''bL:ETOIYMYR33$-TV;uG2m6X&r.S/%2::"7k-o5/o4\t?Q!euo71sO-\u]B
`Pognp?cYP]K'3nFR.LPJb1rj"J>f_pk%E<&C'UCV%dU]h\3,[;VtAr&FHN`N7V#FgmtEl*X&Ha"KHuc
KNXsF4q\sQoV%cYZYP!S8mRDG[ZGb($tbLYfYs]s7%>%A&AuE'/M&I*g8AN*Q3Rn5;UR#2"VhTc(Bgag
i5>BX_*CbHL.PB;-=ip/b!:6_Y^Ht&Y/Ap=>t2\pG][8F0*k_^d3Q_`df@3!BRH9#04F*%l>DNN4M5PT
Uq]F/jU5/,@;lI3n,;_b4A-CbYjUA]CM.;#einhCL)W$eaNr1&RqjdXJ.TF;>QmM_oZjJirt]:p0;=:5
"c4D+USnHYm%eC'ffS6(hXL7SFBaE*Ld2!gS3%pd!fbD4nGAW;B@U$%(-'+Q,]m/F;,@8)2Ln6P&nA?$
KCqk\4%kC)q<+B"^AI=[D/F,Zqc'b*IE@Wul07GGC'57__A@m.J8!s2;-@jSV(f2*Ppn(c,#6$7?ZAPG
gCD)\U;J1&6o55V52<aG]0jX(dKLNj3k-Nqo\Ri_qf21qC]grOd8bJ:]/Qs9.OA%3X8T4VSD5cj&J0ph
PRc)&N:nDULo;JkM9rm@%4WKR08Msrd@<B'I@G9&D\kE"at&%&indCK[-!#o4WD9,gRtb^]bTKT@T#HJ
_Ca+oHPcsojuiGnF1;p=:+@+K>_g]i3#3doFDMB3T/o2$J&@!ML5(HLZo:'.]=W:UU.GqTW.5Gn+=77[
aN]8FbG[i'P4RG^Y[b@#c>T=>!OiB"E+9sGX<qag+j`U_7"Z&C!i!7'-ePii`1k_96IMWdG+4[)[k:V2
1^=-Ar[j4&Pk27@U>T6KcI;JCL80+6O:nX/&<e-f8Y(8aVJN.4m`po[>1&p5&&bN$IGr+.GSE[0=tAQ?
MuV,;q$0>g7<*\k<Y9't1ohL5&CD3D<,>"/L++K8@:0AWFC]ob9FW-H#;sOZ@ferhN,20%Eu65)6O+8k
#LQZVIoP_e[UB:>"%5Sr?b<E#l!CPVhcn]DG?K[@HhT>j+5Xa/@kQs#HbT6GZZkkE%hB2Zp/*4P<E3&9
qp4JJ\u)@%g=f`<>2@TRnZOMk:i&r37,\LT;a?C.Yfj9AI;T=Y-`AM3ep^g2p0hc.=!sdiiP9AD^n*=6
Y^GY??r=k!:_aO(MC@6XNKF>Q932,SD=5Q$j@GY&"adTBeO_qE6>,<I-_uU%[TYIXeG.0_:7DT'aNK5X
*OX-8baiXa02*8WjPT5c)LgO\Z#'6r"Dg_b:W),HE?$2HLMVn*Jk`:R?bUYQD:R1ehVR+*mGmX&?<C>)
:dDV(XfY<o;ABuaDr&!I,F?p0e/^Vo*'AK8baC9]n)($$CCX;E;>>_c'bCC;*[H-cX$)V78/tb>g2<")
;-!teaZ/#\\J?Hg(c@nl"EnBCm8:BAbK<-9ZoH$Tm9buqU)kbJTn7e0&>A\6XBTFNJd0Y"hg^>kNe-e9
[*3mu8p4>kYj5B\;2M30,LDP,h#GP!$;\1-_)Yb:,=-VnM&LG#)q3N%bVD:[k.3p>"h-B+04#%s%VBLK
dA'3EB4ptkl;!NJkk4e0MMdDUOdVW:d:fJpp'F_a'YY\t"U')K_@"7tjHE#]l3J@VV`"@Qk'.()N\t>D
OQ%M?45C[2mGUD\h8;rlP/%<Dbh^u$'`K5""[k&5T^hb:;cPYeZ+k%N$d+^1o:Z%S++q+N#D^CGGb25K
,qX[tR]&@VONLJ&:tS7#*!mX&VQ*Vq$?*OYCjX;>fX+?#g=dGa)f'A1cY/p_,=\K)UtiP(91W"<gt_i"
V9dl'CL^g_k09A3)B-1r`JP*D2Aj)';GqQ(hRrq1=RQes$Dn/d_A@m-J-ac16:qY6^BWq_o&;iJ=`eu0
*"/7(/$5h)O;Wduf"^UIp.-'aLdV9[UP"JQq=*Msg]WTr,Bkbd4acuM-\TU9i\_ABmP$hZ#7mKs#L4/_
M1,u5'N#!l:(+V%@%%`VL@*%+7e4X3],kg7&hD-eDK+Tkd37;ZI=(qhohJ7WN:sN_Z\sj(DJ<esdS0!"
qXX2t[]YICLlfgAUIL6+E087Q/hSa`Kd&-%Nd3W0,GVEEcK:nMBJbV`0-3?,]MpA'F`h!"E8fcnLWuoI
rquSDJqBG[)EphJ<Bq84+9i!;:tNR9=e'UuC+e"C0`H+c+Y79-gHL^:1(b4u;&b6Hpq2RGs,gAMTaXf:
UOWV060!$H\s`L0-U@hpV;\b_G<qYffcn>:.n_$n''GhDC&"]s+qe(K+[3d4oF,S=%..,t\b^T_+Do(!
M1XO<gbE<YYl4TPJ:Ot=cO+K?[9>0Zl6e#0C%C?,P.j1ZaPYl^WDkVf.k5B2<T`B'$l_+KTMtKYW2QZ@
](u0t82QGYH$O[f5/U>#;>>`f'G*Af^FdUGMM#'m4_9_D^_&+gM6-NW^O$4>J5.1FllGIuX.qYR"Oj!\
+aJKi*)J&27r/NgE(L-dI`<$XZI[^E"XU!ecf=Hmr#I/eZ[_Nd$bu%W,.f8_Tr&0KVK.XSP@/(<KR\lM
D]?S]!l+.VdT]:7ai'#LftOq^Qe.?E7g(i[V5:#IM?sXuF*)MgR#S/I/,M*#TqT:L6UKLj[.!>HHg9+[
]6E]J"U1#9p@e3W7;-UXYD\;H1W%5Sa?cG,WdlLF5u\2IJFj=L4m^s4Ukt0g6M^tm/_)c6a.-5)X7L=l
h-I712,6GH8'\2C#1qS.!E+T$3#*"@0L8&5*s^d9gf=bQi='?u&@[2]n;S5mHTDXpU55*?&)a@(YpD))
+a8HJ5rLM]I(_LFFnDVnNt:!eGB7gU-n'=2[S+G6?XHUIMc-O=bN0A[Oi_.miSgSpS=CRi:=mf8WRYa(
q\'\ZV:Y%T_i0N_VT8?$F;*2#Sik+9hO6<;#(;Z6!i#/f&Lnnir<4/Ea'S-Lb_!,eO:ShRp5u]bH??AI
$YGCX4C9-2Qg2LHgD"'@Ad&>;-YU0\BM7NP>pcgs(srEXFX#VR6&gnVl+@4-`,\0PCg*()`#!'!k:KoH
o\ZM./R#87.k?O6Qb^C%M7#<&3$]gtP'5!jb5++JDf9RDk(F$Sd.!EXnaZ-CGQ.U@-E<u?V6S'ai4sn0
T4b0S.""=f$A_MbN3b\QaDW629C+m\B,c\fUJQ\+,$.$_en/#!5(JR5CJm].$n[IggaIoI3t2cc"(??K
M3;SjYtL^ZS:'qj9juB-rr)_NCe7/gGWP*/,!7tMQrpl<7dIhBA&jUl#-4c(f["toIG#3h-<fp1o4-XA
8u4Ia%0#2l<Bq84+E@X=d,)gb3:%3aJLKt]J3uaLSRIE6TaHUK;8_IG3K<ct_26(Zcm[59FO'r(?C,:a
2`1qLG;h?80_')A`f62SRui^C-5MVu?F,mCcqoo)_g^7phJQt=a)i"2(A=ip4Ztr':/9$&St;O$QtiXO
."$Rq+G-V6TE5Fs3afGDg'*ST2uXIu!:Xj34T~>
%%EndBinary
grestore
np
383 68 mo
983 68 li
983 39 li
383 39 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 274 ]ct
[600 0 0 29 383 206 ]ct
snap_to_device
<<
/T 1
/W 1800 
/H 87 
/M[1800 0 0 -87 0 87 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
img
B\r*FH!FA"qZ"M8("=4E!"m1,$rSq&$3`je/BgH"X5Gr.VI2A+3.t?u96(#2E4Eb2EqV"DUgBrA_Gj&>
dR(nr5m5"9:dKj7I<,;SriLP*C^p^Di=)@QMa)<UB<T#CB<Cj.[@XcI5l^lb:^?o=:T1b-o"V[5(\.P+
zz!!)X&`'j\,zz!!%`Xih?DQzz!!#@gEDZ]9zz!.^bo\0q=Wzz!5QrH>SI/<zz!+9I_/d_RYzz!&-5@(
Bjd=zz!#QW1MZNkYzz!"9=T70*Agzz!/:^;U&Y/nzz!(-j.;#gRrzzJ>%P(-ia5Izz^sG>O'EA+5zz?t
^Z8$31&+zz0Jj=W"TSN&z!!!#);GpE`kg?0rno@8%Zj4N<6*3se=pbiAzz^aLffcH+'t8kM-`i4u3aRt
?9F!s8Y?pu741W2QI]O']JD0de?HXK2gsJN<pR;,@qSdaHq,h7IgqAn5F_DJhXH_M"+#:TA[.V+[/`Dr
6$;lrhC8zzkRAga-)XM/$47+IXGW+$OHbtD-jJrD`'o72KS>+;C=K3=Im[<2mbM+/^!Y6T7Rfl6QH7-<
L^=%]z!!)3`GOF7CLkquH!Y#D@QnrC#Z=V3/rj61UNr8hQ>(72r[Xotp>SO,,G^)3+C>.Fs-RU8X()FK
k\?IIm)DjuZ9pN5T>a(SDR2APe11^gb"98FpdpU`9z:f:23o&NCAR-9JH1Rt#,mHj1#FQcQ9If4Tcl5:
N[>?Fu9(bibUe^_^\8$lO3Eok8u(Mi+iOP't?#B<V6"t:uMm%gS8LW>;h0A+6DX&b(NcB+,!M;+5WP5$
9!M\[mrU]:ApF:la.!<<*"!#W8W\`)N+@[toncgQiPhP_enrVH2B%3)`tku.%(RN3+X("MA&OP'u@"lc
7A%0d4X5[L13p[6A"58Q!Lq"TY/BB7-r'">&L\WV/5#7hl/U]:ApF:QO+!<<*"!#VQ/V&M@2'Z6DXDJl
>KVY*o`IJ``1Iep$gDbWP$aD;%1"`[C9>nRb_R$WVeMrV")gCYH^SXl<>#u45jU*ZoKn)(kj<<3("kSB
P.f.EdA7"C!l!!'B]++F!975Yl6>hH)YYBn`pIf9+1LCRUuC`+baqXs/h]E9onJJoX`$ED:ZET>\,OM@
0RSP=Q,F<KVaO&pLOEH/7?M2>n[D/B_R!<<,`(796r'kqArmdBN!\ofea1,:dIT.j]jace)P]_BjN9A?
po5C<)T1k^S`!!$c#]6E]J"U2/mVQHt;4`taaEFFQSL5$HY'ijucOP'uj!-(k4/T0I[c/P?m;,R8aYco
h<JZN.h<`o`cM2AmAQ^=$WYE>9B9');&Q(^YI!!$[Rbe!*CRV]3I1_3mF]6A1YpI7YC)]9Nu>9Y::Tcl
5q!!#i"Pa7VQgpiKc1FGnc<3HKC)]R+o4-p\)kg6#<]`p5rJU1ub/rFHc4WkpmJm<tcM+N/F5(C7ahnG
feC!`M=G':="&qYagH+t.7)dBE\-n6_;p%;nFnt1F2))VJGk(,<Y]c/quFk6rYiSdHbdQ'<J\Zi<b`Pk
99Gbh469"/+_1G_o".9!*/6YNEDi'j=_!;]<8Hp!<tqYU.KCY#Rnc03`\>Mt"@ET;f=YCXnuTH5#-M]u
@qTCDOH,o>P)l,d;FI/,Pda.s6f3''+#[i!?3apJRe-1<,9rkf72TLJq.(i\W9GLS\VZYn$OP*3[W3I5
pp]Qisu?!OdPPpg-58;P4O8P)MO6tOc?7F2SaC(,>aBF'-;;cZr-I/.du`dIC&2s\uuA&jU@"\)!PX8!
TUT%SGirr(<D:Qr90c-8\Xcn4==M]u@qccF>SN/<Bg3"EN=iBk8--%&ck;,Pf>9h!63]m<77DUYIWSt;
OK7ut*aZJsK*Ll2>-@Go@,n#1G"S^4k^fX5MHLECuTB?qXtDMeN#$m;[`GOPP/q/c)#O,o?ZHa5/'Y2h
H)Gjq@,G%YJj-btX,6NHbMS=CQ7_k\_U]iq.Ee#(<S/Yb(8oI2FH=62=).^SflR58?mN-Y*H=8@2IZtM
1/e>Q<D:8)ss"L?$9Of`+!OIPOj\[,C:N>jg*r:mNP@km_>0l,>kl,(K%+4!$RTgOV/m+E%l;#iE]S2o
jToe'-DZgLFW8kNjNYTX`:HLtl6DMmH7+YGC-^J6@ZPgRe%:8.k=-R\S-<M1KlX9nBjck$1Ei8V_6/2$
5Ql<:CbnF?$W`BJP95aBsJHtI.p<n9b_IDkKSXK4NH4?ifCo?TVtN(2%2N>o4irVQ?(G3p1dM3]An>SP
jP#/[olkP1JiB..1.'GSJ)n(Y<I](!)6[)g<Z18Ca0HhNE$I/NNTLl2>-8`7fin#1FOc-NtdOe87APAj
RJL_1m(\2B9c2i^<qpl!hYfmG!cq!mC0h-O>kCgpit>$>-7)dn_]L7/?R'H.$\+<3OjPQ``G%NJT/ED\
YR2c_KSZ;c)Y%;3+5IJU<HT0?f=UIU@i7ueu;C;#&mpAb':s0/4K/M4<7ZHu@R)>W9daOW'Wr;?KfRbG
/bQ\;VrK0p(aK8>EeTOHd&;=CH-*Y$H,-($`9W`Y9&a$j]R_.%Uc;,R8aYcoffo<iAc.OuYs0p/s;o(#
]Wl,CW\l07I&naXBnqJ0MJ+Z*.e6WtFlI?ei8fe:,<U;uFliC0H69U(j/)IR'*R+_rX/hDNe@:<#kERB
!eH&!-8FuHq5RB7,M:*_V7)k23KmO>JFZtL%%D9.e^BIDMm9Q<p?lY%Ms"i;pL_YtAq2+]3B?<a7`LK.
G_Tu8dT()QmXYYUlTC-2uG;#iEZS@Q(lF^$i1?hjBq$5kd!mra>cZYj@@fWg&^7uu])&J5UkJru[tcX6
.q\$,T&%2q'"LfEsK#7'j(`Q#nuh6F8k(,&uflT>)*-"1Ct2JUa?j2[3J6]&jS5(/lBKOMcQX]Vjfm+J
_+*^-68;Hd7mOc_rE;X=;JZd10S/bSlE+1s!YXEDt>dbN[7]63F/hdUJ@5%2<]P:'/+GjhJ%QaUhi:7]
eZ=qS^&!9E"Opu74I^qaO)Q5LV\f4&"7b0#U\7CR-gVV\r,Qe=u*LmdYc\Pl\%_1MtK(R18QLXr3-a:o
FZ[Z7eXoV2u.>+"J*N9VkaX=s4Ep](5!D]lRB#_!i32s^GMPH)g.>IP<l\k<kj*&d<Zoi:%/Ll2>-8`7
h#N^jV5_n1V&rds;=@6g=^n($[+?V=h-K<TC1E,`FNQ\0V9)"Pq_Q#ZEXbn_m7(e@nrAde6^St;PO`QO
T$o:I[aB$AZMZ!+DpJ:IWc\kD?Nl36eBcX3qdKt"O8VbWf$EZ?&=/mPmd%4gPiWDaOu\+O+&E02-Z++O
3^QgGPp'H5OT@:<Tg0CdDS]mKKSH#IeH1j*#G94VS/!Oa;1.4``:5A/A:L"r)boBNB[ZB?FV,1Lruq(c
1Sq9OOGbOkFKl$$7DHo\N4V1F3/6B8Qhh.Ad7Pa'N/.kWIBb*=K)c@s)S2ad@be:0'<-3!&;$P1e@6B-
hYiG33"k09q$"NHQK8(;c-ih?Ed$oi=1j4HP(d&SXAomSKHfP$hSG<JL-Q#G6UXD>&H#9Fp-L(G0Gbfl
m)L;HeWKuFi[<0c9G<)gg!Wq>T,9DWX$Q7QI"-PnFBS<K/3:t2!qF2XfA2fF00dNrR/O\4Z.($X)="*J
@lCp\=HH57;5dlKWU55s/@J$%/,6:7<j0K_IfI>,AJI<'?`]on;3Mg3Z32)SCnhU9hM1G^gaLFH0!k[g
ZEQurf06l*R;fX.b(2E!Ip=S4S7"Z\ACVbNZ#/@TNQ.W$U]ph\Te!DQ!uOWuJ^-Q,^eZLIDSTa';^EFX
I:dA^%l)@+a>dL<0_pM:T2>,W>RAUf?e$ccbXqja'1BC[o+XY[*5p]eMmO,T$V0k84VL5&b)7)VLpckp
`a>/Z%u_8i[(?Ch'ZE>Gi9[CkAh+QZY<=a-\n?+Q9gmEq]Lj2[2i+YHq1C*&p-G8@ra)@oE5bZIQXA^$
T#9;5s#&Mpb:mFkG/X(Y=1<]5@#E3ZdQ?+\N"BW+1]ER@78)L_1u-[5"6dFT^K-_k<T<n?9LM_-J2'[G
g/R@0$Q2<su,j3UUm2,$S5@>>db4?Qr_Gel#8>.$tM]o\<eM;+5WP5&tCc=%Drl8h"NmUQ@BSiqGO@U.
F)ab^c0o?TY%nQ)r-[YdA-<ioR(pu@DJQ4"HZ@$]5QTPfl:/umlH*Lb]!h7C!gRl8L)IJ`_]G';A!'tT
[:ZSN&6qHp"#[tSNkeQt=qIrctE&+W\Lg6aU)7"sC(D(B$t;Gpt=C+:-#*V$nMc!PL><B_"7;#iEWS@Q
(IA</FKSXNlumjl93lK*:7jgJ@63pWq>6:(`&@r,t/iPGa:=:I&=HLBQK?:J!t<sdo[THN)nqTR(HeZ5
`5'c@`$`><dur-;tSXAe_a=#Np_\$qtoJ,\ii\+R@iC=nFW!<E3Pg-a/:M7d<:$?'kO:7XG&jZ#4ZOPb
SC3iCqe!<_Q5h7ImoF(]lJHrSU(jiWk$BEo%heF26!1$aMfpimRi*'/1T/]L4B4?Q`N2f@DIj/lk:Co,
STc+^T$f@$b%U02)?-<n[#B[K.TQNq1=El:C(S?9]K9fAt4IJU<qrVH3Qs7jW!)Dl-C-g[Y)V!)lBT(t
[VCT`+_Pl2&;<Cg%g,s+1M;;Qj+#>/)Jm'"[*4e)Ioo]X[PDRpuD$@p-H1Y2sLIp>pU:4HU1K^s0NXER
rG\Wq<gXh_i0%p>Q>c'gN,b7-tZN/RQ.q=-6.g9jSjfYPBip"5(iRi>^TDJj>\S)iX@hBk?I*#_l3WS(
lB2;5FE[#5_Rk2k^hU/:-K@5#3&aV&cAEq//.3B9),7Eq5V7kCZcoB)Al?%RelUnN$:4"`.G^M[t.YO&
WQ!n7maeUR6/LaaEIY$>B9bXn!FeRDdJ\i_M:fs>=+]ToRdXU<f>KXJ5\Z"(h!)_.Y-n)!E_9q+&7SS0
g"`'l1#?ae8=_hX4XZ@;cK8e'e?j4h"Z/!eboCKHsul"=9;4;$F-YD)'orOpfepePLQ1c@6MU:).kn:?
6=Ig1PX\T=\D'?rI09MFZE.etNLMZQ_1^mSu,6T]&'X4,t8la<tR"l2tbQ$(Z[^dfJp`(mY'^Pm1PCg>
K4b)/DP>Zb+,bd+agR#d7!l-i/6A6OA;`g2pVjd#3[O=sKiT7M`EVcG)MaDd6eMl*AK1:)/kg6!>RBM_
`12LP:=Ie9Edcqme#*&haT4ji-CT"gY`S^"'3N#t8jUAqMfQ5I(cjDG5Xjl=IH-S0f4kN?JoCg8JV;):
!a<b>H9R!NZsG@mn2LI]>8*]nQ3[;4CXfC\_-JHH._Mgtd(hof"`T)e-Zc,<%^b17a)`0SO%hVJkKIe1
fCI"CnPce$LSr;;a^><^NnqS;BBS&pjA.l/\(.-T*U$XX9CY?hrnV(/>mjGWel#%\o0$:#U5B<G,&EeF
I1C<`gR2AIubW:qK,\WoGJ=gpq4A0bBfM[-0h1G4">eh+V,\@K.A(agXWo#ADX^=%_![O_[1`l:JNK&j
q2)u27'i<'N>mF6rMo#Tu_q1App:.7W@7I^PQ5CX^ml@amKr3;>(4e9@5`X@p:CY,T=J%`M-<.?sRc,d
Z=a2e5Vl`Uq*-b9AtPadbr&/N8*4*GGbK;)=J1M>!D"n(9_?bKO(41"V=_h[;-._`R#Yq\6e2W\`&Ul"
`02p`0o',Qo_>NbA+ZcoLX^O?gmp#Y;sIJ`^QbA>_/Pq);_*@(*!D$EGnY?+(7Xm.`CEZ1[V_hJV!Ai=
Yg7(r[YDVUW:An?lml/SWbLl2=2LVT<n'^tS"m+A3E'@ba<7`qh9EmM<7=0>e:'C6r6NeeJ\1G0RZ'>r
#'H1PVSj5nINo>\Fh'$p\\i`?p4(U645$O^Vrh5LEB4tl3`k/NaXS"!X0-94)S[g<QULP@j`@73Kd442
;#(D-LLW'Q%?iau=^JqJ^Of8biMXn&/g=]pY!0.,l%T;#kOpI:,\V+Pd#FojD[j3jbs1bs7?eh-AUd(a
?5(EGDM(b7'],Xe?K<(@%YXlN]b.O@:>k09Cl;9O9HB&]O?Aa>#(L@R^gp$:4p=aon[(OZ+mE8cCTeRC
hY0[uh_Qd><eC.F17kpOsP=B)\*UIGu2*G&en$PtEpn.2X)[1WpH;c@B=U5Od:*E)!'%3[?->$;9b"Mq
JZ3-3>aG^&P%Fo'jic;G-$[h<@^ekN0MKq"-a%tEChj.\>BcK&P191tI&-<^*I0>Fs<aN,2SAk[>CEU`
.FaB>&rGnM#re.?WIMTFsL!s8Wo@nTJ<8lIV-j5ZCb+)%Ut)Z'=,d^)&!4o(#&043l!AE:go&g]Lu3`^
$o1*@]i(3JoY)b\jdZ!rEr[s+`FS]#Og*#s'?p'!24+>YfpqXj#]eG$ZNhIFCG\T?r^=0!>UD;W)+d\T
T>;(3qCC;6@[10`A6?a&g#"q;LCb:gWoDA=*#)Mj<oQ`[#:YEK6nmGG[n])+S#`6qFm=[(;A`:>B"c6&
=>3cuo:Q[&#XJ[g9jn*_pt*0Kj*HhX]4E[>C7CKp7=_O?@e.6W]Ld_`rYh47N>U"8#SI):OCW\:k7?+R
Ckqt@@/cbcSGE;>#?f,P<AKn4)Pn`me^L!3b);XY$"&#!ZEf$.6:]mKLN6'K'$QuPu0n@!2g8m%6?m#W
fOVCVSJ/9eC'%?E!D?b_&!JI5h#BNSuHVLOebGB@r&EOKT1VEK;"*'8<p/Kp`MI;0lV<fl!mAnP`e*BK
G0V%4V0=K0QbN>q[Ke'ld>Th]9gR@+p+';KMu;;o;^FEFmqgM+aej28QVooadZOsNcRp;c13MfWoZ'T/
>8B9$(noB+;3-ELEG#\)@;:S'\BDr`dL"[9';=0GrTigJlmeI.7tBV0bM.4\rLNZC!&8I]4=^3K/l+<Z
1V-n@X,OB+DD`J0*OihH!TlU433o#AHErjsr/J,fE'Wb5Z%(t<E[1m':@3hgtdc_m&!_R:9V6Q0"<]tI
XYCrn:6#7$H(Ci$1dAnu2Jn*a%^$N7S>ZY%Wu'mT@./kV$0[\_&4=8)(<>NNPo[ZQ[a]7i9Lg_p<^#rm
"N&K<<g=/Wg32-NoH$sepPb!#&SIf)/c**R[dn])^Y58e'<Pi%H@3,kODAPuD=Y;t,Is6JmrUZpd47>k
,jBR+n!l-lOFJtfUjJqfP*a?$`*V<+@9K@l/8>-rPKh08+uio74;Rl4KZCb_#@/%6<0?Cm7Cpsm@&74c
g&_?(Y@Y(l"q3d:#9%jd8Y5?;BdOH@9D0Pf5jM3:e9;jge#G3q%?1+F3hQo09dE3ZdQ?+][&QnAFpeUt
lUp$:5=D;1?m`7`h37<d50df]WfUe-b`R:!(hBZH,R8R$B8b*=LQ$jAMM41"V"N>hs($t+;Pn)+03fsC
>Hn%\mOV4U5+8Z2HDhP5Y3W-m8Zo]s#,iu0glBP(kbHM)$0@b7_da1ju^EjG[DiUoEG>X%m9'(R,Gq$Q
0rW$3_a!.F_93HjbVBGhg2bm.*KB#3ok]2el9]o7l(LPN2hZF@<@``ZDG.*fQ*(Q_"M\@8iPPhNmNacn
5Qi79$\9Yd'3No85oFR8THCIu2qF?M6+l`<0,2n)/0%a'A'L)Cf8Z*=nU>1r]\#!!?'F$B'#W2ReU`.T
`a5CQkjm8'?<SN_H_XnActXd_.],*kTSTVG#<6:2%g=f5j?)Dm6Y`1.s].j,s"gfp:-DdK8#bBeou?;q
jBn0BHdH>3jFe3XVjSNFmXi9KSW@2osq`#J1"[njugY3[iQ<)aQ=i;*!-Fh2'L9JtJ7GH[9s('!E7^%G
E2>T@['nDHSe2!XPus5oehWd%4edEusud\Ys:(GB*rq$YB4fp\+ge$3CQG)N8r-Z<t``/-G0GXLEla`Z
h7E=TZI"*%2KZZV.`MlYWAR65c#==c&;T0.Cn5?2rI]:<lgH:$&@._a!sldoj0#S%=kT0orO%3%2N,U?
?ZmM6QRY$8AQ`f(d6VG*[,VRh%$qA0rB8P*=q(HjlC`5<t'<im!!1F+56ic^$^*%E"X0k;E:g;'+l%ek
0Xo]i2Yf;a/KK9TU9B&.:H7Tnfp0]SmTK-Z5FbcIJ1TM(V(]Xtn(or@d;9ipNc2:q$;T.;E81GdM4fXT
qpc-k%gf@TcBSNG1pR>*O]A+j58?Bp7.^\mXqYtUT")H<Js_i%,PQ)JZI)&heIL44T#Wb9R93&pC^R>T
aB4Do%SI*&q0\J8tEPEU9]nF1Cfm[+Ql>5\0UO5eh`nX/X&*BP`3H()t(-pYt'0uE2CmbXg8)eBUYdaQ
(MK#S2Gri<6:qX(cLC?;j7b&!nm*&_UM1]I10O"6)QNbH=b%BWjDk.e8pP9tR#GrjbsoGA%U7I)5ZM'j
f(MkA]%m;IL'X"%@7?f&<V^I#?nF7h1=b(c;Oh7N8/$^u0oT/grQ8?)Gm\WZD=#7hl/>D(ih!GAPYb0#
B$c"-J34mNJO$alnhocW?sVHNZip$:iiF*$pX%j"^H>f2MY;S*RVRT:`WbU-)TaLB1/N>qKD/hG!dI8j
*h\aV%sah<&q:7O;K@)2nfZBnQo=BHCsXAm)A[r/nQg1u.dIM0N+CY)<d-XO?(7DBdYSW'/I:-X1'ZpI
#Rg^]'n3iX?Q<6rM$Up*\[BMOSgC"&r,#+p"ZJUrCMmSBZ@)Y*@fapsO!+qR[AIfKB@pYL7XIp8A,Knb
>F//!0_]mFt``f5Nh$PtGfnF1C;EjDsTl.igjhnFME>[0JgjHInSs-u%&]mFrh5s[*:^DrZDgUD*6"s#
aHO>s%Us8IG#+SjVrJ$%257ZYq^>Z>2N:Wi2"p#XL9e^j/@[P29[]Q)=&g6F"dB5u=PKEV!#$4."3p@c
XP\eUmS7J6%@!5WFPS@OBaECF3;:4F(/et.3>O-JC&T64*(DUP=PrVH2:r)%1ZL1/(jNuU/(IW_DTN@I
!JZEc5hHn!Q3X&c>jK@JCM(>_/qkYQDoIceil=p0]$Z>_`Z<.e>[Ar.g\H$SXuUXe#\q=Nq#l-lOl4$-
YN>E].$b8E!A^sSoITqSW)GjEp4rmTZXga%gl',,Y$RR'L]St2E8FQcPe]V')iJ)eP.I$rMZqU6o:VCH
+fA^-Ss6ei5`4'DR^rf8-c<onLncI%6%#0K3]q!+o`/mZ%6e$mhEAh+`Q6)r]`V+:$qD`g-EFP7Jq0cG
k+C+SDE;Nd6-C&'<G\T[@D]rF<^bC*`[GPUU\9<5d/cf1[8*Go_5cX3KaPh*_2B9"&u?J4_b`PlYFa.O
k$Hl<-S%leV>nbl59j.b9dBMZ>-;p&r/cFUtDpM7q9hS$P"9[fk5q4D,+A+eIjnL)@JC0oj(%j$ZJ22_
?#CU\3;]!6aKPJ;J=Y4+2#@V]c&QE+Ht^06>j7+gppN_3Td)A38b*"ZJMA]pB=VB33KNK'NtR@/G'"b1
"+f@TcBSNG1pV_sEiM;_fUoB+:1`lj]%kDbNB3MOY@Ue_!%\@@=u>$+njFK^@bdcBTS03u/R?hMbWi8N
XWOc`MsU1g+*B@!0RYV9YI:mqYY6puG&rV$ppG-qc_"#=$)SNEa,rS)8*c0U2r+0O'57uu%_>Z?n):C9
40nt\d:*b(PEb0[Wo,Dk86Oa$U`ge+W]=J+TI[r:/9iOGhb./l7:*.2+TM#Sl>?WQp>78?SfQ&qN+9Oj
\<\@Xd<S<98/9',RA9ilj$f+@iY-$rlREjbVj4&TrHAbu&`okM:F?+]`2S?#_pnn2h\*#r"_?6(%,mHs
;sZ=Q].,\Lq0XCu3]C[:HXhlBg3qKK8Xc-k%ge9cLeGrZsG1c7.=q!]F`X=e/2SDd\RHtS,>!DSTGj=l
L!Epqku'.6O+=Kk%QlU=fSjj>DgW6H7+S2lf53p@,6@`/Q"P2;h'l=XX<O;+C^U"+HM56j)%1-0^OUe^
YVLoH=L04%%77#:Fe`lO8eC&LrIP+OmaG2pT%T7?ichnFN$OcbD/*W"la?SXDnl%qIQI`Sutl_*^4/R)
17mLJLn%E(^$.U/gHUkH=`=C=BZJ::OmgE:d.c_#W]<M)?uo&T*(enH]mkg3CuR$]:T-2[E'b7D>?g"F
M?TJ[,7CK*F(&g&2k.j/ij__<l&UDZC!<gFf=]=JV[Uo:65f@Q?8"k0P<k6-Gof+;XFZH#D[<+Ai5.CX
FdDJnn8Wn=t0ZRF"Y+[c$sFE*RC/SK"?cMptA:S0hkNZAcbUSFU[!$G]dCqP,hm[?7DTtqg1Du^f6r;Q
T^ldr=)GjlidDMb8u\T3BWnGD[hfAl!s[pJ^NR55jEF:a@AiGN>-M]2/AB%sb2.q)#_cd^HD1q'`sj*t
Y'!M#[M<.B!U5s`87rPSbcI!g%L=$k,'fsbnWCTkFkG9Zli?&sQ[6.`8FR6E]VmSq/sL.*g)"6sSJ)Mj
:YFcidn*pfY_4q`d2LksF4.Lbs4GPSoIb<#YkRd/6*Ep(^gniSL-[,C\:J,8E-]Y(oB-KJnJ^:q>R'qV
"gr5HjG0.Ukb8X//skfE3N<h(Hc5i(h@pYKER%3%2F5CWNf'e>S$=^l;f0:p-d\o_Y_WN:DrjolRCb/t
&#%2Eq:FSE-uS@KtknNqJqZ+Q+qEV5@$+lu`diFNl]@Y=b3E;fWU>/URL#?.t!3HO>;%3#om&h4B"KnY
6HeubDrA&a`^;hBUQPb%68a[TN?*&ZcY>IQeEqGcIbAAA]qoB+;ML5_q(,k2S.7'a/gE`hB[r:\l`ot.
?WXV]g-I60Z?WU?oA1t3-IGm+B^*%55e4d#2?ZY.VHIiU[u1gO@nBTXbT-(Ri(5-5C:dt=b]LoEXK@cF
%HKD7+ed\Y-qD;4]*<EMWDh;+Jk++F!Y.e_j'r;?B^:es1#9O(Q7ffJ2#`fD2pju7__h08^#KmP'+>sA
:1X:@HI.Op<%5$&%b;92YE!i26PR5$EN$E"OP2S5rX.(c&4GYOYc'eQD_83`-Q))>`YGSK5b5QBeoV0,
W3p?hNb(K_UZhm@*]Vl(oeQ`R9i.Q1cWNJkZACPZtYAb>6tQ<IV`'euYO>Lc#E[!)!1ne1V;G'91U4FH
oXh]O)VaPt0sq%VuNiaQJbf</E>2*>m<KRPFM[pHGS]UY#ad<PNWiBq:WEuNcbfSD1'SW-:bnGS80dRL
QG',)%jGl7>VA[amPqK2T+l/W&NXf\'LBd/j!@).;f7uuq*Q\:_Me0u)P#?nNM7:2$;BF2tU4j2-C'4G
<Xd`21Xm;(@Y+^',9GX+<l75Jp\6%^%N1^A)EF_*L8=]t"\l7(bJ&@)/:'s=WXd0I4)pk^iM1htNrVD5
2W\*hnRUP4C*eS3@$4^W^;oc?8BFR@f4bfm.o]6:Bjnd5g_oP`ui/a\<??(F'$k1:<.+$We<S</iJGEZ
19Ak<e&H1GKX8`TB:7uo,<d'208H#mThp"*OiJch6;E&""Ud*OdpkYQ$*\fMY&i65c/ZrBRY/hEM>oP,
YH=8*c>4nXi"gR>?jmp8kTGMdfbK%(@#:@QLZ0/$+hjlXgW-&rKR1+Y(G9MLf9f;DB7i\eAoo;:B&UTr
4Q;A=;*%idP/%<YE554r.>4Ea"V6'j30pfG.Tor@fQ^4#l\>Z]o=8S2Q]a]22K91qqCj*0qHd=_E(0o>
8`m$TYBZB1We'V`(b`I/EE',;6.Y4=nG67QgSV5:#!eu2Fj1)i?#0LF%<N5jkON7uP-W<fW$`Dao(7uj
\'WLl:uU2X:0pNVcMC^V%+]e+.^Pl8:2N]s1/cCI&;O-m)QXqJb(20`Wr=VA^j/mJr>GO3tUb\YCa--W
5\Rl8c!+Lp-W$SUPaOcbc:7Se='lks+)pu@G.+>1fe1Tt@fPD([Q$%puJ_Qe#aTdBAlP[!f'_=R9iJ,A
Ul-RU9=P9s"m:t=Xgj[kuh"4FPoh4!6FP#rRHSNE0VOF-]fJU3:RqtDm@9MA.2Y$EPd\U=3n;8>-JI+*
$[Wa.8]<`TtP([(8U^NJknVb`pW4I6KO7QYPF4D:[7)U=p;>C?:O@De=t9q42*Inptqko7TK=ZfOWKV\
)mSl>QMHhZs!3,rEDJd(/u\7X!S<I$i)q_<%E$OR4B!s;7l:&3;^^]!P<$L*4/RT6ChM(+#<k2pI1X<D
4spEbZQM)5K]mFmj(g:r.;S=CQIVTid6/h/A?77H4e%h2OOf+RWCn=X,aSij!!<V<^q34)'JqcL\GU#I
9J\q+,0k9(aqcmX?lIf/-9CY(0F@g<5DIOr*\s1X/kGj__Ea,Vu;.l4e_o;5V:X]ZdVg4EC`5/fs%7F.
Mbc`M!"qEVm][7]4m:Es#TqWeTDZkP+fHDK>rJW#FZ]rI`.H@1*&4@sZ-#>/IlfWc'T6\Z$.eYX&me76
kH8E1r:P+8$n@7FSZg=f`[E8.g<OA7sO]Y$WMSXl;t/.Wgdb^50Y,=Xp]S^[)LOX&l7)`;A0E?\"<9Ar
\tbD?uD;H$Ls7./Eq6e-V]R58J:FQah_)]Tj!e+IU_@[<7CCtc7qIJ`a9G<%ZD?+bCohEVOQ>e)V,g,*
ssZr4JZn%NG\Sr+IG5hjYT\ENPIcUX$;c*mDHZR[i<[C%;"?0_22,soJ`K`tD.hPQ1RgKokm)(pCB95g
^9rE@eOnp.0f:lp`%U.MGfX@+^V@U`5;=K'HL\@B%_e#%NdO@6@7*^(-7,Y!e6.:GeC>:fK-2r9)Cl3X
U%`'mZlDk/ma?B4OBHJtWMPrRX03so?=rTj5le66#7U2(N[NsnRi<<F0ZS&UF,[qs`\Q;j09Q9BQdYdV
".fs>>#DV`O]c.fU>@qoaNcK^HTrdZf(0&bdJXF\b;8)i/</TCL9puRiL69:^CA&j``NfK,4$%j0TC_-
dBo^mfMC=B=k42*T7jlIqtgq7ngD`N/&:-Rm;L3@``iX8GN3gC5a4F$@'e>Q72-\$Vq)AEnZDQ$46\J'
rI&n`I8fY2bqImP892HH`Vh>kOM^OJIB)#.^u]6E^Ra,[tHe<&FoDf==7`Qum!K+C/=7H0CP6`*YO^1P
WYUIUBZGjtk3kQL_o(Oc#D)9X@BeuT`H5@nH;\[hB?6L/M0po9R"6L\X)^igG.[RS-P+i<pYi?>\8'cU
HUbNI?/HQ]4]\97*Q5>Jc"\OdVc-78<'^:q;o`d@IJ'eO(CRO.nN1d6f:2f@E$i+`P#%)bT86pI6Q83s
t/@%/iuoO!A3(&Y1>$c1`l0<ZlINhq5!(gP6jh78kK>bjN/+QXAP'dY.PCf?',A5#ZjV+]Y:oQ:(oO/o
<3%Y6%tnDV:Qh7Jk1Dnl6/q<EhA.or__"mjd?QZV@FOJ[0detSN@)DiT,Q!)D'4-uSZm+J]MlKP$t=0G
rte>\Z,%LrsYX&lKbNfNi,p28Qh-%G\D2E"SmZaI46p\1TR`o^?:BkciqS_P5-9/JL`Q&nZ90dnd&S2i
r#R;]m34*U\dRr9e$aTB6Xd=\qW9rNdW+&9M]7>hq<M2>%.S&3%Z-Vp>\`9c3cCS-%K)4=W1=_[R'>Yc
$IreKFaXcb!tBPV&:$K9:&Q/D@nF)<P%5G*M`Tj_UL`fF/i2fG!9k+`'tOX!@AN;40]2/Cc6^W(p5'1?
=K/g7_CJh$qC;/,[IR>\_&+iGH<k.(l.9bfhY)ofb=pOsi=KVHTj]Jlu!2GIr2X1qtJ857M^@?>L;[#K
ZhJp6'sLUFKA?+L.B"e@\slJB4$jF:'*;??q&Rl"irn"r6sr"u/.jRVEUjMk?L^t[V5r-<I/2I5+JET<
E@A,)SU5QCWpEn(:o='&8FZ"(gH=:Q3(7'mZS]E)<fnA^G,j2R(Z1h4!jT0E2+^Zalp541oX)]S8&]t5
Ue=%Fo-E8Z7Af=iDaH1gIQ%mTuRIo+=S/OMikFR3ZA!&C>8ED`1(3]K+KWt+U5s1UC?8PYT@Y>F21I[)
Hrh_c3:('nV'<KrT9.J/%bG*^JJSV;YCkT(RRk006@6^?MX*&1n*^Up&/T.g2.Oc_rqNmQ-LnVX*:UM.
;Yh`g;VQoArTBH.Qp!5[1s>T&?U8t\Do>bo#;3.G+62G<8k\rpS'PO4([>D+AbW[MEDW`k==Y$S&\+sH
%`BHc8_s*aqHr?[sEXd9\6&g3DA=]nnVVG4*u^OE!\G4+/]]C3Id8i7tY4Ieu8C.k)0h6U`)YQ'qrIL5
7\?,Q![YLA_"3&l0Je>Y9uV1Ff";T7\^1q?f!DV^6h1T!j6&el%ESt98&Bk:jeEH-!trr--2DO!E&9a8
6?Ztds?2P@6_hRe!XbKHqp_hNOiQ_*d+_#ne,!#3fE\0uX#TgOUdX!W`?/^gA3aF>bZ7LPe4KV%iOf<B
2$&sc3-cGg0jVeGIYWMH'Lrk2_k,T]J-coh4LMRIBV8m%CDPaIo.MT0g_G5SOP@:=9*aiR,e@W$'9)GB
-<1M@aEN@.Gh"MrV">T&?U.RP;J3D]M?_V-<QYV)2#fWhm%QB8kiYuIO+oWJO8c%DbZpCW:@Zqr6Jg]F
V>Vk8F4ea].iF'MsTCi+#0*?BQUI(!kEEr,EB,T`u,Dnl6?6f]VeHnos9i4%QhCYH.0o\[0g\7a-Z6(D
,0jsQooO!aU7@U]r`'2qLj7Kq5hdlV[8+?ED%=4_KC<u0000JqiHbFG,o,qKQK50V?k7Z818-DZ?)d_%
V#34N+tAn'^g7Rlh6m^I)i63RBd.68Ic?+P,l^$>4V\)5d8X4-q;j8m*;XcaYq]&GkZ3$'Ra(TUQ2M1X
2llE?c!obFY-L42uIf\+r7X`WL:JJ+8?8P+;nSiqEYs!sSpnKF[IN>meq-Vg1nIZ8l.!7@1"JIl&q_3K
S]W%rJIRIf4Y&0b0`n%Dk\CE;!fYN))'/uqq;M\j8,5bV7(28+<3,@RFPn6C=8&4j>8!!'DU-n'?'STg
Hnm*_`Rs06M)ED`!:*,!p?"gr+iOPH(&7A3&qX,%]lQ3mb$9N#q+$Pc)%;@9A\;OTk('k)tH.bE;UQV^
5U96g\",XTID76n3tp6g3oHg]PN3".#fSAPakchI&1_<:=53Ucd7GBoeCIGUp$W"UOR<)lp)"G5XmilK
23@q0"p,5(^)J+Vq:MPc+H2Dd8Wgpp?`$M<fET4qY4=')k41FXbEN_,2.>YLhfpuRiL%NIHiH"Z-`rVZ
95ph::-%c'/u\oQn)-!Y.a:(&6XS3$ld$fI:6D-U.JG]s3/9P35`47Rf1<`$N7U1p?Y)kaSR#DK/p3cl
e+97;28jODtrFXsdkn(Y=4r`<#sPGtN1\Tmc1PGI*U`^XS%r;:s<bokR[?$Xqu;(/rKK$+2TU@$A,-?C
Mp*^\R^0Zt,GgW[5RSqE(?_,#d3q8AHE@[Q;XE)>'=*rc$Yp$Vm*j;(#mUbcOmA\#@^a]U?(>[.UC$;`
-.eF:bS4)<EKl.<*\H%`3S?1N(DH?slJ+$OMEk47WWR@9qJV.%\I+#,Q-1E@GTR.k]GG0\4O_2j0jc_O
dc7Cs50-*UqqN4"i-[h;b$q%K^<bOQ<"'S2Tf7t#%-=/"t9IO3O]b`%uNF(TdLpjBf`[5E$I.k<-Fs*N
tV+`aDLNuj:?NKPfQ*^*t5/hAQ<hi*qi(o@ImJh&=\*&'"F;)C-shB?"\6Z";Ec)ANR@9ET#aIlEo=er
G?&u&r":1gc_K?[h(,J+J2j;(#mUb`Q$00VRKfs50fVG(uQG+LBr6?$o5cCI$mT0=h>M,5::e*u/'F+J
mnqYL&qEN#nHSi1F(h1dlGHrEebdA'4\20F%an(t_cL`2(pp?^J;A&g@<'e:f8jQ'hkp^#;60J:L"^YO
R==ErY!L=82'#],ELMX)6GSTr)"'4LQ=G\agJ1RLOh_9\+`Abu-R&.7r3WLOJ_pjc\o4?Yj^X#=J-%-F
R&A7WV`ng(J(B(f_??(KD`;9dB&j[a>N?sHYE+CDnI"KZkZ>^OX"7F%;pc):\-LCO%?$H0'!7;p!Z9,T
8'Vu\UPF_Yp,N!H3k"@3Sem:^?Rh7nHS]=Y[S53e4Q6WDU3KS0J")s5A4;dWnh?F@/I1hMAsbCEquj^O
OBQi$[W1N-i:Ak)3CHccVg&/Z5FKSMFhmgBC@,NDnfaSlaY<!<LGS!tfb3UKJl)@l!\<;pWJ.t/nS+t"
an?I9/i$u0NlUah0gU@@Yk.3kj2hnF2dP*-G@4[!g?1Gb6/q"XAhB)VZ*I/2#h^OA?;n-'0%W8M^3\7k
X!ap!S1JU\)m&WQF(K3b*8p&2%2;G@l?j?c`QPt--U)t*`d?O9"0"@:P$g=k7TRl4DP=\7;4j2R'?I/'
oQ;u9a&>J7_`8P;`O9u$Z#>G8-ORI]ohF)uE6c-rOa'8sj)9iWV(K*MoNr:!)5_U/$31c,UN%^)t;`ij
n8MLohF2JK+Fm/9m%:YXsSiB8;o-Ci5pBI"c,='&ILBaY7T@P3e]P^;`)f-LB"[;+7M_1SSE>r4Dr3BK
<d.mo(%AM1gDc-8r2le&IPo%UBdh)`-QS!t?(Y,L9!^pn'eV".U^Hp,,S-R0VrAP8k;hC;$X&-P91"DN
p4f<-]3]\(``<9ab;S2kYJMi6,ZKmZ(6ba:,JL07_b7n#k;3,t[mW_+BFO;:;T7N*3bdk1=gpODi!&Um
b\M-41m^N&;RhS"9b2rX:O!<E39'br,\Jg^lD79Ml(KYfhWHP]q58peemqUCYIN)V9;MBL6>XK9X__Lc
+S`fD4VFmIVCPa&";QhK[m7rg=F3h"Pl:JYV8FfnoUb0eV!r8"\lcdL6>WS92QYTlYuaDXF66j-fKbKC
7s=$lEM^pn'%U8A:k`'_<g)<&rik-.#d9$X,$#_F0)K!^;8/C)G^oChn?nT`96W4BHaA7T4N<L(-Q3%H
N&c-8t\I9^#^$47.0bGn0.Thq,HSBQ(],l,ICc_!_D&Yq3j>dRE@^R08dma''qS;B2<-NRs:Nu_)VMMd
;Ue#0[aH4o7qY*kH9,./s?)B/&$^VB/!D/=%P3pGnnnf+fLfeU/0m+J^BE$YX*%ucEi!sF!d-Yr_Ie?5
+eXR=f#gAh$>.!."'(dS]95nNFZ^:lc[.EUH'?HT]uF`lNJCKGRuZT:%ZYcofF5+[!%;l36.G'9H2@7"
pPnBRRd:S0g&&rH,<W_1M%lte$s-Y@RCFEGaLb!M4&V"7u!<#KS<;.h7(fuOGSH94qN/oTW4Oc[lXl`\
&E3clc23]\Z;B^t*$A3DLm-t&Y;Q66_E55X]Q"Uc*iRPcTF.]U-dp3BuM&CV"8WA";!IXZ`fjk/3f'O1
s\gB6K1l:XbXSB?DER4uiaH<,5FKLKfFp3p[k5b/Gh5nF0]_sQ3f_o'Chp?g%^?g6k@qY9iU3ctf&6'U
<*T76A'oORYD$O_lr^A:HX47rlregSGGBZI*`$RsiHcV6kgFGqNaL;9&^-k`8/XBrT/?:J"t=<YHMaH7
_3b1YJ$W#gk)>ZC)%Mr?u76nX%QIqpjFo,r!'m/$kLC/H>]5nF/bjE'J-R2Iemkj.Ojj&]i)B#ODWE<C
8o&7qf=W;,O?s2j<kkT89T=0M;_f@SX+UGrOr,2F@og>#B@)\;ClZR=^m7k/0Ps"XFu(X/9Up3P/Io?1
aMjurLc%tJ:"&2iV2acl@+lKdad^G:4:gsFE0cf_'L/:qlh^SlQG*D"LIKsJn%3L4!#'t-QHpqP#)kF+
.?P%*DE9'ifR=!JJZ#?%l%6[fg+ruLc?=kfF\5Y`6qO9t[MTH4B5q)ka0U>tb)Ak;ocnff1-EV,dPf%0
<(qej?.&NW]t@q2iT`t#JQ&`osjWEHr_3H<+'*bA_eY]T-X#7hlK3!dA^C)Rm?/VZCp<60'J.l\G0Q,#
1q#^lD*,fNSD25ejCk%6T8!QtOPW,\;:Pt&!r#P&?jEt`^?7/^h6Be_D"P:W]NL(0>FZ`^H+='&I$F7S
D6-lop5F^10TQ9SnH>U1kl$=g30RSfVMi9cZ2mX7Y'M@*U-b5FD`r!Bd:ZjheN)['AG_=^IR;3<KmhJ^
p#l\8tMI^3amVu!4do.\K055c:/Dt*clWK\:hLVK[mS`q;%gJ?BcmQkUb)aP%[J1T[ddBI.BGZr9mkU-
dfi^M]PA*%D^2)R*C0p\,k;A%=Hj2YeCA;DpV##U84L5+@5=P@t_nFkUTQ^=&63!dA5C)7[4QN,[X<;a
)i>1U.+(sUXCp(q0mS1fDR(;d,#V&s?J$UNf%cWqi2WsI,[_Sa:UKseG#\@lW=G3km&AS,PKDX=+2ERB
qjn@E+bAp"?,q!;L*>Dc]-f>3$AW<o(gj&/ZplUO\Ek>"m<5D!u'Us&.cK41Vt)B'YM5[b^KVLZ+%&n#
sF%V\#E&l'H5bn-[t6S&IO57f?>,GT^d0pP8_M;p'eY?kMEE1r,F#r?U5Chucr]h=]2K,%5rO[t_"P%&
!6`U$Z9a,W<(jp[-"+Io04ERCN@Z?Q'('PA(/q1k76\EfJhCH1F%[!g(r(\i;,*kXhN0/YUE]mB@7/?a
-XcBVO&-kn^%3(W>E\[eDIX>=q[9\RS0aiVqfGA_;mk#Hak`?t:;S`.]pG+O.>*L?P"8cESYNaR>rr]U
-5=9Rjo\&tZQ;2*!n.K>il41!8qFp5N7:18"WkAYXh<b#jBLPodfolKnU4lg7lrSLHbenAmp9A:ODd0F
q$`+C-XK;,-tDZl;3<TlGPZ1uD&,@4\_;@0'"#7c]QNlD1H88$#gc#n2QB(da%Hi*9HruRFkO=ie(ihH
?8W/M`cQSZ2UN.QrQ8j<+G9%^Z\V@8`4g>YQdr7\@+Yb*$V^ogtTk]Jd<0i@5N,*=9%-qNpd?G1Yj]Qb
#'@g+&-T?k8nkK^eiqg/#)9n*4?:X?np_WpFO`l:K-IJMm/i9d2uXR;_lgEMjj>)G^e-D-/<]kf$D>C/
N#4UKP8n5M0;_FXc+[WaQ&Zu$[rKuo>A,"]W<@%+$Q`)-n%R>i[[K*V//Rr,BM(3KtWm@Mq.!AMih17l
f.TMu7s;akC>('JP8ajAW;q'Xmf4c*)8"gJ_s[Eu`HdC.$9#a/XYOuOp&#`/"eB4iS,&Uic+=*F&hh2H
]^811odiPNNi':JgAgtY"@.7r0KP\(%a'LFD2U:5'V\3\7B7HjmdH&!)YBO*3;Qh:;o%A*3o7fEi@Qb^
qFZ$RT3`hlJ",c`MXa'5oadES.>-.e'4MWh`l6UO6.3o\C%aiVZ9]"0pCJ:%i);ptfDhsQSGBO0$VVR'
_L>Z^q5Z(Y-9U[>12?_r?O`1og6("1M36/t$g/kFY8L0@3ug'Y/6ZCl&N#\r$F)6)QFYG4^mGn8An'd3
B8)"Cj$[9YX/e!heTS&*F1Ki(XCNqUd?<`W7UKn]3egQuWbl07I.q=ta@(93K866Z8MP?MN/NZamGD2!
g"p<Gbg&4_9=>!76+N/W]0#R$ToT3*YIX/g"^M`$*b+0(B[MT+rW#c,,e(TQmej)L%fOHTm,Vh1[poZr
;\_MUT.<<,N>U:FfGAN;b2d>Mq(*^,l^N8EFJ,pak9&h=qbHITaGJ=&:oqXkdeE8[BTK8'dP@V9=dDf9
Q0C]!+L03VO_p@$nrbfn;`fU2T=;0KhL9/>X3j\#<<B0YhX%7o7s4#_;F%I@1)2p/?l,&./CNNA'H;LU
`cE]uoY1i(g:b!A%a+U0hZSeY#:[6uaA:%`p:ihK1nF+0F`9=OjEejfTsgY1MuW2Rephd9/TNu8NUAm8
q^kcJ'u<<)g>c.$q+JZl&#*e3o3`t4c"^ulGg=9/64TT8CNcPKHIQ56uR&Ip-Te5DYgqG2eS@J\.Y0cs
:XLPof0<k,TH2C'QdaN02*>5J*ln%\o%rVQ=H7R*#+<)lpu>[3egS,:Ghho*IO6q0X877ALL-6>?uq!?
\?Q'IV/9hj9f&9U82ERDIVXK?03&=ZB@66Vj_7d[@ip6'E!F.P=<^Ba$]E*if8A;pe%H@#EX++4h7&E)
j=lL+((HhQfc)`Rckj,YSu_?-jAPf:`'`89@MiS&%h-mb0ogRjEC!7;ld*W^kk&&c.jCVPB6Nu*?H(e&
kioh1OQb*KJG/2>QB.1YgDEY"Dc'9aBsTMPu5gCb8)Nui&8FB:(k:)mK5hUr$LrZ\mm92!Ib]mJSjgn[
^>]_'WFnaZ-s5+f`ZC-QS..E#[Fm+KsjD-NNhi/<S^o:l_.?bsot*DkB"ihI2[,&M.4gp1KaT0@[j^!"
I:VlWRe2Y!tW]h2TeZ301LjgAKf1SSV`*#JS@-Fi\YdsWQs(`5q=cGPBJ0\Tc$9n.B>'+_J]YT"\jK!7
`(#*rnEW>J(;!&F;cr&8.G6tAS,:1@WQ[24Q?C'Cm<Vn0)p1a3^.Xq\h9pN_I(D-,%P?(V\=KEXNZ>!Y
jtC+7F(?oF<A$[?Vdl_Ga]l<D/.*qb(oWiN-XCtN-(@3H?tSN(Uu<`YMg/EZlDHs`^J&EQ:7kBA:%p1e
,m]RC.l>Y"V'''=KhVD)01Y?cP<NC>&=mbPJ[%3!1O?)'oN/h/@!,lIiI_1;[ng;ZA/X]r8^q=9>tLpm
>@Mi4X;XQ6NU6M(YIB;*JX-s9ee:Ln`>,K6c,AKKY)"l^_7nk1_fGhZ/PX_q4uf1-AT@@=FECh@P3A^,
R$ki:/)#^lr4pQ5BXUB)on'=,B*L3ib!LmgYH'%Y),.7M9S>5%]",c)V"V56Rf9@".H:sPsuI>g%#hk-
cglKq]s`Ma=7YKmVZ)&jO@T0NAHji^s(?;r_*</Ph+XM`Q+G>A*AadaPaRsi!l'1\\>rgb'%`,/]uoc\
4DSA`fba,[^?\1g"3XfZGdHFejqGNHu4c'pZ@!RKlNQi$RQ\@]@W>?`$a)3MDZe^]*Iq<*MD+7AO`4`B
1>Aoojg2j`@=dF-Ik^qdb%K*V!m4=_q_J:N11a#e#nOb'-nRX4,?)0Jmri;clt7EMpSKcNgDbelXE(^R
AiE;=/EkQlb_S0/GAW=BnBlnV<lnK;cZlqN.g25i[4em,sX7IRc((S92#i+oa/^Kf`.01M,aaT"W.[H0
WM6srm?S2?`Erm^WP(cR7FD):p$Oa:T*3LWh2D02lZ*uVJjYh60g6ZmNo=2,[0(t[W+r97-G[b:s?bHn
PD36`1Uhn\b0S%;dj4fPap^GQF;PtTs.il-h>-Vn>D6jF,;OI2EfW``cqQBmiDZnshb\T[Ao8WtLclg*
lX`Qla]1c1HreW(Y3mbYY#8pe!bhelh0+S@^7jhQELchqWP8d^X"PPjM-YJ8)nTadqU/imK!=7.lNOC`
"r>UVX!3U@$'+:*1UQ?:*I:<FMNO;%e@DP?,^pY_7c*"Ic%/?RKH>6K`8*]pIRgAYk/bBf38:W7Jg_T.
R:eonuQZ82nH&n1i[2X342ZVF4hAN+<t!LERS+*'Jlm)d"+n71W%M$&c5YtS1$ZD4Xr)uOtr]<\^t-n%
Vf=-nrjp#se5mFnsq^'8Igk2tgSiQWZAQ<7<ol?!GE@q-T&+(f2no)gZi+[L-i%hF`mkKaM=JgjWq8?V
1@l'7KtaSDr7-tG5beuW"634&^O`C7n%4Ns$W;q=5VQ;!(hK@&,(?Pu-@Uanu3iAMZ:ed=<j6"r&'NH?
u=H>tnsihNkag\Gc,W9n4>CTjs,*p#f<@"4[WW,)oI*rFYDn^/*Q5CAs<;?,$1<HjMai9g%+Q^nVuj4S
h#jA0b08os>QRgLO^f%&<)KnUB`)q3b'4[$K4$Q%[3G>BIVX/rCu".PK$9d26kUEI"R[R;jl*HH4B44B
SViaPKVke$;t98?WYCtV->CX].TEdiK*gc8ua<j,hhj$Ob^=^:UNCYZMIM&YsE+p`dB.I2VsSCi,@IU3
lU^5VF)iQuh!RT=2cg71NI(JN4S<>ummis!ZDjb0L#)#nf_[*:b4'cKgabi,MpI9#qnf\-\iCkJ)!\9^
YX'=djr<Y%PHl=sbW!#?;e[F]KgDoRa<9q=>Q['We2okS8UM2R:UKJ\+*I<Cdnf%-,sY#\S(.c$[.,=[
d,g"=q62ZAsa(E=Dg5KM$k9?tjn@q1q/b/hZ>+efFE/2!BRb&(C*,pk`!#_I.MJRc3\fRH)E)C+(!HbX
P^/j*Ie?>Zb2Ei\RE$S<+eHi]#&L';;aKQ*W@6Z#m-C;,4ZlaRu.:.A2b;B;^M&$+l6P$1Nd1"\l<XWE
<m6Jl3WiNk3$82;M^NZ;2(=K'pL*Be^J'$OUkEi"VLM,#GfnaVas.P<?6:A%SBJq='GXn))TRFaSa4Qr
]Q]"6%p_rSq'l'a^UYGS0$LPRj]ZFFRa#e,`Gl]1a[&HkD2%UrhXo]11)h]7J-,MeCo);L5[;Kcr04UK
hEeh6)igZn[ifP+9mF"$8l:0Ke(m"sn%gXkdK?biuq3DrZJP0P+iSWH#r+`i6%<.p5)9o@o0[ub$YE4J
GV[X%<!6-W3a^4#l:S`FL'Dm.VM9MA,H6UN/DbKJ(-U-6u':FGo,nF0gl]Q`h9Y-'DU'OP5)p3tlRgh^
_?9%S0(E53Wk-)`@I)Dn$i44[^K)X?ki+p`dB&J`nX%oB@!M_ZO5O19>&%h1)FPuC2[Z."F2EGM:-2JD
Q45\0q9VQHCA#l#;j@.L38WOL2Y8*0YEJ,oY-!q\n~>
%%EndBinary
grestore
np
1009 68 mo
1129 68 li
1129 39 li
1009 39 li
cp
/2 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[120 0 0 29 1009 206 ]ct
snap_to_device
<<
/T 1
/W 360 
/H 87 
/M[360 0 0 -87 0 87 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r*FI9[K,)98Xn5(\Xt^7hJn";F]YMIP!.$Aq-Ej9/3:>872`0+p.\Q`/gM7cX@R"phphC/D!"%Ika,
2O;p\@bRJh9oIE-M)B"B-@P]n1NU$PGO"S>cL0e3qq9jKgc^"j_sdEXhX&JQ$pm#@#=#T[8(*MA91OH*
E*>&2mXnko!MG-oYU,=&Pt",iXo1gKcmBlso*kA=nMo^?!:@jCH^mb7q.N8<"a/7(VfQen9"A`H&Dg@@
k/@]f56:/n9D;8Q9b6Jr?l4q%[?q8]kXd5tMH"SYS%NtJkMDmD7:,j&.".qed3S#O:skZo-i7sg)%\lk
e.=Gb:/(d>]O22/%RD.u&EfZP(kpQV-PPBC3]_rT2Uo"e;o=?R@j=GQ?lKt@3e<Mi*&CW$!k_iqP/[[A
dg"eo%[+rW=E(kEN.7ctSF?s,emm\bgi0,QCJhMp3L0O/+f/P7g'%2`d,3"\Eeg3#+O8:r:G84S88co;
Me+r0B%RLebQO=+1\.^9C]Ifg'7P"9Z^dU!UHS]20BgC9bUiTb)N(k$QFYXk6FIT:-!AHuJ"2.07(LmX
H2.HV$8p)+":DHRdpRDd4\2XEdK2dV?:^5^,_n%:YYYg:_9l^@QisX(WU$"=`KP@i%LEqH6eMkHV?7/A
^5A3qP4K$DbXsl8k1h47![oOaJlVTP#_f9ZYG#$>IdC7S1mG[E1+)08loM49M?6A53(s6)2pq0(AAK@j
;lo>n*-t=,XPY.bL8#JoF&!rb?C+%5@iZqPh4,G*NB#^h>i2Q,.AVjrc!/\1U$TbNS=_1NCmDmD&oNoN
IQ6&!0:[p;egrI/)*;O'YqoR#(<TsBc$:R+-;P+qO_^)<(eT!I6.QOI_i8=gkteP>A@J('8\_N)>o(Rh
N6QVqkp"2G=h-AKdg%qn^D/_UdpBNsLRWSeq!?[,8akD@X<J$`0?3/0!Ll7q8#lrd\&c0TaM<;I+Sor%
i;t!ZkAsUMn.6n:[5Ee&$Y;!2k'S#8Sg-boOPKQi2b@EhM(_L7[^-bs*SMuL:R34q.I!RAhC0jA0E2:E
7ZJ0&q`2dc3.=p7jZ^2J-"2eHn@ObMBXq*e#tk&)_("eq_ke0%F+0$@'MH8h[.>5';^N;]mUJ4XWA:nn
1[S"oq3H%8<qKj?cJ,Sf>3hP+j9=l"LYiT%L\L>^dYHNcdaL7Qdb9H)FJcG=9HLO=U)/H'VDk-RAA3-%
3Io6_!(,;3UdK*gF;+emq*+Qs%aV16f=`r3cM[F86Q3TSSb)AY@,&TURJ+h_!(5+0ElD))J:Z:P0?gt6
pQ<qk0Y_WU?D*YJY,N>P(n<D9oE88RlW6'77T+s:?X#a1mef3-2`OJH1AL-'H<Z"(V8?Ptc5AR7KgX.G
]\(g3Yb^@.kV4`OZ@-a2Vf^$en-TY0$<f"Xm5jFp$aj<"ce5]]E([b0i;jqD(Tu!1WWD%Xp1+=e(Mj&s
DWCYZj&:D[nF*mdR$RTC%kdM`kIdi;"BD7Hlu_T<#NO>5CNjdlgB"NSNcIM'H)AD6'&_QCQF?Xth&MGL
$N^V''$g-cW'$7`N.^kaaSGQ1m@PrG2k0TYp1@h<Y%EX%E:/Ck^7RsAr'bqXqCCb!e'bD,V%t!J&?<b5
?'>fIBrVS[iJ^rM2gac#OL"r_b<4!.jOj/(l"#$FF39:8,lO$"\rSYYL.?9^dh$i:"hk:hW&l:S.MNj:
'Zu27a!HmdjG]+\IW%6WLb]3^phGhj*Va>GQ`L@?BX;p$KcMTeb.,aFEJ^JQ3MYT-"fWL\P5cAY$n2oa
,Wjh<qoj,O%5-K`P(23]B=_pH>a*947!qWQ#M]I'CAd;eNX<3oFj&jI?<g,K43rL:gZYG*mnWq$%kp!O
MQoS?4ZN?Ul$WcO9TufUPa=r'=eGKC^60rO3b<=IPO]@.^B-Ag^IA3F1HC@bH&:T"JA9d4`;g]Kc9btk
O^&B8nd@I8"o,sq/0r4JafT+%['+=kq:nP4mr*4^&n?bDm9G9.GpnOGDZk:sR@JuL=sDX5SXN`'$]R1I
Yhii0()(J?AG?Q`kk[a0O>=dd2'usjQqJ\dSWi5@=!<d6Q?Inc7.O!-F$lM?=]ETkP(!Srnc^$palG!$
ee6)!blH&0N>c=P*FWt(Pk#I/Qm.&ko(MHnejj1":!R3G>U!>+$XgNQ03<>e;Z]#APf['%8kUE?!o/nS
8p,HNHk^C;(7"23P+r'SfZRF=!ea%,Zi9M#=QgSD"o,^O=aq_W9g9kE(EV9C@rg-hHQ=3++?F&41cXZZ
>C=uD],Y6b"h<P/56LD_OZA12rWD%eg3Xk'\9Onj@:>mggRp8\qu(R:m9"f#I18[\5l<Lo9Lj)%/Q=#6
Q?,Wi$;,U+2D6fGV!:d,MXBf^Y)Vk-)sd)MaIo%NI'\K(c>;g+Pd0YIWKj?CRbr<Hc**OVZ$V\E^7.lP
Kr.W=]GHq"I<WZ#=Yh.9J()_d),6WDg*>WU`uig[6124kON5%JPSVPjm?)C^YA_k.i<-j,c;E6=?9H>4
[llL-<P+8*glcS&n<A+"(QWUfDi`,;ZM^a@V*&3Z$!2CrHLWh)rV";p/AKd8P]E7D5gD1@kJcJOFke5%
XNnXf.-7Vf6?l:GRhma9XQ(?>7tjJ*Um-3pW]8*p?G(iqMEN^o/$IakE&/V[+FV<h86(.uc\j+'TrkfR
IEr_@-thC"1,c70KM880;54fGq2&V$Wlot>b7.#+2)-`8;I"NXn`RBrmi/&NB>-MaP58ells_rBS4^E:
.K.]Ek.p/VagT.)\mmP_ho=Tu[7<^;=^Z7CRmYY#c\PGj".to,`uVF/l;Z8?lp8q*AkmW4N24G.j?0'3
?]Zk2$-S5/kLsjXF'#EkG[;>%jZPA^<i*,_08h2hH4C5tk03CJ3R=Q%U]#DMq.nMr4KjaNnfA[<b,V+s
aVh3e6PIV'>q=!ajeW8EU@>g,Vc6ZrgN[$DBB;932E_FbZIt`[H7anYdg>>!#]XI%BsK<!=!R[`o9qWp
p;kl)b0]udb'5o+#%h0KW?Qf_(A4&_?:6d=2kJX>RB]8:.XWjb8"?(]MTOL:Rua,fC6:3`#]S@74KjSt
@uh&K9k[tokDW5\bLr-P)_.Ha1;*s4eo<gUM)/q.$s!@5^n"[ES.Y>FZ^6j3[pMkMQ0F!ADAkOL@et[6
?ZtS3P&!10H"NW%3OAG#+EXfWrchF_`cq'-LFDDgX\%=20YK<Zm05ZaqG.4m$C9K/WKLmVO72T6RHl5#
?OE*A?['f>4YhRo_&'*6N!C@nN`+:oebqMS@!X!VP_Ma,'1j[hrSQEHG*P2Mq)EUuJaR21'_f\-K8iGh
S?Zg(=Ec2.nF_$o?Dc^h]++2?pqobk.XB&*;3,188b_P=[7;Q!BY&>t7YESc]l'\fl7h*nNl'$=3b_s'
OP?T>!%IYeIp.`iq/MI'SpamgcAXnATA>Vj>%4!6g2NM+Ph)GJe*=nTo3>"R5=WfUq%HT=.lDVJ".K9'
CQRtS)1,mHbL_n*BABDbbbm8s4mKD"ERoVZg#5Qtf`)73!(/\JC]~>
%%EndBinary
grestore
np
6 39 mo
376 39 li
376 38 li
6 38 li
cp
/3 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[370 0 0 1 6 235 ]ct
snap_to_device
<<
/T 1
/W 1110 
/H 3 
/M[1110 0 0 -3 0 3 ]
/BC 8 
/I true
/D[0 255 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Gar8O(^6];7OD^_3/<cYR@0Ik!*qB[!!akcE"00I7KG:&joHf:?9Wf=6"X^P#%8WE6r]+J>QTg]8Y@?8
']!%S6@^o!N%Bo>#7P;AJTT+4!McL6+9`+0bRgGC%-6r2$5mFj<N)^^\qVP:V%uToHU&Q2!e?:`Z^s@6
B`JQS0uJQbcHlQdV95G77`IbAVK-;2@#fr;Q*lT'<6!4TRFqVDc4O$U3"[tW!25YbIf~>

%%EndBinary
grestore
np
600 39 mo
630 39 li
630 38 li
600 38 li
cp
/4 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[30 0 0 1 600 235 ]ct
snap_to_device
<<
/T 1
/W 90 
/H 3 
/M[90 0 0 -3 0 3 ]
/MD false
/BC 8 
/I true
/D[0 255 ]
/DS 
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
1009 39 mo
1129 39 li
1129 38 li
1009 38 li
cp
/5 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[120 0 0 1 1009 235 ]ct
snap_to_device
<<
/T 1
/W 360 
/H 3 
/M[360 0 0 -3 0 3 ]
/BC 8 
/I true
/D[0 255 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Gar8OTJBncJc]PO#Ra=Z'sC(bFq,'kk<osCio]1WToQa0q=m7q$O@(OTpWi;T`uVuS:rs_6q##43B/90
iF5^55gRSL_c=!_i.."m:aALfD;@N!5\;u+Z#_=o0JKF,4ei2t<!S,:#/s?ceC"PVZF#W/;<hlS(')tm
#a#~>

%%EndBinary
grestore
np
6 38 mo
376 38 li
376 31 li
6 31 li
cp
/6 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[370 0 0 7 6 236 ]ct
snap_to_device
<<
/T 1
/W 1110 
/H 21 
/M[1110 0 0 -21 0 21 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r*Fq-Qfm(rf'kRi9sHA!Een7?'bLg4V@X,S<WU;6hJ#U-aZ,p3g<J9^b(!HY+`kG:'kmo>C1ujkTUC
B7>-gI%JZpkF$<L^c82[7E[BUQl'nm)9Z#bE06&FQk9kZ_I2LWKA"U<(Zs*""<Q^q/tT6n(W`IKKK)nk
HQap*=_*gi,'7k0*TAQ,QRmhqi;cs,%c5d[A5(s1S>p2M\4U*<Ff(`F@MgUqR3?-RYg'<p[R7)n<bF_"
n:7QQ7lI3b&FJS]]Z-JcnStrPiqs%%`A?)E12i\2]-tq/5(CI>#SfOB(#?t%dO#h>A@!)@ZUIb,X$uHN
P2I_CnMnGa".NFrT9;!#Y#S(]g>XS)1>jXnZ%[R0A_b;;].D[+/JhKf:l?gF;mh%o::J!LEnB^tg&p"T
9s#hU=-Wg`XpaL3<?_[NU)S6^:PSg)k-DFEm((o]6M,R+KC8eNRl"!:i'C?aP-Q7,%p+T-\;G/Hm^/<M
OYC.-LZO=?LW/PU,DO]ePt6J,kR$6D]4d@T7odecB(Au1\;@_QX0MY;m'5TQ-QlJm^fC"0EMm*<ZA^/2
eL%<)bL7p#[`V#r*CQgOFKjYm4U8[;!Nr.ELcb!uPGLFGW\2]t!^AYme87`NeC![HR>^;tQeYE])RtZr
+RZTEGltWo(0@YrX7Ym[-FG*%VQLLG)ch!MHbE8")RtZj+RZUrG*]SZ/G_bJ:VT9@`]1c`hT.RdrgQ<b
"sB<[E"srjgh@]:EoT=ZEnMN?hWQj^hC553'A"Rlq'dN_)fQND6/6/rEa:aTml:(0'+I)Inih.TLT/`e
ETn]S3oYg'<kq_B"EC>foK6`.o=AD&N"D79._$<:MPI*FIouP@bl0UJZN@;(-&=X"j@-NIe">'T>fDN@
d&Ybfo1a"0ZW]@3Xg_-N$FktZ+RZV%GF@QFNUN'#AM!*En1ised:r3*,Xd[=njRqW?<4jAZikBH-@D(P
.*&F'aVXIfW`T:'d1XBgRSY@J>j<%Pn4/<W:rNdOMO#CQe:aG^^-Ygk_Z("<=9;ROPGsU)Ig[q13Pq,;
~>
%%EndBinary
grestore
np
1009 38 mo
1129 38 li
1129 31 li
1009 31 li
cp
/7 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[120 0 0 7 1009 236 ]ct
snap_to_device
<<
/T 1
/W 360 
/H 21 
/M[360 0 0 -21 0 21 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r+&`t!\d'Lq&d@=b[,JgdAGYb:IbG%?C[N!kWj,`nP&]X`qbT+IH,1nV1u9=qiY"Q>:qiJ]S<KJUo,
1X7rnc8ZK_359*KH[VCn2m=;OjUc("NQ)X2Rc8-;GNKX_F2-;M'mC-'@A1>=eQ_iFkK*"uFhCSmgLU&t
F!N6kn':gJn`2"Ib:PkaZn8oH18UMs+.n%jDoi/"!+B4B,l~>
%%EndBinary
grestore
np
6 31 mo
376 31 li
376 21 li
6 21 li
cp
/8 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 274 ]ct
[370 0 0 10 6 243 ]ct
snap_to_device
<<
/T 1
/W 1110 
/H 30 
/M[1110 0 0 -30 0 30 ]
/BC 8 
/I true
/D[0 255 ]
/DS [cf /ASCII85Decode fl dup/FlateDecode fl]
/O 2
>>
%%BeginBinary: 1
idximg
B\r+/k>r<_'ZT+A7WDFEJ0Ho<"VlC'7T>%G918-[(S\0BXOt.7Zni(m$0MGtb9U_>Ia=?h-9"#AbN:rr
-]o8C`d,^OF4X&[ckl=$Q?]qeG]f/k9I9uXDb?8[:CZ/Yq]BoDRVC4Uc#E)Pa-^?n<G'OVWt.De%C8],
bS^\L`jngOoB$S]]HGW<U^HiIChGS)(4(TKQ)\M(lj^ELdMAVcpFL,^O]5JpXCTHDiN][4g(pIkpFL,^
M,[WgC4r&+F_c_B9$>qE>EC>iZ`r8s7V09,M`%IEI!t=8N?_MAg>'995uhf>fsX$]Fc.8%[9_)VSOaL*
._30n]L%+ohL2a]!`B2P=elB)ZUbf2As"PCbT^$eQpn"T0T/m2?l#^C^ar@eJ6AZT!4,32!+q?C!6cWe
i&mVIQpn$jD>OjNV[ab/>dW(%Um&fW!iZ7!FeqN"+!%Y1/1#>,f#1(Y^h"l]1+0\0M=d;JfDIESB$Sho
pdc,Zls*`>[j;Y'</b&j(GG#+0:-BJI&%)hG"&Q?;o<_m,<*KYRlXPed@Bu&'tES<a;mEU</fTA=7<+k
l9=$\O&WA!a.8Li5VdZLc)Mb/=BKs8;mXM$B,!lO.rj?I%8X;#<0(>]?_1naeNQ-C*Z!l7])TJhs+9\n
AKXuh`,TEi]Th2%4hat1mcc=)^<s'4)]&+i]D!C.5N_o?rL^iPjXG(-8/2MPgfYZTjLZI^8C>?/T>cjk
IK]a*fk`A'Iab`T,?=)/RH)RW!Xo'E$Z>,~>
%%EndBinary
grestore
np
101.002 185.893 mo
40.401 185.893 li
1 .149 0 rgb
@
101.002 226.893 mo
40.401 226.893 li
@
106.002 190.893 mo
106.002 221.893 li
@
170.7 226.893 mo
111.002 226.893 li
@
171.603 185.893 mo
111.002 185.893 li
@
.063 .065 .128 rgb
%ADOBeginSubsetFont: GDAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VYBLNE+Helvetica-Bold gcheck setglobal} if
1 344 5 <00020040ffdc042805b4000b00170075405917012707d70f03380d370f37
1338154b0d440f44134f159815b713ba15c613ca150d1700530676007606
040606a606c80f03084017050240110d05830e0b830ea710143014027014
80149014a014b014d014f01407141947184e1076c418d45d71e44ded10ed
003fed3fed31300072715d01720012333212351026232206110012111002
212002111012210163527f7f4f4f7f7f5201e6dfdffeebfeebdfdf011501
cdfef70109fa0106fcfcfefa02edfe7afe99fe99fe7c0184016701670186
0000>VYBLNE+Helvetica-Bold AddT42Char 
1 556 6 <0001008e0000030705aa000d0032401e29053905020d01cc09040c0c0bb3
000938200c300c600cb00c040c0f470e1076c418d45de4cced003f3ff4cd
3130005d13353637363736373635331121118e8736563625130bedfedc03
e8c2060c133927412713fa5603e8>VYBLNE+Helvetica-Bold AddT42Char 
1 660 7 <000100400000042105b1002100884061071401041b071c6f1203041d1901
1618660160046206671a97019502981aa6010b001910193419351c041c19
0402041e0f0a4013051ea1210c1e1c04030e07b316731f01020e630f7c1f
a7102101702180219021a021b021d021f02107212347224e1076c418d45d
71e44df4ed393910f4ed111739003ffd3feddd111739015d31305d710071
36373637363736353426232207060721363736213204151407060f010e01
07211521443f3de3c53a59665f822f1b05feeb073c720123e60110603f90
726b4f1b0279fc1f9c8191a28d3d5f715c7a61387ab972d9ffd2a17d5366
514c442dfb000000>VYBLNE+Helvetica-Bold AddT42Char 
1 908 8 <00010036ffdc042105b100300076b609200198220130b80108403c2c171e
25250bf66f0cdf0c020c0c2c13401e0504402c0d252507106f210783290c
8c1663177c006329a71030303002a030b030d030f03004303247314e1076
c418d45d71e44dedf4fde610edd4ed12392f003fed3fed12392f5dfd393d
2f1810cd10ed3130005d0171011417163332363534272623353637363534
262322061721363736373e01333216151407060732171615140223202726
27014e1c3489547d74428e8b375f6158655f02fef60421234b389a70d0ff
4c303427496dfffafecc783f0701bd573969736c8f301bcc02192a805368
806b6c6155483336d7b5805837144365afb8fee9c96bad00>VYBLNE+Helvetica-Bold AddT42Char 
1 1172 9 <000200360000042f05a1000a000d008f40450e0c480c480d8f0cdc0c051f
0c0158077a0789079907a80705050d460d830dd60d04110d01040500030c
090d0a01080b0d0a030c0c0d0df512060607060c07040a0df70005b8014c
4009030c0d07050c03b30abb013a0001000901a9b3060f470e4e1076c418
4dd4f43ce4fd3c113939003ff43cfd3c3f393901872e2b047d10c50f0f0f
31300172715d0072710123112111213501211133211101042fa4fee9fdc2
02150140a4fe45fe950138fec80138f90370fc760272fd8e>VYBLNE+Helvetica-Bold AddT42Char 
1 1376 10 <00010036ffda042105970020005e40160e0f0fa1121212130d0ec2130940
17171d12a10f0420b80155401903401d0d113813120d0006831a0fc3006f
0e381aa720224721104e76c418d4e44de4fded10ed11393939e4003feded
3fed12392ffd39f4c401872e2b7d10c53130011e01333236353426232207
060725132115210336373633320415140021222427015211605c6a6f686e
34264322ff0066031ffdaf3442253e59b4010cfefefeffcffef60f01845d
6595716f990d18410c0321f2fec32b0e17f2e7c9fec4decc>VYBLNE+Helvetica-Bold AddT42Char 
1 4880 27 <00020089000001aa05cb00030007003b40224c004c015c005c010401b102
000406070a0917171a0006270107190809b2215045182b2b4ef43c4dfd3c
4e456544e6003f3f3f4ded3130005d012111210121112101aafedf0121fe
df0121fedf04c40107fe77fbbe00>VYBLNE+Helvetica-Bold AddT42Char 
1 5284 29 <0001008b000001a805c20003002540130200010a0517171a002701190405
b2215045182b2b4ef44dfd4e456544e6003f3f31302901112101a8fee301
1d05c200>VYBLNE+Helvetica-Bold AddT42Char 
1 5348 30 <000100800000069c045a002d00c2414d0037000200010006000200160002
002500020069000f006a001a0079000f007a001a0089000f008a001a0099
000f0099001a00a9001a00b9001a00e7000b000e0002002100290003001f
000d0024002d00180024002d00250007001f0006001d00120008000a002f
00170017001a000600360009010f00290011004d0014010f001e0020001d
0027001e0019002e002f012300210050004500182b2b4ef44dfdc410f4ed
39f4fd4e456544e6003f3c3c3f3f3c4ded10ed1117393130015d005d0016
171617161503211134272623220706151121113427262322070615112111
2115363736333217161736373633058f8c392e100a02fedc142666762d17
fee11424697a2a17fedf0115352f53847d4d3e203853586c045a38463953
376afd5102b63e284c623449fd770289612c4f4f2d59fd7004409f552440
373350602d2d>VYBLNE+Helvetica-Bold AddT42Char 
1 5684 31 <0002008700000461045f00160017004b402d0501150125013701580b680b
060112100609241716070e040a170536170f021a19110e270f191819be21
5045182b2b4ef44dfdc44e10f64d1139ed2f003f3c3f3ced3f3939313001
5d001615112111342726232207061511211121153637363327038ad7fedc
172a7691361cfee401133731588769045cb1cdfd220297562e547b4165fd
b204409f542542030000>VYBLNE+Helvetica-Bold AddT42Char 
1 7444 41 <0001001a000004500440000b010340970800180002070413041a0a032702
240426062a0a3604390a4504490a5504590a9504990aa004af0ab404b707
bb0ac404ca0ad204db0ae504f70417040318040503271202020104051804
030527120607060a09180a0b0927120708080a0b180a090b271200010001
04070a040006050302060b0908000a090705060b03010a0a040206080200
0d17171a08a900190c650c0da9216066182b2b764e10f4184dfd194e4565
44e64d2f18c410c41139391239393911393939003f3c3c3c3f3c3c3c1217
390110872b087d4b51587a5910c5181005872b7d084b51587a5910c51810
05872b087d4b51587a5910c5058710182b087d4b51587a5910c53130005d
71015d330901211b01210901210b011a0174fe9c015db6b20153fe9a0174
fe9dbcbd02280218fec4013cfdedfdd30147feb9>VYBLNE+Helvetica-Bold AddT42Char 
VYBLNE+Helvetica-Bold /CharStrings get begin
/zero 5 def
/one 6 def
/two 7 def
/three 8 def
/four 9 def
/five 10 def
/i 27 def
/l 29 def
/m 30 def
/n 31 def
/x 41 def
end
VYBLNE+Helvetica-Bold /Encoding get
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/VYBLNE+Helvetica-Bold*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five 30{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d 
/e /.notdef /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /q /r /s /t /u 
2{/.notdef}rp /x /y 134{/.notdef}rp]
VYBLNE+Helvetica-Bold nf
VYBLNE+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf
551.799 19.1519 mo
(extension)
[7.784 7.784 4.66193 7.78394 8.55396 7.78394 3.89203 8.55389 0 ]xsh
558.406 36.1479 mo
(phase 0)
[8.55389 8.55389 7.784 7.784 7.784 3.89203 0 ]xsh
634.958 19.1519 mo
(elimination)
[7.784 3.89203 3.89197 12.4461 3.89203 8.55383 7.78406 4.66187 3.89197 8.55396 0 ]xsh
645.836 36.1479 mo
(phase 1)
[8.55389 8.55389 7.784 7.784 7.784 3.89197 0 ]xsh
721.352 19.1519 mo
(extension)
[7.784 7.784 4.66193 7.78394 8.55396 7.78394 3.89203 8.55389 0 ]xsh
727.96 36.1479 mo
(phase 2)
[8.55389 8.55389 7.784 7.784 7.784 3.89203 0 ]xsh
801.838 19.1519 mo
(extension)
[7.784 7.784 4.66193 7.78394 8.55396 7.78394 3.89203 8.55389 0 ]xsh
808.446 36.1479 mo
(phase 3)
[8.55389 8.55389 7.784 7.784 7.784 3.89203 0 ]xsh
874.876 19.1519 mo
(elimination)
[7.784 3.89197 3.89203 12.4461 3.89197 8.55396 7.78394 4.66193 3.89203 8.55383 0 ]xsh
885.754 36.1479 mo
(phase 4)
[8.55389 8.55389 7.784 7.784 7.784 3.89203 0 ]xsh
961.438 19.1519 mo
(extension)
[7.784 7.784 4.66193 7.78394 8.55396 7.78394 3.89203 8.55389 0 ]xsh
968.046 36.1479 mo
(phase 5)
[8.55389 8.55389 7.784 7.784 7.784 3.89203 0 ]xsh
3 lw
249.806 2.80399 mo
504.232 2.80399 li
504.232 104.554 li
249.806 104.554 li
cp
0 .59 1 rgb
@
.063 .065 .128 rgb
VYBLNE+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf
1050.73 20.2769 mo
(restrictions)
[5.44604 7.78406 7.78406 4.66187 5.44604 3.89209 7.78394 4.66187 3.89209 8.55383 8.55383 0 
]xsh
gsave
.06 .0400085 mo
1138 .0400085 li
1138 274 li
.06 274 li
cp
clp
1.678 138.893 mo
214.14 138.893 li
214.14 269.893 li
1.678 269.893 li
cp
0 .59 1 rgb
@
grestore
%ADOBeginSubsetFont: GDAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VYBLNE+Helvetica-Bold gcheck setglobal} if
1 216 3 <0001002f01b4026d02c2000300214012002203011a05df000100190405d5
217d46182b2b4ee45d10e64d002fed3130132111212f023efdc202c2fef2
>VYBLNE+Helvetica-Bold AddT42Char 
1 1580 11 <0002005cffd7057b05ef001e001f00744029570a94079408035b02591b58
1d660477018905a914b204b70ac604c70bda02db14dd18df1bf8181017b8
010b40231a08081a0c411f030312411a091f16371708371f1e071a210f37
1e1920219921ad56182b2b4ef44ded4e10f64d1139edd4ed2f003fed3f3c
ed12392f10ed3130015d005d123736212017161721262726232202151416
33323736372106002120272611015ccfb401160174ac5f07fecc1e2f54a5
a8c2cd9ea2552f1f013128feb7fefffec2b6b602900457d1b6f4898a6a36
60fef1f8f8f76a3972f1fed2cccd0165031a>VYBLNE+Helvetica-Bold AddT42Char 
1 2168 14 <000200a30000050b05c200080013003e401c97019706020c2a04040e032a
0f020e080837131a15030d250e191415b8011db3215256182b2b4ef44dfd
3c4e10f64ded003f3fed12392fed3130015d002623211121323635000423
211121112132041503da796dfee1011f6d790131fef8f5fec7fece0282de
0108046062fe4e6a73fefdd8fdee05c2e4ef0000>VYBLNE+Helvetica-Bold AddT42Char 
1 2308 15 <000200a30000057105c2000a002a0058402a20231b1815052713262a0101
1d002a2902271d081d2022130617220637171b57101a2c00272528192b2c
b8011eb3215256182b2b4ef44dfd3c4e10f64de4c4fdc411123911393900
3f3c3fed12392ffd39111739313001112132373635342726233616171e01
151406071e011d011417161715212627262f012e0123211121112101d001
5d68345c593264dba73a30386a7a6655080c2cfead0e060c0102026388fe
c2fed302d304c2fe74182a7c862e1afd464438885769cb2a29979b636524
391b25311e3e41898d5efdbe05c2>VYBLNE+Helvetica-Bold AddT42Char 
1 2532 16 <00020055ffda050e05ef002e002f00a3406a080f07210726190b190f1721
1726660c650d6922e52d0b29102915281a26273a15381ab915ca15dc15d2
2ceb13eb16f913fa16f92d0f0e00110b22181f25170825220e0b04182ed4
2b18d41c412f140304412b092f18962f11174f0896281a311f3611570036
2e193031b8011eb321ad56182b2b4ef44dedf4ed4e10f64dedf41139ed2f
003fed3f3ceded10ed11173901111239111239391112393130015d005d01
16171633323736353427262f012627263534002132041721262726232206
151417161f011617161514002120003501017b0e294bb66d44814040899c
e6589501200117e9014908fed8086c486b778e462d93fea75584fecbfee6
fee0feb6025101c765325b182e7d4928271e23343d66d9c60106f7eb8538
2560564f271a233d284368c5cafef50107e60428>VYBLNE+Helvetica-Bold AddT42Char 
1 4284 24 <000100150000028b05d100170081412f00150003002c0002001f004f0004
005f000400020004002c00170001000b0010005c001200090006000e000a
001900170017001a000a001f0003000d0015001600090027000e001f0013
00920010001900180019010e00210060006600182b2b4ef44df4e4fd3939
3cd4f44e456544e6003f3f3c4dfd3c3fed5df4ed393130001617152e0106
151415331523112111233533353437363302322c2618712bbbbbfee49f9c
3b3eed05d10303e803033520203cc9fc91036fc946af4262>VYBLNE+Helvetica-Bold AddT42Char 
1 7120 39 <0001001a0000045704420006009e404f270654066406a506b50605040601
1002470457047a0274037704064701880087059705a705b705c803e701f7
01090320040427120505060220010127120006000602050401000603020a
0802020001b8010cb2030506b8010cb6041907656066182b19764e10f418
4dfd3939fd39391910c618003f3c3f3c3c3c123905872e2b7d104b51587a
59c4872e182b7d104b51587a59c43130015d7100715d0121012101211303
250132fe77fed3fe790140e30442fbbe0442fcdc>VYBLNE+Helvetica-Bold AddT42Char 
VYBLNE+Helvetica-Bold /CharStrings get begin
/hyphen 3 def
/C 11 def
/P 14 def
/R 15 def
/S 16 def
/f 24 def
/v 39 def
end
VYBLNE+Helvetica-Bold /Encoding get
dup 45 /hyphen put
dup 67 /C put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 102 /f put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/VYBLNE+Helvetica-Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/three /four /five 13{/.notdef}rp /C 12{/.notdef}rp /P /.notdef 
/R /S /T 12{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /q /r /s /t /u 
/v /.notdef /x /y 134{/.notdef}rp]
VYBLNE+Helvetica-Bold nf
VYBLNE+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf
278.161 191.75 mo
(Convert the data graph to )
[10.108 8.55389 8.55389 7.784 7.784 5.44611 4.6619 3.892 4.6619 8.55389 7.784 3.892 
8.55389 7.784 4.6619 7.784 3.892 8.55389 5.44611 7.784 8.55389 8.55389 3.892 4.6619 
8.55389 0 ]xsh
287.093 208.746 mo
(our interval-PCSR data )
[8.55389 8.55389 5.44611 3.892 3.892 8.55389 4.6619 7.784 5.44611 7.784 7.784 3.892 
4.6619 9.3381 10.108 9.3381 10.108 3.892 8.55389 7.784 4.6619 7.784 0 ]xsh
320.161 225.742 mo
(graph format)
[8.55389 5.44611 7.784 8.55389 8.55389 3.892 4.6619 8.55389 5.44611 12.4461 7.784 0 
]xsh
264.921 142.25 mo
461.747 142.25 li
461.747 271.75 li
264.921 271.75 li
cp
0 .59 1 rgb
@
.063 .065 .128 rgb
%ADOBeginSubsetFont: GDAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VYBLNE+Helvetica-Bold gcheck setglobal} if
1 104 2 <00010076fea501aa012a000d003b401f00ee0a08040d710528040a0f1717
1a090a035a06700004190e0f70217f3c182b2b4ef43c4dfded39394e4565
44e64d003fedf4113939ed3130173e0137231121111406070e0123765651
06ad01342431358f1bed187065012afefe4494363a3b>VYBLNE+Helvetica-Bold AddT42Char 
1 276 4 <00010080000001af012a0003002640130128030a0517171a017000190405
70217f3c182b2b4ef44dfd4e456544e6003f4ded31301321112180012ffe
d1012afed6000000>VYBLNE+Helvetica-Bold AddT42Char 
1 1808 12 <0001009c000004b105c0000900374017072a040409032a00020908067601
1a0b03082509190a0bb8011cb32152ab182b2b4ef44dfd3c4e10f64de400
3f3ffd12392ffd3130132111211121112111219c0415fd1d0287fd79fece
05c0fefdfeadff00fd96>VYBLNE+Helvetica-Bold AddT42Char 
1 1908 13 <00020055ffd905af05e8002200230085404bc808db08fa1af92104290228
2139134b1859159821c619c21df80909130a1222d41f0e2a0f0f12044123
1f0312080a41170923131213120d0322000037231b22ac0f101a2507371b
192425b8017fb321ad79182b2b4ef44ded4e10f64dcdf41139ed11121739
2f3d2f182f003fed3f3f3ced12392ffd10ed11123d2f183130015d005d01
262726232202111016333236372135211123270607062320272611103736
2120001701047b23884c5db2e5f89e9bc617feab0266cc1f59477ab2fedb
bbc3c5c501440119015519fd7803f6973c21fef3fef2fef0e2b391f6fce9
b8692b4bcbcc01620166d8d8fee3d501f2000000>VYBLNE+Helvetica-Bold AddT42Char 
1 2948 18 <0002009cffda053d05c2001500160033401b160c0102064111091616150a
370d1a18023715191718c0215279182b2b4ef44ded4e10f64ded12392f00
3fed3f3c3c31301321111417163332373635112111140706212027263501
9c01392438bcbb382401394988fe81fe818949025105c2fc7698467c7c46
98038afc76eb83f0f083eb038a000000>VYBLNE+Helvetica-Bold AddT42Char 
1 3412 20 <0002007bffe3049c05c0001200200042402509200b0e120c00192412070b
0a2024050b1584021a221d1f0a1f0d270b1921229821504e182b2b4ef44d
fdf4e44e10f64ded003fed3f3fed3f113911123931300012151402232227
2627152111211136373633123635342726232207061514163303a9f3f0d7
87523139fee9011c36414d77257a1e39999b3a1e7c7f045afecaf5fefeb2
3620508905c0fdf44c2832fc74b291744c908d4b778cb8000000>VYBLNE+Helvetica-Bold AddT42Char 
1 4984 28 <000100820000046d05bd000b00f040b240024605d402e502040f080a0955
0589058f088e09c505ca08d907df08dc090b080618062f032f0428052d06
370338064c0348065d0359066a0369067804880497039507a903af04aa06
a807b603b804c603c9041a4b064a07560588048308c405c808d903d904dd
07da080b050909040505060b0b040802070904050706050a02200303cb12
04040909040302040602090a0403060a070a0000061a0d010a27000b200b
300b400b040b190c0d872150e3182b2b4efc5d4dfd3c4e10ee003f3f3c3f
3c12393901111739874d2e2b047d104b51587a59c4001239011139390f87
10083c07103c313001715d00715d13211101210901210107112182011801
630161fe83018cfea8fefb76fee805bdfce6019afe5ffd6401d27bfea900
>VYBLNE+Helvetica-Bold AddT42Char 
1 7320 40 <0001000e000006210442000c0039b8002a2b00b800052fb800082fb80000
2fb800032fb8000a2fba000200050000111239ba000700050000111239ba
000c00050000111239303101211b012101210b012101211302870121a6aa
0129fec4fedbabadfed8fece0132aa0442fcef0311fbbe031afce60442fc
f2000000>VYBLNE+Helvetica-Bold AddT42Char 
VYBLNE+Helvetica-Bold /CharStrings get begin
/comma 2 def
/period 4 def
/F 12 def
/G 13 def
/U 18 def
/b 20 def
/k 28 def
/w 40 def
end
VYBLNE+Helvetica-Bold /Encoding get
dup 44 /comma put
dup 46 /period put
dup 70 /F put
dup 71 /G put
dup 85 /U put
dup 98 /b put
dup 107 /k put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/VYBLNE+Helvetica-Bold*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /.notdef /zero 
/one /two /three /four /five 13{/.notdef}rp /C 2{/.notdef}rp 
/F /G 8{/.notdef}rp /P /.notdef /R /S /T 
/U 11{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y 134{/.notdef}rp]
VYBLNE+Helvetica-Bold nf
VYBLNE+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf
761.051 166.634 mo
(the matching process)
[4.66187 8.55396 7.78394 3.89203 12.4461 7.784 4.66193 7.78394 8.55396 3.89197 8.55389 8.55389 
3.89197 8.55396 5.44604 8.55396 7.78394 7.78406 7.78394 0 ]xsh
557.585 219.08 mo
(For extension phase, we invoke the )
[8.55389 8.55389 5.44611 3.89197 7.78406 7.78394 4.66193 7.784 8.55389 7.784 3.89197 8.55396 
8.55383 3.89203 8.55389 8.55389 7.784 7.784 7.784 3.89197 3.89203 10.892 7.78394 3.89203 
3.89203 8.55383 7.78406 8.55383 7.78406 7.78394 3.89203 4.66193 8.55383 7.78406 0 ]xsh
519.479 236.08 mo
(corresponding extension GPU kernel based on )
[7.784 8.55389 5.44611 5.44611 7.784 7.784 8.55389 8.55389 8.55389 8.55389 3.89197 8.55396 
8.55383 3.89203 7.784 7.784 4.66193 7.78394 8.55396 7.78394 3.89203 8.55389 8.55389 3.89203 
10.892 9.33813 10.108 3.89203 7.78394 7.78406 5.44604 8.55396 7.78394 3.89203 3.89203 8.55383 
7.78406 7.78394 7.78406 8.55383 3.89203 8.55389 8.55389 0 ]xsh
522.604 253.154 mo
(the )
[4.66187 8.55396 7.78394 0 ]xsh
%ADOBeginSubsetFont: EAAAAA+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /EAAAAA+Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3215755eb0000000cc000000606376
7420ffc3ad470000012c000007606670676dba2711a60000088c0000063e
676c7966a32978b30000dfac00096bb868656164eb956ba600000ecc0000
003668686561127e1a5f00000f0400000024686d747800c1766a00000f28
0000465a6c6f6361534f343e00005584000046606d6178701990065b0000
9be4000000206e616d651b38d47400009c04000031af70726570034f36ae
0000cdb4000011f567646972000000000000000000000000000303d402bc
00050008059a05330000011b059a0533000003d1006602120805020b0704
020202020204e0002effc000785b0000000900000000544d432000200020
fffc05d3fe510133073e01b2400001ffffff0000042605ba000000200015
05ba001c05ba001c05a7001c0426001c0000ffe40000ffe40000ffe4fe69
ffe405ba001cfe69ffe402ea0000011d0000011d000000000000000000b2
00ac00d70128012000b301fa001700f8011901310049000400f7000300af
00fd00950014005400960112002400160055004901040119012b008c019b
ff76ffe9003d009200a2ffb70182ffaa0016008f00c600f8001c00de0401
0037004e00550055006500e903e50059ff9a00080087000b003b00520116
006100d600d600f500000093009400be017cfff80004001400820092003c
00410041ffc1fffc002a008c049005d809b5009100bb0106ff63ff69001e
0022008a022bffd6ffdf0026005900a300ac0104012b01c004480021006b
00850098011903c6006b009500a400fe010c025d034305bf000000490056
006e0077008a00aa00ca0112015005d805f0ff7bffe70006001300280061
006900e90135014d02a5040cff3effda005b00b900c801190119011901c0
045b04a7055bfe3fff9dffc2001500b7010a01bc01c10532058efd81ffa1
ffae000c00260031003d004e00560062008300c100c900f100f2027fff7f
00480053007700c5011d01200126012801d60219027e027e03d3002e0041
005d006b0075009f00b000b200ba00bb00bd00d600db00e000e50114011b
014a0162019101f2020c026402cf039b03b403d4040104a9001600230025
002a007400a500b600cc00cd00cf0105012001300150016a016f0197019d
01e002b002ec02f70408048304fb04fd0526fee0fefbff4efff50018001a
004c007a007f009100a300b300b400ce00d500f200f300f6011001380168
01a101b001e001ec02090222024f0270029602a502ad034e039103c10435
0442046b04cd04da0586058b076107fefca6fe93feadfed1ffb7ffd10003
000e00180026004600690081008f00a500bf00d300d500d900dd00e20119
012b0138013b015a015e016801730188019401ad01c501d101ea01f20200
020002000222023b0244024f026f0272027e02820293029402a502cf02cf
02d002da02dd02eb02f5030503220336037103a103b003b803d003e60410
0426042e0431044f045a04ff053205320547055305a805ab05c205f0063c
0664067006e80782078408ccfd2afddefe00fe68feb0feb3ffaa00080059
007a0091009e00a200af00b400bb00ca00cc00ce00d900e000f40114011a
01210127012b01390146014b014d0157015c01650182018701920198019b
01a201ae01c501c501d102070222022b024102530261026502840287028d
02b402b402ba02c902d602d802ed02f503170323032b03310349035a035b
036e03710374037e03840391039103aa03cf03d303e703e803ed04080417
041e0475047a049904a704b404d1054c056d056d05a205bf05c005d105fc
05fc0602061a061c062f066a06a806e2070607360750078907d407f30870
011c012a011a01200000000000000000000000000219000b001e02aa0214
047f01ed0000001d0104000f0091002b01880153011201f3003f03fe0168
010e047f01ed036e03150219041300000000064004b00000027401bb0035
01c5007f06020301000004e000b201dc02e004c3023d00d50160011904a7
036e05ca022100ab0426009002bc02bb014200b4023c0256029c030001e5
01a800e5006b00780094016b017300ab01ed013a017d0137017f00d40216
03530184003cffa202040109014901f0006e031500810464005e00000000
0000000000000000000000000000000000000000000000000000013900dc
00e9fe9e040d047c012b00b80096005900ac00df01a900fa0105ffec0017
0003005500610004008c00a3008500280120005d00d6007f012601190104
016c06cf00b4010600000737063e047a00f000f900e905ba042604420000
ffe7fe69049e04e3ff37ff2d01200105012000a800740068004700f200e5
00d900bd00a800680047005c0048000a0028003200410050005a0064007d
00870091ffb0ff9cff83ff79ff6f00cb012000fa012c01fa01a000d500b8
005c003c00c800c8008f00d9018b00b30047000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000fe6400c000ea01180125013203b003ed0576
059005aa05b405be05cd063100780084009b00cc00e200f4010a01200163
00d100ea00f7010801420019002c00340041003800480058006c025903bd
0043011a007000d30028003700420050005a0064007300780082008c009c
00a500bd00ce00f00110015c00be00d801020117012c016300ea01080041
004b0055005f007300a60109018301b300410064001e002a00eb00fa010e
01380274002c00400082009600b600c000cc00dc00e600f000ff010a0120
012c013b01440156016300f70057006401100136005001b10000ffb60039
004e004403cc00e5002401100042012201a400f0006000e0000e001d0039
05e30102002cfe4eff38026903bd011600ff000e00a00054001b003d0171
0041000f005000fd0015014f0035fe52002c00d3010304b001d200b600c0
00990265ff870377fe6c00cb00a9005c0040047607440472048504fb4042
5554403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524
232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706
0504030201002c4523466020b02660b004262348482d2c452346236120b0
2661b004262348482d2c45234660b0206120b04660b004262348482d2c45
23462361b0206020b02661b02061b004262348482d2c45234660b0406120
b06660b004262348482d2c4523462361b0406020b02661b04061b0042623
48482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d
44235920b0ed51582320b04d44235920b09051582320b00d44235921212d
2c20204518684420b001602045b04676688a4560442d2c01b10b0a432343
650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b102
17453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0
004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a
8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b017
7ae41b038a45186920b01723448a8a8720b0c05158b0112bb0172344b017
7ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b
53205c58b002855958b00185592d2c20b0032545b019234445b01a234445
65234520b00325606a20b009234223688a6a606120b01a8ab000527921b2
1a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3
1940201945208a54582321b03f1b235961442d2cb110114323430b2d2cb1
0e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f
432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120
b003252349b04060b0206320b000525823b002253823b002256538008a63
381b212121212159012d2c4bb06451584569b00943608a103a1b21212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d
2c3eb02a2a2d2c352d2c76b8023623701020b802364520b0005058b00161
593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8
2000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621b
b200802f2b59b002602d2c0c6423648bb84000626023212d2cb400010000
0015b00826b00826b00826b008260f10161345683ab001162d2cb4000100
000015b00826b00826b00826b008260f1016134568653ab001162d2c4b53
234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c
4b53234b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b
02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb0
12435c580cb00425b00425060c6423646164b0035158b00425b004250120
46b01060482046b0106048590a21211b2121592d2cb012435c580cb00425
b00425060c6423646164b807085158b00425b00425012046b8fff0604820
46b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b212159
2d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58
381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b
2121592d2c462346608a8a462320468a608a61b8ff8062232010238ab902
a702a78a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b12601885158b940000200
63b80400885458b202400243604259b94000040063b80800885458b20280
0243604259b12801885158b94000080063b81000885458ba000201000002
436042595959595959592d2cb0024354584b53234b515a58381b2121591b
21212121592d00000001000000070000dedcd8c05f0f3cf5081908000000
0000a2e33c1d00000000d684e51bfafafcfd100008720001000900010001
0000000000010000073efe4e00431000fafafa7a10000001000000000000
000000000000000011960600010000000000023900000239000002aa00b8
03cb00700473001204730046071d005905c7005a01e7005c02aa006b02aa
0043031d001c04ac00550239007502aa0073023900930239fffd04730056
047300a2047300330473004d047300260473005b04730057047300570473
00530473004102aa00c902aa00aa04ac005f04ac005504ac005f04e3006a
07cd003d05c7000005c7009605c7006105c700940556009504e300970639
006205c700960239008c0473002305c7009904e3009d06aa009105c70098
06390059055600950639005905c700960556004a04e3002c05c700930556
ffff078d0007055600000556fffd04e3001602aa00920239fffd02aa0026
04ac00730473ffed02aa002a0473004904e300870473005504e300540473
004102aa001804e3005404e30092023900930239ffa20473008902390093
071d007e04e3009104e3005204e3008b04e3005b031d00870473003002aa
001f04e3008d0473000b063900090473000c0473000e04000022031d003c
023d00b0031d002d04ac004305c7000005c7000005c700610556009505c7
00980639005905c700930473004904730049047300490473004904730049
047300490473005504730041047300410473004104730041023900920239
ffe90239ffcd0239ffd004e3009104e3005204e3005204e3005204e30052
04e3005204e3008d04e3008d04e3008d04e3008d04730044033300560473
00540473000d0473003b02cd00420473fffe04e3008b05e5fff705e5fff7
080000d802aa00bb02aa0005046400310800ffaa0639003f05b400980464
00320464003c0464003c04730001049c006f03f4002c05b4007a069600a1
046400000231000002f6002502ec001a06250037071d005804e3005704e3
006502aa00c304ac0055046400540473ffec0464001f04e5001a04730060
0473006a080000c905c7000005c700000639005908000048078d00580473
fffc08000000040000840400006902390098023900720464003103f4002f
0473000e0556fff70156fea90473ffe002aa004b02aa004b04e3001f04e3
001f047300440239009302390075040000710800000105c7000005560095
05c7000005560095055600950239006a0239ffae0239ffbf0239ffc10639
0059063900590639005905c7009305c7009305c700930239009302aa0003
02aafff302aa001302aa001a02aa00cd02aa009102aa002602aa006002aa
003902aa000304e3000a0239000a0556004a0473003004e3001604000022
023d00b005c7fffd04e300530556fff70473000e0556009504e3008b04ac
005504ac006d02aa005b02aa001902aa002806ac005c06ac005c06ac0028
047300000639006204e300540239008c0556004a0473003005c700610473
005505c700610473005504e30054046bffed02aa00c805c7000004730049
05c700000473004905c7009405c0005105c7fffd05560095047300410556
00950473004104e3009d0239007904e3009d0315009504e3009a03d50093
05c7009804e3009105c7009804e300910639005904e3005205c70096031d
008705c70096031d00500556004a0473003004e3002c02aa001f04e3002c
03d5001e05c7009304e3008d05c7009304e3008d04e300160400002204e3
00160400002204cf009a063900560691005604eb004e04da004e03cc004e
0579004e0392003005b9004e046bffed04d500b8032b004f08c000290800
004f040000990800004f040000990800004f040000980400009807d5016a
05c7008f04ab005504d5009d04ac005504d5022204d5010505abffe90500
01c905ab027e05abffe905ab027e05abffe905ab027e05abffe905abffe9
05abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905ab02d605ab006605ab
ffea05d5ffff04d500920800000007eb013007eb012007eb013007eb0120
04d500b204d5008004d5002a082b0198086b01b807550010060000f40600
006f0440003a0540003704c0003f0415004004000025060000550647008c
0473009005abffc701eb008d03d500860715002303e9001804d5009202d6
005c02d6005c04d500b202d6004d05c700000473004905c7006104730055
05c700610473005505560095047300410556009504730041055600950473
00410639006204e300540639006204e300540639006204e3005405c70096
04e3009205c7000504e300190239ffba0239ffbb0239ffda0239ffda0239
ffe10239ffe20239004802390047047300230239ffa205c7009904730089
0473008d04e3009d0239008005c7009804e3009105c9009c04e3008e0639
005904e300520639005904e3005205c70096031d007b0556004a04730030
04e3002c02aa000705c7009304e3008d05c7009304e3008d05c7009304e3
008d05c7009304e3008d078d0007063900090556fffd0473000e0239008d
05c70000047300490800ffaa071d00580639003f04e3005702aa00c9078d
000706390009078d000706390009078d0007063900090556fffd0473000e
0239009502aaffd70473000d04cd005a06ac005c06ac002906ac003006ac
002f02aa00bc02aa002602aa00bb03b8fff405c7ffe806d3ffbb073fffbb
03caffbb0699ffa6076bffc806b4ff9c0239ff2905c7000005c7009605c0
00000556009504e3001605c700960239008c05c700990556000006aa0091
05c70098052600660639005905c7009a0556009504cd005a04e3002c0556
fffd0556000006790056066a00620239ffcc0556ffff04eb004e039c004e
04e3008e0239008204a8006c04e200900473000f03af004e04e3008e0453
004e023900930476008e0473000f04e500900473000b0390004e04e30052
04f300760429004e04a80076049b00110607007606c2004e0239ffcd04a8
007604e3004e04a8007606c2004e055a00970715002f048900a405b10058
0556004a0239008c0235ffca0473002308c0001a0880009d0700003704e2
009a04fa000005c0009905c7000005c0009b05c70096048900a405b3fffa
05560095073b00170503002c05c0009905c0009904e2009a059d002006aa
009105c700960639005905c000990556009505c7006104e3002c04fa0000
06d400590556000005d8009a059f007d080a009a0827009a06f5001a07d5
009d05c0009b05b100570840009605c000040473004904f1005c04eb0096
035500880514fff90473004105acffff03fa001804eb008c04eb008c0401
00880515001905eb009b04d5008804e3005204d5008804e3008b04730055
03eb00150473000e070000540473000c04eb008904a5007206ab008c06c0
008d05d5002806d5009504eb0099046b003806d5009104abfffb04730045
04e3000003550088046b005104730030023900930240ffd00239ffa207c0
00180740008c04e30000040100880473001204d5008803e5009603930088
0800004108eb00a306200030000000000000000000000000000000000000
0000000000000000000000000000000000000000ffac0000000000000101
0000ffce0393007d0000ff37026500c8000003020000ff0102aa00c904a9
0059049b004103a7000a0466003204ea0082022f0087034e005a04ed0087
0503007d022f0087042c002803ed004b03f8004104e30087050a0037022f
00870316004b04e800500459000a04c0006404b2006403ff000a0418000a
04950082042c002805b8005a0563002d045e0087045e0087045e00870236
005004090050068b0087022f0030042c0028042c002803f8ff4903f8ff49
0479003205b8005a05b8005a05b8005a05b8005a04a9005904a9005904a9
0059049b004103a2000a0466003204ea008202950000038100000503007d
02950000042c002803ed004b03f80041050a00370316004b04e8005004c0
006404b200640418000a04950082042c002805b8005a0563002d022f0087
049b004103ed004b04b2006404db00410000ffdc0000ff250000ffdc0000
fe51028d00ab028d00a002da004303c0007e0196ffba0000004600000046
000000460000004600000048000000460000004600000046047e0188047e
0150047e0104047e009e047e012d047e00ea047e00d5047e009c047e00bc
047e00ee04350085028d00c0043500b3060001000600010002be00580600
0100047e00a5047e00bd047e00de06000100060001000600010006000100
060001000000004606000100060001000600010006000100060001000600
0100060001000600010004e6ffba06000100060001000600010005320039
05320039022cffba022cffba06000100060001000600010006000100049e
0034047800300430ffba0430ffba0376000a0376000a060e002907080029
02e2ffba0456ffba060e00290708002902e2ffba0456ffba05280097046f
000a03520003060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100000000310000004600000046000000400000004606000100
060001000000ffdc0000fe510000ff160000ff160000ff160000ff160000
ff160000ff160000ff160000ff160000ff160000ffdc0000ff160000ffdc
0000ff200000ffdc0473002d080000000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100028d0011028d00300600010005a0002e03c0007e01e8
00060207ffcf01bc005e01e0fffa039c0006039c000601bc005e01e0001a
05280097049e0011022cffba022cffba01bc008801e0001a053200390532
0039022cffba022cffba02be0036035200030532003905320039022cffba
022cffba0532003905320039022cffba022cffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba02be006902be006902be006902be00690376000a0376
000a0376000a0376000a073200400732004004deffba04deffba07320040
0732004004deffba04deffba0880004008800040062cffba062cffba0880
004008800040062cffba062cffba0430ffba0430ffba0430ffba0430ffba
0430ffba0430ffba0430ffba0430ffba0454003403c000460454ffba02e2
ffba0454003403c000460454ffba02e2ffba0610002f0610002f0270ffba
0298ffba04e6002704e600270270ffba0298ffba045400290454002902e2
ffba02e2ffba039c0023039c002301e0ffba01e0ffba02e2002102e20021
0352ffba0352ffba0454003e0454003e022cffba022cffba02be00580352
000303c0ffba039cffba039c0006039c000605280097046f000a05280097
049e0011022cffba022cffba0454001004c4001003e400220454001a03e4
00220454001a03e400220454001a06000100060001000000004600000046
060001000600010006000100000000460000004606000100060001000000
004800000046060001000600010006000100000000460000004600000046
000000460000004000000031060001000000004600000046060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
028d00ca028d00c7028d00c6060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010002be00690100ffba0800ffba1000ffbb
06d3005905b0005206a3009305cb008d0000fd880000fbc10000fc5f0000
fe310000fcad0000fd550000fe260000fdf10000fd180000fc690000fd95
0000fbe00000fc700000fed40000fecd0000fea0041b007806ac005c06ac
00190000fe450000fd550000fda60000fc5f0000fe250000fd180000fbe0
0000fafa0000fb360000fc700000fb870000fb9b0000fcce0000fc540000
fbc30000fc940000fbf50000fdb00000fe590000fd7e0000fc820000fd34
0000fe500000fe460000fcd10000fd3e0000fd020000fc3a0000fce90000
fc260000fc070000fc2f0000fb9e0000fb760239009305c7000004730049
05c700000473004905c700000473004905c700000473004905c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c70000047300490556
009504730041055600950473004105560095047300410556009504730041
055600950473004105560095047300410556009504730041055600950473
00410239006a0239005d0239008c023900930639005904e3005206390059
04e300520639005904e300520639005904e300520639005904e300520639
005904e300520639005904e3005206d3005905b0005206d3005905b00052
06d3005905b0005206d3005905b0005206d3005905b0005205c7009304e3
008d05c7009304e3008d06a3009305cb008d06a3009305cb008d06a30093
05cb008d06a3009305cb008d06a3009305cb008d0556fffd0473000e0556
fffd0473000e0556fffd0473000e05c70000047300490239ffca0239ffca
0639005904e3005205c7009304e3008d05c7009304e3008d05c7009304e3
008d05c7009304e3008d05c7009304e3008d0000fef90000fef90000fef4
0000feef0489fffd03550007073b001705acffff04e2009a0401008804e2
009a0401008805c7009604d5008804730001047300120473000104730012
055600000473000c059f007d04a50072059f009c04e3009205cf00590473
004c0639005604e3005205320039022cffba0270ffba0298ffba04e60027
022c0065022c0016022c0016022c0011022c0043022cffd20000fef00000
000f0000fff502aa009002aa0090000000060000005e0000005e0000ffcb
01bc000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc008801e0
001a039c0006039c0006039c0006039c000605280097046f000a05320039
05320039022cffba022cffba0532003905320039022cffba022cffba0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
0532003905320039022cffba022cffba0532003905320039022cffba022c
ffba0532003905320039022cffba022cffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba02be004f02be
004f02be006902be006902be006902be006902be004f02be004f02be0066
02be006602be006902be006902be006902be006902be002f02be002f02be
002202be00220376000a0376000a0376000a0376000a0376000a0376000a
0376000a0376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a073200400732004004deffba04deffba07320040
0732004004deffba04deffba073200400732004004deffba04deffba0880
004008800040062cffba062cffba0880004008800040062cffba062cffba
0430ffba0430ffba0454003403c000460454ffba02e2ffba0610002f0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298
ffba0610002f0610002f0270ffba0298ffba04e6002704e6002704e60027
04e60027093e0032093e00320740ffba0740ffba060e00290708002902e2
ffba0456ffba045400290454002902e2ffba02e2ffba0454002904540029
02e2ffba02e2ffba045400290454002902e2ffba02e2ffba060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e0029
0708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba039c0023039c002301e0ffba01e0ffba
039c0023039c002301e0ffb101e0ffb1039c0023039c002301e0ffba01e0
ffba039c0023039c002301e0ffba01e0ffba0454003e0454003e022cffba
022cffba0454003e0454003e0454003e0454003e0454003e0454003e022c
ffba022cffba0454003e0454003e049e0034047800300430ffba0430ffba
02be005803520003031a001a031a001a031a001a039c0006039c0006039c
0006039c0006039c0006039c0006039c0006039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c000605280042046f
ffd905280097046f000a022cffba022cffba039c0006039c000605280097
046f000a022cffba022cffba05280097046f000a067f0044067f0045067f
0044067f004501a800280000fe290000fe8c0000fec80000ff230000fefa
0000ff7a0000fe5908fc003208ad00320000ff880000ffaf0000ff3f0000
ff590000fe590000ff1501b4000002f700000000fe850000ff0704cd0032
0000ff580000ff580000ff59073200400732004004deffba04deffba0880
004008800040062cffba062cffba0454003403c000460454ffba02e2ffba
03c0007e02e2002102be0058022cffba0290ffba01f4002f01f4003b01f4
001201f400b101f4006d060e002907080029022f00870000fee003500000
045e008703e4fff50454fff503e400220454001a03e400220454001a03e4
00220454001a03e400220454001a03e400220454001a03e400220454001a
047e0072047e00bd03e4000f0454000f04e3001b06b1001e05c0009b04e3
008705c0000a04e3000a05c7006905c700610473005505c7fffd06b3001e
05c0005c04e3005404da004e055600660503006f04e3ffac063900620518
000207720092023900930239000705c70099047300890239001b0473000f
07ef009605c7ffad04e3008e063900560718005905f300550641001e04e3
008b05560095055600640473006304cd005a02e1001e02aa001f04e30018
02aa001f04e3002d066a006205c70093062900000473000e04e300160400
002204e3003a04e300590436002a04360039047300330473005b03fa001e
04a2001f04e3008b023d00b003fb00b004ad005602aa00b80aaa009409c7
009408e300540956009d071c009d047200930a3a009808000098071c0091
0473004c05c70000047300490000fefe05c70000047300490800ffaa071d
00580639006204e300240639006204e3005405c700990473008906390059
04e300520639005904e3005204e3003a043600220239ffa20aaa009409c7
009408e300540639006204e30054084300960552009505c7009804e30091
05c700000473004905c70000047300490556009504730041055600950473
00410239ff370239ff2d0239fff40239ffe60639005904e3005206390059
04e3005205c70096031dffcd05c70096031d008005c7009304e3006705c7
009304e3008d0556004a0473003004e3002c02aa001f049e002e04290049
05c7009604e30092059f009c050c0052050c005204e300160400002205c7
00000473004905560095047300410639005904e300520000fefd06390059
04e300520639005904e300520639005904e300520556fffd0473000e0473
004504e3005404e3008204e30087047300340473001404e3005404e30054
0473004c0641004c03fa004f03fa001805870018048a005202aaffc404e3
005404e3005404b000520473000f04ce000f04e3008a04e3009204e30092
0239001b0239006b033e004402a8000002d900140239009304d40093071d
0085071d0085071d007e04e3ffa604e3009104eb008c04e3005206ab0052
06c2004e05ff0052031dffe6031dffe6031dffe6031d0087031d0087031d
0087031dffe604ab008a04ab008a0473003002aaffc402aaffc402aaff9b
0451001e02aa001902aa001f04e3001b04f8004b04a80091047300120639
00090473000f0491000f0400002205700022043600220436002204730042
0473005504730042047300550639005904eb0096048a004f04b0005204d5
008803ab001e04730014039e008804e3005b0473004204730055083f0054
0789005409af00540682001f0446001f0698001f06f4001806350093058a
00930445001e0482008802f1003202f10032018effe20204003202040000
0204000003000032042f000002e2000001e7005c03cb0070023900980239
00750239009402aa00f302aa00f3030000320300003204ac005f04ac005f
04ac002a04ac002a02aa012102aa00bb02aa002a02aa012102aa001302aa
002a02aa00bb02aa00ca02aa00ca02aa00f302aa00f302aa00a602aa00a6
02aa00a602aa001302aaffe102aafffb02ed0000012100320302003202ee
000003000032031000960310009603100096031000960310009602aa0062
02aa006202aa000302aa001d040000690457009604570096045700960457
00960457004304570043045700430457004304570043031000430457002f
0457002f0457002f0457002f0457002f0310002f04570025045700250457
002504570025045700250310002f0457001a0457001a0457001a0457001a
0457001a0310001a04570042045700420457004204570042045700420310
004204570096045700960457009604570096045700420457004204570042
0457004204570042031000420457002f0457002f0457002f0457002f0457
002f0310002f0457002f0457002f0457002f0457002f0457002f0310002f
045700260457002604570026045700260457002603100026045700420457
004204570042045700420457004203100042045700960457009604570096
045700960457004204570042045700420457004204570042031000420457
002604570026045700260457002604570026031000260457002304570023
045700230457002304570023031000230457002f0457002f0457002f0457
002f0457002f0310002f0457004b0457004b0457004b0457004b0457004b
0310004b0457009604570096045700960457009604570042045700420457
00420457004204570042031000420457001a0457001a0457001a0457001a
0457001a0310001a04570024045700240457002404570024045700240310
00240457002f0457002f0457002f0457002f0457002f0310002f0457004e
0457004e0457004e0457004e0457004e0310004e04570096045700960457
0096045700960000feaf0000febf0000fdb50000fec80000ff780000feb1
0000ff3d0000fe6f0000feae0000ffce0000ff660000fe6f0000fec80000
fec80000ff680000ff680000ff68000000000000ff1f0000ff1f0000ff44
0000ff5f0000fe870000ffec0000ff9c0000ff510000ff510000ff510000
febf0000ff15000000000000feb10000ff3d0000ff6b0000fef20000ff47
0000ffce0000fe870000febb0000feae0000feae0000fec80000fec80000
fea60000febf0000fdb70000febe0000fea60000febf0000fdb50000fe1f
0000fee20000ff9c0000fe870000ff440000feba0000ff230000ff9a0000
fdb90000fe3b000000000000fea70000ff680000fe170000ff740000fe87
0000fe000000ff660000ff440000fea70000fea70000fea70000ff030000
ff520000fd1f0000ff530000ff530000ff530000feb10000feb00000ffa1
0000fe8c0000feb80000feaf0000fea20000feba0000fdf40000ff190000
ff2d0000fe8c0000fe8802aa00bb02aa002a02aa00c804e2006704a8000a
06290000080200000629000005ff005206c2004e056900140639005904e3
005205c700770473005504e30097039e008806030000043c001d066f000a
04e2000a07ef0096071d0085059f007d04e3008a059f009c04d7000a0556
0064055600640524001404d4000a05e1005504a0004b040e001403840028
0569001404f1005c047300550239ffa20639005603d4005103d400510556
009505c000990473004104eb008c0a3d0059063a001406f4001a059f001b
07ce008c065e0093055600000473000b0768008c06670093067900560607
0076089e008c07d800930503004603fa0043067900560607007606390056
04e300520685ffff052c000b0685ffff052c000b08f6005907cb00520684
0023051a00230a3d0059073500550000fe370a3d0059063a001405c70061
0473005504ac000f0000fea60000feb10000ff8d0000ff8d0000fc2b0000
fc4c05c0009904eb008c05c0001104eb001b0556009504e3008b059f009c
04c900880503002c03fa001804e200110401000d0617001a04fc00280709
009605b6008809020099075f008805c7003b049f003405c7006104730055
04e3002d03eb001506d2002c05830015059f007d04a5007206da000a056d
000a06da000a056d000a0239008c073b001705acffff059d009a04c80088
059d00200515001905c7009604d5008805c7009604d50088059f007d04a5
007206aa009105eb009b02aa001a05c700000473004905c7000004730049
0800ffaa071d0058055600950473004105cf00590473004c073b001705ac
ffff0503002c03fa00180503002c0436002205c0009904eb008c05c00099
04eb008c0639005904e300520639005604e3005205b10057046b003804fa
00000473000e04fa00000473000e04fa00000473000e059f007d04a50072
07d5009d06d5009505c0005e04e30054083e005e077a005407ad004606c4
004305430046044a0043081a002007a50019084300960766008806390062
04b000520620002d059b00150000ff430000ff290000ff6a0000ffac0000
ff590000ff560000ff730000fed70000fe5c0000005e0000ff560000ff56
000000500000ff0b0000fe550000ff430000ff5c0000ff750000ff640000
ff560000ff0b0000ff8a0000ff560000ff430000ff430000ff640000ff75
000000500000fddd0000ff750000ffad0000feef0000feef0000fefd0000
fef90000ff530000fef80000fef905c700000473004905c7009604e30087
05c7009604e3008705c7009604e3008705c700610473005505c7009404e3
005405c7009404e3005405c7009404e3005405c7009404e3005405c70094
04e300540556009504730041055600950473004105560095047300410556
009504730041055600950473004104e3009702aa00180639006204e30054
05c7009604e3009205c7009604e3009205c7009604e3009205c7004e04e3
003b05c7009604e300920239ffd20239ffd20239001b0239ffce05c70099
0473008905c700990473008905c700990473008904e3009d0239009304e3
009d0239ffeb04e3009d0239ffdd04e3009d0239ffcb06aa0091071d007e
06aa0091071d007e06aa0091071d007e05c7009804e3009105c7009804e3
009105c7009804e3009105c7009804e300910639005904e3005206390059
04e300520639005904e300520639005904e300520556009504e3008b0556
009504e3008b05c70096031d008705c70096031d008705c70096031d0087
05c70096031d00590556004a047300300556004a047300300556004a0473
00300556004a047300300556004a0473003004e3002c02aa001f04e3002c
02aa001f04e3002c02aa001f04e3002c02aa001f05c7009304e3008d05c7
009304e3008d05c7009304e3008d05c7009304e3008d05c7009304e3008d
0556ffff0473000b0556ffff0473000b078d000706390009078d00070639
0009055600000473000c055600000473000c0556fffd0473000e04e30016
0400002204e300160400002204e300160400002204e3009202aaffde0639
00090473000e047300490239008d04eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e04eb004e05c7000005c7000006f3fff206f3
000006f3fff206f3000006f3004306f3004303cc004e03cc004e03cc004e
03cc004e03cc004e03cc004e061efff2061e000007aefff207ae000007ae
fff207ae000004e3008e04e3008e04e3008e04e3008e04e3008e04e3008e
04e3008e04e3008e068ffff2068f0000081ffff2081f0000081ffff2081f
0000081f0014081f001402390093023900930239ffb60239ffc40239ffde
0239ffec0239ffb30239ffc00301fff2030100000491fff2049100000491
fff204910000049100140491001404e3005204e3005204e3005204e30052
04e3005204e30052069dfff2069d00000855fff20855000007c9fff207c9
000004a8007604a8007604a8007604a8007604a8007604a8007604a80076
04a800760682000007fe00000862000007aefff306c2004e06c2004e06c2
004e06c2004e06c2004e06c2004e06c2004e06c2004e06cefff206ce0000
0886fff20886000007fafff207fa000007fafff307fafff304eb004e04eb
004e03cc004e03cc004e04e3008e04e3008e0239ffe70239008d04e30052
04e3005204a8007604a8007606c2004e06c2004e04eb004e04eb004e04eb
004e04eb004e04eb004e04eb004e04eb004e04eb004e05c7000005c70000
06f3fff206f3000006f3fff206f3000006f3004306f3004304e3008c04e3
008c04e3008c04e3008c04e3008c04e3008c04e3008c04e3008c068ffff2
068f0000081ffff2081f0000081ffff2081f0000081ffff3081ffff306c2
004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e
06cefff206ce00000886fff20886000007fafff207fa000007fafff307fa
fff304eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e
05c7000005c7000005c7ffd105c7ffdd05c7000002aa00dc02aa00ca02aa
00dc02aafff302aafff304e3008c04e3008c04e3008c04e3008e04e3008c
06e6000006e60000075700000757000005c7009602aafff202aafff202aa
fff30239ffe50239ffdb0239ffce0239ffce0239ffc20239ffbb0239ffe8
0239ffde03c9000003c9000002aa000002aa000002aafff304a8007604a8
007604a8007604a8007604f3007604f3007604a8007604a800760556fffd
0556fffd06e6ffd8074affdd061e000003b8fff403b8fff402aa002a06c2
004e06c2004e06c2004e06c2004e06c2004e0765ffd1069dffdd0796ffd1
06ceffdd066a006202aa00bb02aa00dc0473000a05c7006105c70061071d
007e05c7002109cd0096078d000705c7002004e3002d08b0001404000030
04c100660000ff530000ff530000ff530000ff530239001b0239ffa20473
00000556001206b3005403fe005706ab0091040c001f05d6ffe605d6ffe6
02aa008402aa008402aa00c902aa00c902aa009102aa002a02aaffc502aa
ffc302aafff302aa00c902aa00a902aa00a902aa00a902aa00a9032e001e
032e001e02aa003a0000ff730000ff9d0000fec80000ff230000ff720000
ff720000fee70000ff9d0000ff530000ff530000ff530556009504e3008b
04b5000006350000071d006104eb000f04730055049900910499001b0401
008c03fa001802390093040f00490476008e039e000e05eb009b04eb008c
04e300520473003404f1005204f1005204f10021078d00540492004b04e3
005304e3005304e9008c04abfffb04abfffb03eb001504a8007604e30051
0624005104e000510473000b063900090400002203df002203f2004b04ec
0014035500880473001204d5008804e9008c060700760515001903e30000
0591000003a2003203a2000003a30032035500320355003204030032037c
00320172005502de003203b00032031e0032042200320377003203780032
04260032037a0032035b003203ac003203770032037b0032051400000305
0032030500320321003204b6003203210032032100320302003203020032
02cf003202cf0032032000320121003202ca00320484003402f200320348
0032030a003203490032034900320320003201bc000a02f2003203420032
0484003202e90000034c000a031b003202e900000343003203da00320308
0000012100320204003202f2003202e90000031b003202e9000003420032
03da003203080000077d00460a98004602a700460a7800460541ffba01e9
001e045400100000ff0d0000ff350000fece0000feb70000fec90000ffc7
0000ff4f0000ff9e0000fef002be006902be00690376000a0376000a03c0
ffba039cffba03c0ffba039cffba05c8003905920032061600820519004b
05240041060f008705580028068f002d04ac005500000000000000000000
00000473fffc0400008403d5ffba01e0ffba01e0ffb101e0ffba01e0ffba
06d0002e098400230400000008000000040000000800000002ab00000200
0000015500000473000002390000019a000000ab00000000000005e5fff7
05c7006106aa009105eb009b0760008d07a1005407a1005b05c7000005c7
00610473001404e3001104e3002c04730039040000220529004200000101
0000ff420000fead0000ff3a0000ff5304f3000a05c7006905c7006105c7
0069048900a4035500880000ff430000ffac0000ffac0316007d00000000
0298ffba033d001e0000ff3a0000ff480000ff490000ff7e0000ff4f0000
ff4a0000fe9e0532003905320039022cffb6022cffb60532003905320039
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba0532003905320039022cffba022cffba049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
02be004f02be004f02be006902be00690376000a0376000a073200400732
004004deffba04deffba0454003403c000460454ffba02e2ffba04540034
03c000460454ffba02e2ffba0454003403c000460454ffba02e2ffba0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
060e00290708002902e2ffba0456ffba060e00290708002902e2ffba0456
ffba060e00290708002902e2ffba0456ffba02e2002102e200210352ffba
0352ffba02e2002102e200210352ffba0352ffba0454003e0454003e022c
ffba022cffba0454003e0454003e022cffba022cffba0454003e0454003e
022cffba022cffba039c0023039c002301e0ffba01e0ffba0376000a0376
000a0376000a0376000a073200400732004004deffba04deffba04e3ffc1
04e3005402aafff3071dffc104e3ffd504e3ffc5031dffc1031dffc10473
ffff02aaffda0400002104e3008302f0003204dc004e06fb001f0239001b
0239001b04e3001404a8001404f8001404e3008704e3005402aa00180625
00540473008902390070071d007e04e3009104e3008b031d006604730030
03baffc40473000b0473000c040000220473004904e3005404e300540473
004103fa004f03fa0018053e0051023900930473003402aaffc404e3008d
0436002203210032030a0032030a00060348003202cf003201f0000a01f0
00000320003202f100320174000a01210032012100320174000a02760000
018e003201500032024900320484003404840032035f0000035f003202fa
00320348003204030032030200320239000001bc000a0340000a035e0032
02ea003202ea003202e9000002e4003202e4003203be0032030a003202e8
00320000fe920000fe920000ff730000fe9f02aa00c90305003203020032
0348003202ee0000030200320639006205c700000556001e05c7006102aa
004104eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e
04eb004e0239ffb60239ffb60239ffc40239ffc40239ffb60239ffb60239
ffc40239ffc404a8007604a8007604a8007604a8007604a8007604a80076
04a8007604a800760239ffc90239ffc90239ffc90239ffc904a8007604a8
007604a8007604a8007603e400220454001a03df003005c7fffd05c70016
055600000556009504730041047300230239ffa20633005904e3005b05c7
0000031d001b0556fffd0473000e04730034047300550473003402390093
048900110355001b055600000473000c055600000473000c0503006f03fa
004f059d0020051500190000fec60000fed40000fec60000fed40000fe5f
0000fe5f0000ff720000ff730000fee7080000000401005d0473003404e3
00110239001b04e300060556fffd05c700960473004902aaffcd05c70096
04e3009205c700990473008904e30016040000220473002804540096037c
008805b9004e0000ff530000ffbc0000fefe0000fefe0000fea40000fea4
0239009305c9009c05c7009805c9009c0000fee00000ff300000fed40000
fed50000fec00000fed00000fed80000fed80000fed80000fed80000fdc6
0639005904e3005b078d00070639000905b900910000fe9b061b005904d9
0006085b000706de000602aa00c9031c005501e7005c01e7005c04000099
0400009902aa00b802aa00b802aa00b802aa000300000046000000360000
00310000005600000044000000560000004a0000004904e3002c0473002b
04a3005c0379003f048800480453003e04870031045f003e048b005c0433
004004730053048f005c046f00560381003b0481003c04810056049b0032
0481005004890062043b004b04730053048a005505a3005005d3005905d9
0096092a009605d9008c0316003b059800990639005904e30054021d0082
047000820277008204e300540250000f04e3008a0473005c047300620316
003b027700820239009304d0000004ee009804c7005c04f1009804860098
04290098053d005c051200980250009803d0002904f40098042c00980628
0098050c0098054a005c048c00980553005c04f60098047b004a04190029
04eb00900492000a0651001404a2001204a600080429001f06cc000006b9
005c042c00380548003e048d009804f10024050f008e04d0000004d00000
04d0000004d0000004d0000004d0000004c7005c04860098048600980486
0098048600980250fff9025000900250ffd70250ffde050c0098054a005c
054a005c054a005c054a005c054a005c04eb009004eb009004eb009004eb
009004a6000804d0000004d0000004d0000004c7005c04c7005c053d005c
04f1009804f100240486009804860098048600980486009804860098053d
005c053d005c04c7005c05120098051200360250ffd00250ffe50250fff1
025000570250009805d8009803d0002904f40098042c0098042c0098042c
0098042c0098050c0098050c0098050c009805000098054a005c054a005c
054a005c04f6009804f6009804f60098047b004a047b004a047b004a047b
004a0419002904190029041900290419002904eb009004eb009004eb0090
04eb009004eb009004eb00900651001406510014065100140651001404a6
000804a6000804a600080429001f0429001f0429001f04d0000006cc0000
0548003e04d0000004ee00980417009804d00000048600980429001f0512
00980549005c0250009804f40098047afffb06280098050c0098043a004c
054a005c05000098048c0098041e00430419002904a600080583004c04a2
0012056f004c055c005c04d00000048600980512009802500090054a005c
04a60008055c005c0250ffde04a600080486009805d500290417009804ca
005c047b004a025000980250ffde03d00029072c0003074b0098058a0029
047b00980455001904fc009804d0000004ed009804ee00980417009804e1
000f048600980699002304560046050c0098050c0098047b009804b50001
0628009805120098054a005c05000098048c009804c7005c041900290455
0019059e004c04a200120507009804bf006406c2009806d6009805c00028
06b2009804bb009804cb004906e1009804f600090364009802aa003502aa
005b02aa001902aa002802aa001202aa002202aa003502aa003302aa002c
02aa002f02aa003502aa002f02aa003505a3005005a3005005a3005005a3
005005a3005005a3005005a3005005a3005005a3005005a3005005a30050
05d3005905d3005905d3005905d3005905d3005905d3005905d3005905d3
005905d3005905d3005905d3005905d9009605d9009605d9009605d90096
05d9008c05d9008c05d9008c05d9008c05d9008c05d9008c05d9008c05d9
008c05d9008c0316003b0316003b031600390316003b031600310316003b
0316003b0316003b0316003b044dff890316003b0316003b0316003b0277
00820277000903070082032600820277fff90316003b0316003b03160039
0316003b031600310316003b0316003b0316003b0598009904e3005404e3
005404e3005404e3005404e3005404e3005404e3005404e3005404e30054
021dffbc04700082027700820277000903070082032600820277fff90250
000402500008037a000f0250000f04e3008a04e3008a04e3008a04e3008a
04d60049047b004a04c7005c053d005c02aa001202aa002202aa003302aa
002c05a0002e04ed009d04ed009d069b002a04d5008505e30085023200a3
023200960232004e023200200232006702320031023200390232001e0232
001e023200420232001c023200250232002e023200170232000b0d650046
0e3200460000ffba0f6200460000ff640000ff9a0000ffb40000ff9c049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
073200400732004004deffba04deffba0376000a0376000a049e00340478
00300430ffba0430ffba01bcffcc01e0ff6801bcffe601e0ff8205280097
046f000a022cffba022cffba05280097046f000a022cffba022cffba0528
0097046f000a022cffba022cffba039c0006039c0006039c0006039c0006
067f0044067f0045067f0044067f0045049e0034047800300430ffba0430
ffba073200400732004004deffba04deffba073200400732004004deffba
04deffba045400290454002902e2ffba02e2ffba044dffcb04a5ffcc043e
ffd504a2ffcd07b9003205ef003207230032051700350bdefeed0000fe2c
0000fffc0000006b000000730000006b05280097046f000a022cffba022c
ffba060e00290708002902e2ffba0456ffba060e00290708002902e2ffba
0456ffba05280097046f000a022cffba022cffba05280097046f000a022c
ffba022cffba05280097046f000a022cffba022cffba0000fff504540096
03b3000a04e3002c04ae001405c000990513008c05c7009904e3006a0a66
00440476001f0556001c0826002006e9001906780095066b008b07f90004
06e9fffb05c700990476008e08dc002007940019090500960753008805c0
009904d50088059f009c04e3009202aa001802aa001804da004e06b9008c
041a00180514005904da005305a300280538000006aa009105c70004061b
009d059a0041031dffe604e3005204010049018effe202e900000556004a
04e3001602390047079300ec0b3dffaa08d200000b4700380f6200440196
ffba0196ffba0196ffba01e0000201a8003201a800460196ffba01a8001a
0251003a01a8002901a800460196ffba01a800480196ffba01a800290196
ffba01a800460196ffba01a8006e0196ffba01f4006501f4001601f40016
01f4001101f4ffd2022e008d01f400430199004602bf004d02bf005504c3
000a02f8001a02f8001a0463000304630003056200060562000605620006
0562000605620006056200060562000605620006046c000a046c000a043a
ffba046c000a046c000a043affba0532003905320039022cffba022cffba
049e0034047800300430ffba0430ffba0430ffba0430ffba0430ffba0430
ffba0610002f0610002f0270ffba0298ffba04e6002704e600270270ffba
0298ffba039c0023039c002301e0ffba01e0ffba02e2002102e200210352
ffba0352ffba05280097049e0011022cffba022cffba05280097049e0011
022cffba022cffba0339001903390019039c0006039c0006036b002f036b
002f0000ff1e0000ff480000ff1e0000fee70000ff4f0000fef90000ffb5
0000ff520000ff470000ffb50000ff520000ff470000ff000000fea60000
ff000000ff230000ff240000ff570000ff570000ff920000ff920000ff92
0000ff920000ff2f0000fed70000ff340000ff3103e400220454001a0000
ffac03a7000a0466003204ea00820563002d0000ffac0000ff2a028d00ab
028d00a00479001904790019047900190479001904790019047900190479
0019047900190479001904e60027028d00ab0327002202300014017a002e
0000ff7606d0002e05e6009605be009605f3006405e6005a05be009605d6
008c057a00a005be00960747009505f30064058c00a004a800a0078800a0
062c006705aa008c052f003c05c0008205e6005a05e6008b0622009605f9
008205e5000005a6007805be0096059a006e06cb00500627009606220096
05be009605e6005a057000640582009605f90082044100a006ea0064061a
000a065500640699005a023900750239007501ccff8d0201ffc102650066
0230ffaa041c00420734008c04e500910565005a055d009104ea009104f2
005a04b70091050f0091063900910565005a04e50091023b009107350091
04da005a04ea009104e50091048e004804ea009104df007a04e5008c023b
ffa604eaffab0425003204e50091031700180734008c0492006e04d00091
04e5008c04e5008c072f008c04e4009104f7005a03900091072f008c04e9
000004fb005a06a30032063f009102aa00c9032400220804006c0804006c
05f9005009cf008c09cf008c09cf008c09cf008c0c1a008c047300140800
0000000000000000ff4d0532003905320039022cffba022cffba01560088
02be006902be00690880004008800040062cffba062cffba060e00290708
002902e2ffba0456ffba02ad003901e900390376000a0376000a0000ffce
0473002305c7ffab04d5ff9d0b9dfffa099afff90621000005060000059d
00200515001907670032073800500522001807560018074d001805350018
06e10030069700870454003403c000460454ffba02e2ffba045400290454
002902e2ffba02e2ffba0000ff53026c007801da00640265007801e90064
05c7009604e3009206d3002c05c5001f0480003c0480003c044800280448
0028051000280510002804290098047b004a09af000006fe004909890000
0769004908d300000733004907cc0000065c004907cc0000065c004907cc
0000065c004905c700750473004b05c7000c0473001905c7009904730089
05c7000c04730019060b009d0359009304e30016023900050731001e055b
001407090059058b00520a950059081000520556001304e3000d06dc000a
06250014079a001406da00140675005904e3005b07e50059062d005b04e3
001403bb001e052a0041052a00410556ffff0473000b078d000706390009
04ad003c045d003c0556001304e300120556001304e3000d04a3008c03df
008b03b7005003b700500474002804740028049600410496004102ad002d
06460054039400930880007e06460091031d0087063c00980604000a041e
003c0639000e04e300530400009c031d008704b8005004e4005004e40050
04e3003e023900930686009c053400910400009c031d00870564005a0471
005a05c700960458001e0614009804fc009105c7ffe00473000704730055
04e30092074d000a067e0050054d000a02aa001805a6005a04ba005205e0
005a04b7005205a6005a04ba00520639001404e3fffa05c7000a0473000a
05c7000004e3000a05c70014031d00140556001f0473001b06b4001e04d5
002c061b0059062e001e05c7001704e3002c0431001e063a002f05c70096
04e200900819005a06c2004e05e20014039afff105210032071d007e04e3
00650556006206aa00910239008c0967000204ebffe7070500580404004f
04730005056d000a02aa001804e3005403e40028032c003c02fb0028075f
007e04f8009104e30091049a0057049a005704e30067078d0058078d0059
078d0059081000520810005204b1003c0507009802f80087047700870415
0028056f0028043300500647005002aaffc404e3008d04e3001b071d007e
071d007e05290014049b0011052f001404dd001404cf000c04bcff380518
ff3804bcff27044c000e02aa001a02f100320290001402560014038c0014
06d5009506750093078d007107c7008d04e30054055c005c05c7009604e3
002c0532003905320039022cffba022cffba0532003905320039022cffba
022cffba05320039053200390319ffba0319ffba0376000a0376000a0528
0097049e0011022cffba022cffba0610002f0610002f0270ffba0298ffba
04e6002704e600270270ffba0298ffba0454003e0454003e022cffba022c
ffba0000fecf0000fef60000ff300000fdea0000fe6d0000ff430000ff11
0000ff070000ff070000fd5d0000fc330000fc4c0000fd3c0000fe040000
fd9b0000fef90000fe6703fc00ee098200420042000000>
<000000000000006c0000006c0000006c0000006c0000011a000001ba0000
0388000006300000079600000948000009a800000a3200000abc00000bf0
00000c6c00000cdc00000d2a00000d6800000dbe00000ec200000f440000
10ea000012420000135c000014ce00001602000016be0000185c000019a2
000019fc00001a8800001b1200001b9400001c2200001d1000001ea40000
201e00002186000022c0000023aa00002468000025040000264a0000271e
000027a60000284400002a0e00002a6a00002cbe00002ebc00002fc40000
30940000322e00003392000035f20000368800003768000038a200003ae4
00003c6000003d5600003ee800003f5c00003fb000004018000040ca0000
40fe00004162000043700000446c000045a800004698000048a4000049a4
00004b8000004c8000004d2200004dfa00004f2600004f92000051460000
5230000053200000541c0000551e000056020000594800005a6800005b50
00005ca400005ec00000609600006214000063a2000064ca000065300000
66680000673000006772000067a2000067de000068240000686c000068bc
000069000000693a0000696a0000699a000069dc00006a1e00006a500000
6a9400006ae000006b2a00006b5a00006ba000006bdc00006c1c00006c58
00006c9000006ce000006d1c00006d5800006d8800006dca00006e1a0000
6e6400006e9c00006ede00006f1200006f8a00007010000071bc00007328
0000751e0000756800007602000077500000794000007af400007c0e0000
7c7000007cc800007da800007eda000080520000817a0000824000008316
000083d60000857a0000863600008718000087f60000885c000088f00000
89b400008af000008b8800008cc800008f6a000090f0000091f600009296
000092f0000093d00000957e000096ea00009794000098880000996e0000
99e200009a1a00009a6000009a9e00009c1a00009e3000009e6a00009ea0
00009f680000a03c0000a0ac0000a0ca0000a16c0000a2460000a2820000
a2bc0000a3220000a4ba0000a5580000a5ea0000a7460000a8700000a95a
0000a9980000a9a80000a9c60000abd00000ac120000ac600000ac9c0000
acdc0000ad2a0000ad680000ada60000ade00000ae220000ae5a0000ae8a
0000aec40000af080000af380000af800000afe20000b04e0000b0fc0000
b1300000b1a00000b1e60000b29c0000b3360000b3ca0000b4320000b48e
0000b5620000b62e0000b65e0000b68e0000b6f20000b7480000b7d00000
b8fa0000ba720000baa80000bad80000bbe00000bcb40000bcf00000be86
0000bf040000c0120000c1460000c2f20000c4800000c6c80000c77e0000
c7c20000c8020000c8340000c8780000c8b40000c8f80000c9320000c964
0000c9960000cac60000cafc0000cb260000cb720000cbb40000cbda0000
cc000000cc360000cd740000cd8c0000cdb20000cdd80000ce160000ce46
0000ce760000ceb40000cf720000d0240000d0580000d0900000d0cc0000
d10a0000d1580000d18a0000d1bc0000d1f80000d2340000d2700000d2ac
0000d2de0000d30e0000d33e0000d3640000d3880000d3c60000d53a0000
d57e0000d5b60000d5ee0000d6240000d6740000d6b60000d6fc0000d74e
0000d79a0000d8ac0000d9b80000daa00000db900000dc960000dd800000
ddf00000df1a0000df6a0000df9a0000e0940000e2c80000e31a0000e35a
0000e3ac0000e3ea0000e4620000e4c00000e53a0000e55a0000e5fa0000
e6940000e6ca0000e72e0000e7780000e7c20000e7de0000e7fa0000e81a
0000e83a0000e85a0000e87a0000e8a00000e8c60000e8ec0000e9120000
e9420000e96a0000e9920000e9be0000e9ea0000ea1e0000ea480000ea74
0000eaaa0000ead40000eb000000eb360000eb600000eb8a0000ebbe0000
ebee0000ec220000ec660000ec960000ecca0000ed0c0000ed400000ed72
0000edb40000ede80000ee180000ee5a0000ee9e0000eee40000ef400000
ef5c0000ef780000ef940000efb00000efcc0000f13a0000f3e40000f654
0000f6700000f68a0000f6a60000f6c20000f6de0000f6fa0000f7560000
f7900000f7fa0000f8c40000f9640000fa3a0000faba0000fb420000fbb2
0000fc480000fca60000fcec0000fd4a0000fdac0000fdec0000fe480000
feac0000ff1e0000ff5c000100ee000101fe0001023e0001025a00010286
000102be0001030a0001033a0001036a0001039e000103ce000103fe0001
042e0001045e0001048e000104be000104ee0001051e0001054e0001057e
000105ae000105de0001060e00010634000107e200010812000108420001
092e00010a4600010a7600010aa400010ad400010b0200010b3200010b60
00010b8400010ba800010be200010cc200010ce800010d0e00010e540001
0e7a00010e9e00010ec400010eea00010fc0000110b8000110e800011118
00011148000111780001119e000111c2000111f200011222000112e40001
13f8000114280001145800011488000114b8000114e8000115180001153e
0001156400011594000115c4000115f400011624000116c4000117160001
17e4000118140001184400011874000118a4000118d60001190600011936
0001196600011996000119ca000119fe00011a2e00011a5e00011abc0001
1ae600011c6c00011d5400011f080001215c000123940001253200012592
0001261800012628000126ea0001288e0001296200012a3800012ac40001
2be800012cfc00012e6e00012ea400012eb400012ec400012f9e00012fae
00012fbe00012fce00012fde00012fee000130f400013104000131140001
31be000131ce000132200001323000013324000133340001334400013354
000134260001354000013574000135a8000135d800013608000136380001
36660001369a000137840001387a0001395a00013a2400013ae400013b36
00013c6800013d7c00013e4000013e5000013f5c00013f6c000140360001
4114000141dc000142fa000143c6000144c4000144f60001452a0001455a
0001458a000145ba000145ee000146d00001470000014824000148340001
484400014878000148880001498e00014a7a00014b4800014b7800014ba8
00014c2800014c3800014cee00014cfe00014d5600014df400014e040001
4fe60001510a00015230000152600001538a000154020001541200015422
000154320001548600015496000154a6000154b6000155ae000156ac0001
56bc00015728000157b60001583e000158dc0001599a00015a8200015b3c
00015c6600015d8c00015eca00015eda00016000000160ee0001614c0001
621c0001622c000164120001656400016648000166780001678e00016818
000169d200016a5800016a6800016ad200016ae200016af200016b5c0001
6b6c00016cc000016cd000016d5a00016de600016e7600016f2600016fe2
000170e2000171a0000172a6000173b2000174e000017514000176500001
767e00017794000177a4000177b4000177e6000177f600017902000179e6
00017ae400017b1e00017b4e00017bee00017c4c00017cbc00017cf80001
7e8e00017f1200017f840001808200018108000181a2000181e400018250
000182f0000183140001834a0001838c00018438000184760001849c0001
84d4000184fa0001854800018586000185c4000186200001877600018818
0001892e0001898c00018a2800018a6600018b2000018b9600018c940001
8cce00018d5800018e1400018eb600018f3c0001900800019046000190ce
0001919c0001927a00019342000194500001950600019612000196c40001
974c0001984c000199340001998c000199e400019a3800019a8600019b1e
00019c2a00019c4200019c5a00019c7200019c8800019ca400019d840001
9dbc00019dea00019e2200019e5000019e8200019eb400019f2e00019f84
0001a0e20001a1820001a2a00001a3500001a39c0001a4f20001a5a20001
a5cc0001a6480001a6900001a7c80001a8c60001a9340001aab60001ac74
0001adda0001aee80001af120001b0a20001b1e00001b1f80001b2100001
b2280001b2400001b3ae0001b3d80001b4e80001b59a0001b64a0001b6de
0001b7ac0001b8e80001b8f80001b92c0001b9ec0001bba40001bc7c0001
bce60001be0c0001be6a0001bf7c0001c04a0001c0d60001c1540001c230
0001c3700001c46a0001c5200001c60c0001c6d40001c7b20001c8820001
c9600001c9d80001cc040001cc2e0001cc580001cc680001cc920001cdcc
0001ceea0001cffa0001d0240001d04e0001d0780001d0a20001d0cc0001
d0ec0001d1160001d1400001d16a0001d1940001d1be0001d1e80001d212
0001d23c0001d2700001d29a0001d2c40001d2ee0001d3060001d31e0001
d3340001d34a0001d3740001d39e0001d3c80001d3f20001d40a0001d684
0001d69c0001d6b40001d6cc0001d6e40001d8420001da260001db280001
dcae0001de780001e0cc0001e23a0001e42e0001e43e0001e44e0001e5b2
0001e5dc0001e6060001e6300001e65a0001e6840001e6ae0001e6d80001
e7020001e72c0001e7560001e7800001e7aa0001e7d40001e7fe0001e828
0001e8400001e8620001e87a0001eaba0001ead40001eafe0001eb280001
eb580001eb880001ebd80001ec280001ec680001ecda0001ed2e0001ed8c
0001ede20001ee180001ee5a0001eea00001eeea0001ef1a0001ef520001
ef820001f0e80001f42e0001f4580001f4820001f4ac0001f4d60001f500
0001f52a0001f5540001f57e0001f5a80001f5d20001f5fc0001f6260001
f6500001f67a0001f6a40001f6ce0001f6f80001f7220001f74c0001f776
0001f7a00001f7ca0001f7f40001f81e0001f8480001f8720001f89c0001
f8c60001f9cc0001f9e20001fa0c0001fa240001fb2e0001fb580001fb82
0001fd640001ff380001ff500001ff6800020110000202a80002051a0002
075a000208d2000208e20002098e00020a3800020a5000020a6800020a7e
00020a9400020c3600020e1e00020e3600020e4e00020e6600020e7e0002
0e9600020eae00020ec600020ede00020ef600020f0e00020f2600020f3e
000210300002118e0002123a0002124a000212620002127a000212920002
12aa0002134e0002135e000213760002138e000214580002146800021480
000214980002165e0002166e000217dc000217ec000218040002181c0002
18340002184c000219c8000219d800021b0a00021b1a00021b3200021b4a
00021b6200021b7a00021ce800021cf800021d0800021d1800021d300002
1d4800021d6000021d7800021ec80002200000022118000222120002222a
000222420002225a000222720002228a000222a2000222ba000222d20002
22ea000223020002231a000223320002256c0002257c0002258c0002259c
0002270600022716000227e8000227f8000229300002294000022a260002
2a3600022a4e00022a6600022a7e00022a9600022bbc00022bcc00022d3a
00022ee80002301800023028000231a2000232e400023504000236d60002
36ec000237020002372e0002375a00023770000237860002379e000237b4
0002397200023acc00023af600023b2000023b3000023b4000023b6a0002
3b9400023bbe00023bce00023bde00023c0800023c3200023c4200023c52
00023c7c00023ca600023cd000023ce800023d0800023d2200023d440002
3d5400023d6c00023d9600023da600023db600023de000023e0a00023e34
00023e5e00023e8800023eb200023edc00023f0600023f3000023f5a0002
3f8400023fae00023fd8000240020002402c0002405600024080000240aa
000240d4000240fe00024128000241520002417c000241a6000241d00002
41fa000242240002424e00024278000242a2000242cc000242f600024320
0002434a000243740002439e000243c8000243f20002441c000244460002
44700002449a000244c4000244ee00024518000245420002456c00024596
000245c0000245ea000246140002463e00024668000246920002473a0002
477e000247f40002481e00024848000248720002489c000248c6000248f0
0002491a000249440002496e00024998000249c2000249ec00024a160002
4a4000024a6a00024a9400024abe00024ae800024b1200024b3c00024b66
00024b9000024bba00024c6c00024ca000024cd400024d0800024e8c0002
500c00025178000252c60002538600025448000254ba0002558c0002565e
000256d000025794000258860002594a00025a3c00025ae200025bee0002
5c8000025dc800025f0600025f6a0002609200026260000264a800026514
00026580000265ea0002665600026704000267b200026858000268fe0002
69a4000269d400026a0400026a3400026a4600026a5800026a6a00026a7c
00026a8e00026afe00026b7000026ba000026bb200026bc400026bd40002
6be400026bf600026c0800026c1a00026c2c00026c3e00026c5000026d5c
00026e0200026f0e00026fb40002700c0002703200027058000270820002
70b0000270fa0002715600027190000271e80002722800027278000272b0
000273060002734800027388000273da0002744c00027496000275020002
7542000275ae000275ee0002765600027698000276ec0002771200027738
0002776200027792000277c2000277f2000278400002789c000278da0002
79340002797c000279d200027a1600027a6a00027ab000027af200027b18
00027b4e00027b7400027b9a00027bc000027be600027c1400027c3e0002
7c8800027ce400027d1e00027d7600027db600027e0a00027e4200027e92
00027ed400027f1400027f4e00027f8a00027fc600028002000280300002
805a00028098000280c8000280ee000281140002813a000281600002818a
000281b4000281f40002824000028286000282be000282e8000283120002
83420002837200028398000283be000283e8000284120002844400028476
000284a6000284d600028506000285360002856600028594000285c40002
85f4000286240002865400028688000286e80002871c00028780000287b4
0002881400028848000288ac0002895400028a2400028b3a00028c0c0002
8c8600028cf400028ed6000290a0000291c0000292d2000294160002952a
000295ba0002963a000296ce0002975000029810000298b00002997c0002
9a6200029b1a00029be600029c6200029c7200029d4000029e0000029eca
00029f7e0002a01a0002a0900002a1b80002a2d20002a45a0002a4dc0002
a5cc0002a6c20002a7ba0002a84c0002aa5e0002abee0002ac740002adf6
0002ae620002aecc0002af4e0002b1140002b2dc0002b36c0002b3b80002
b3f60002b4380002b4800002b4ac0002b4f20002b5280002b5640002b5a2
0002b5e00002b6680002b6f00002b7320002b76a0002b7a40002b7de0002
b8060002b82e0002b8720002b8b60002b8f40002b9320002b9620002b992
0002b9b80002b9de0002b9fe0002ba1e0002ba3e0002ba5e0002bab60002
bb0e0002bb6a0002bbc60002bc220002bc7e0002bccc0002bd1a0002bd42
0002bd6a0002bd900002bdb60002bdfa0002be3e0002be8a0002bed60002
bf200002bf6a0002bfb80002c0060002c0460002c0e60002c10c0002c132
0002c17c0002c1ec0002c2140002c23c0002c2820002c2c80002c31e0002
c3740002c3c20002c47c0002c4a40002c4cc0002c5200002c5740002c5b4
0002c5f40002c61a0002c6400002c6a60002c70c0002c74e0002c7900002
c7b60002c7dc0002c8320002c8880002c8e40002c9400002c9940002c9e8
0002ca360002ca840002cace0002cb180002cb720002cbcc0002cc200002
cc740002ccb60002ccf80002cd960002ce340002ce7e0002cec80002cf1a
0002cf6c0002cfd20002d0380002d0900002d0e80002d1140002d1400002
d16c0002d1980002d1c40002d1f00002d21c0002d2480002d26e0002d294
0002d2c00002d2ec0002d33a0002d3880002d3d40002d4200002d4700002
d4c00002d53a0002d59c0002d6140002d65e0002d7f00002d8240002d858
0002d88e0002d8b20002d8d20002d8f20002d9740002d9dc0002da240002
da6c0002dab80002db220002db4a0002db720002db980002dbbe0002dc0e
0002dc5e0002dcf20002dd440002dda20002ddba0002de200002de380002
df1e0002e02e0002e0fc0002e1f60002e2620002e2c80002e3260002e388
0002e40e0002e4940002e4fa0002e5600002e5cc0002e6380002e68e0002
e6e40002e7160002e7480002e76e0002e7940002e8000002e8660002e8c4
0002e9260002ea380002eb440002ec520002ed560002ed7c0002eda40002
edc80002edec0002ee140002ee3c0002ee620002ee880002efaa0002f0e6
0002f2140002f3400002f3fa0002f4b40002f5740002f6340002f7180002
f7fc0002f8f80002f9f40002fad80002fbbc0002fc920002fd680002fdb2
0002fdfc0002fe220002fe480002fe680002fe880002fea60002fec40002
ff9a0002ffaa0002fffe000300520003007200030092000300b2000300d2
0003011c0003016600030186000301d6000301f600030216000302680003
0280000302fa0003033c000303800003040e0003049c0003064e0003065e
00030698000306d20003070200030732000307660003079a000307d40003
080e00030862000308b6000309180003097a00030b2a00030cb200030cee
00030d2600030d4200030d5e00030da400030dea00030e3a000310600003
1086000310ac00031100000313aa0003147c0003151800031566000315a4
000315d6000317c400031a8000031b2e00031c9200031dcc00031e780003
200e000322620003249e0003251200032586000326180003270a00032728
000327a2000328c8000329a4000329b600032b1600032c9c00032cc20003
2d8000032d9e00032dc400032dea00032e1000032e3600032e5600032e76
00032e9600032eb600032ed600032ef600032f1600032f34000330920003
326e0003327e0003334e0003345e000334bc000335d40003376200033808
0003394e000339a0000339f200033a2a00033a7600033aa200033ae80003
3b1400033b5000033baa00033bf400033c4000033cb000033d7600033df2
00033eb200033f2a0003400400034094000340ce0003410a000342820003
4372000343bc000344020003454c0003465c0003466c000347760003485c
0003496e00034a3a00034b5000034c8e00034c9e00034d7600034e380003
4f3800035092000350f200035276000352ea0003543e000355a60003568a
000356dc00035744000358ce00035a4400035acc00035c7000035d600003
5e8400035f2600036010000360fa000361f2000362da0003640c00036552
000366f4000368b0000368c0000369c400036af600036ba000036cb40003
6d4000036eb000036f780003706a000371b8000372d000037476000375b6
000377080003782c000379de00037b6600037c6000037d3600037e920003
7f5200037f8800037ff0000380c4000380d40003813400038190000381ea
0003822200038260000382aa000382e6000383240003836e000384800003
84d20003852e000385da0003860200038672000386a2000386d40003887e
000389a4000389de00038a0e00038a5a00038a8c00038ab200038ad80003
8b1a00038b5c00038b8c00038bbc00038c0000038c4600038c8400038cbe
00038cf800038d2800038de400038e9e00038ee000038f1000038f440003
8f8000038fb000038fe00003901a0003905200039082000390b6000390ea
000391120003914200039172000391a6000391de0003920e0003923e0003
927e000392b0000392ec0003931e0003935e00039398000393c8000393f8
0003941e000394440003946a0003949a000395b2000396b0000396e00003
9712000397b60003995c00039ac600039bb400039d1e00039d4e00039d7e
00039db600039dee00039e4000039e9c00039f8e00039fb60003a0240003
a0540003a0840003a0ac0003a11e0003a14e0003a1840003a2e40003a3a6
0003a4820003a5a60003a69e0003a7ee0003a90a0003aa280003ab2c0003
ac8e0003ae340003afcc0003b1d80003b30e0003b3a80003b5160003b526
0003b5f40003b7b60003b9b80003ba6a0003bb480003bc620003bd120003
bd6e0003bdc80003be9e0003bf840003c0140003c18c0003c28a0003c38c
0003c4c00003c59e0003c6840003c7240003c82e0003c9560003ca4a0003
cb320003cbae0003cc2a0003ccd60003cd880003ce660003cedc0003cf30
0003d0a20003d2220003d4200003d4e40003d5b60003d69e0003d7d40003
d8a00003d9a80003dac20003dbaa0003dc7a0003dd580003def20003e00e
0003e0e80003e25c0003e4500003e5660003e7140003e7a60003e8480003
e8d60003e9740003ea780003ea880003ebe20003ecf20003ed020003eddc
0003ef000003ef600003f0800003f14e0003f2300003f4180003f6260003
f8fc0003fb360003fcc40003feee0004009600040278000403d20004053e
000405c000040674000407620004080e0004087a000408fc000409d40004
0b1800040c8a00040d9800040da800040db800040e1a00040e7e00040edc
00040f6a00040ff6000410bc000411560004116600041176000412100004
12b0000412f600041368000413da000414280004145c000414ce0004153e
000415b2000416020004169600041726000417a400041828000418c40004
18f00004195e00041a1000041b1e00041b6a00041d3400041e2000041e30
00041e6600041eaa00041eee00041f3200041f6800041f9a00041fdc0004
20320004207e0004212c000421a40004222e000422a2000423080004238e
000423ee00042458000424d000042544000425a20004264c000426e80004
2758000427ea00042848000428ba0004296800042a1200042aac00042b20
00042ba600042c0e00042cbe00042d8000042e3000042ec600042f280004
2f9800042fee00043070000430f20004317c0004320c00043266000432d2
00043342000433b400043428000434b000043544000435ae000436280004
36a800043720000437ca00043866000438fa0004395c000439fe00043a7e
00043b1400043bbc00043c6a00043d0600043d6600043dbe00043e2a0004
3ed400043f8200044050000440fa00044160000441b80004421c000442ae
00044338000443ca0004442e000444960004450000044568000445d40004
4650000446dc00044774000447e000044848000448ac0004495c00044a20
00044ad200044b6400044bc600044c3600044caa00044d5200044dfc0004
4ec400044f6a00044fd200045066000450dc00045178000451fa00045278
000452e80004537a000453d600045438000454c200045542000455aa0004
56120004566a000456d800045740000457c20004583c000458ba0004593e
0004599a00045a0000045a6800045b0c00045bb200045c7400045d280004
5d8800045e0400045e6600045ef400045f90000460220004608c000460ee
00046180000461f6000462940004632c000463a000046414000464900004
64ee00046552000465d00004662e00046692000466f000046750000467b8
0004680c000468420004688e000468f2000469320004697c00046a260004
6ace00046b2400046b5c00046bac00046c5c00046d0a00046d5c00046db0
00046e0800046e5800046eb000046f1600046f7600047016000470ba0004
70f80004715e000471fc0004729000047322000473c8000473fa00047462
000474ca00047514000475e6000476680004771000047778000477b60004
7820000478c60004791c00047970000479dc00047a4000047ae000047b12
00047b4200047b9200047c2a00047c5400047c7e00047d4600047da00004
7e4200047eac00047f2800047fd80004804e000480be000481160004817c
000481de0004827e000482d6000483a20004840e00048468000484b80004
850e000485ae00048674000487c0000488dc00048940000489b400048cda
00048d6a00048dea00048e3800048fa0000490cc00049114000492100004
92d8000493b6000494a8000495620004963c000496a60004973e00049810
0004990400049976000499e400049a2800049b4c00049c4c00049d3e0004
9d8200049dbe00049ea800049faa0004a12c0004a2280004a32c0004a3c0
0004a4ac0004a50e0004a5840004a70e0004a7a00004a8d00004a9c00004
aae80004ac200004ace40004adcc0004ae8c0004afe00004b1920004b324
0004b45e0004b5c40004b69a0004b7580004b8160004b8dc0004ba340004
bb840004bb940004bba40004bbb40004bc500004bcee0004bd3c0004bd7a
0004bdc00004bdf00004bf400004c0dc0004c1ee0004c3140004c4a00004
c6120004c6ca0004c78a0004c87a0004c9760004cad60004cc000004cd92
0004cf040004d07c0004d1de0004d2de0004d4140004d5340004d6860004
d77a0004d8c00004d9020004d9420004da9e0004dbc00004dce00004de02
0004dfe60004e1620004e1ee0004e21e0004e2660004e2fa0004e3940004
e4f40004e5860004e5f60004e6440004e6960004e8480004ea860004ec36
0004ed600004ee560004ef5c0004f1320004f2e80004f3ea0004f5000004
f6c60004f8b40004fa5c0004fbd80004fd5e0004febe0004ff560004fff2
00050110000502360005035a000504a0000505dc00050730000507b60005
0834000508e8000509ae00050a5a00050b2400050c5600050df600050ef8
00050ff8000510080005103800051068000511dc0005134c0005140e0005
14d0000515b20005168a0005173e00051812000518bc0005198200051b04
00051cb400051d1e00051d4e00051d7600051daa00051dde00051dee0005
1dfe00051e2e00051e5400051e9000051ecc00051f0000051f3400051f68
00051f9e000520c4000520d4000521040005213400052168000521a00005
21d4000522080005223c00052270000522a4000522da0005230a00052340
00052374000523ae000523fe000524480005247c000524b0000524e60005
251c000525d0000525e0000526ea00052856000529c000052b6000052ca6
00052dfe00052ef000052ffa000530de000531de00053304000533f00005
34ac0005356e000535c60005366800053730000537a2000538300005386c
000538e8000539fc00053a3a00053ae800053b5400053b9000053bce0005
3c4000053d2c00053dac00053e0400053e3400053ee200053f2200053f94
0005403e0005407a000540f40005414c0005420600054236000542740005
4382000544140005444e000545440005463e000547c00005492400054a22
00054b0c00054bda00054c0200054c2a00054c5a00054c8a00054cb20005
4cda00054d0200054d2a00054d8400054dee00054e2000054e5000054e76
00054e9e00054ec600054ef000054f1a00054f4200054f6a00054f900005
4fbc000550460005506e000550f0000551180005513e000551640005518a
000551dc000552300005526200055292000552c400055300000553300005
53660005538c000553b2000553e60005541a0005545a000554a0000554c6
000554ec000555120005553800055562000555c600055612000556440005
5672000556a8000556e60005570e000557340005575a000557a4000557e6
0005580e000558340005586000055886000558e200055912000559420005
597200055998000559c2000559f200055a2200055a4800055a6e00055a94
00055aba00055ae000055b0600055b2e00055ba600055bd000055c3a0005
5c6200055d0600055d2e00055daa00055dde00055e2000055e5000055e80
00055eb000055ee000055f0c00055f3200055f7a00055fbc00055fe80005
6010000560400005607000056096000560bc000560e80005619c000561c4
00056274000562b6000562f8000563280005635c00056382000563aa0005
63d0000563f80005641e000564460005646e00056496000564bc000564e2
000565080005652e00056556000565de0005661200056678000566a80005
66d8000566fe000567240005675e000567a2000567d40005681000056840
00056870000568a4000568d8000569080005693e00056976000569a60005
69d4000569fe00056a2c00056a5200056a7800056aac00056af200056b2c
00056b6800056b9a00056bca00056c0600056c4200056c7e00056cc80005
6d1200056d4a00056d8800056dc400056e0400056e6000056ebc00056f18
00056f7400056fde0005704800057078000570b0000570f0000571340005
7178000571bc0005721800057274000572e00005734c000573b800057424
0005745400057484000574bc000574f40005753400057574000575b00005
75ec00057648000576a4000577080005776c000577d00005783400057892
000578f00005791e0005794c0005797e000579b0000579e200057a140005
7a5200057a9000057b0000057b7200057bd400057c3600057c9800057cfa
00057d5200057daa00057dda00057e0a00057e3e00057e7200057ea60005
7eda00057f3400057fa00005800a00058074000580dc0005814400058174
000581a4000581d80005820c0005824c0005828c000582c8000583040005
8358000583be000584120005846000058490000584c0000584f400058528
0005855c00058590000585c8000586000005865c000586b2000587120005
8772000587c80005881e00058878000588cc000589020005893400058972
000589a2000589d200058a1c00058a4a00058a7a00058ac000058af80005
8b3400058b7800058bac00058bdc00058c2600058c7a00058cd000058d26
00058d8a00058dee00058e4000058e9600058ee200058f3400058fa00005
900c00059078000590e400059160000591dc0005921e00059260000592a8
000592f00005934200059394000593e2000594300005949e0005950c0005
9582000595f80005966e000596e400059754000597c40005980600059848
0005988c000598d00005991400059958000599a2000599ec00059a5a0005
9ac200059b3400059ba600059c0e00059c7600059ce000059d4400059d7a
00059db000059e0000059e2e00059e7a00059eb600059f0c00059f3c0005
9f6c00059f9800059fc400059fea0005a03e0005a0ac0005a1000005a19c
0005a28e0005a2d00005a2f60005a3520005a3820005a3c40005a42a0005
a4980005a4fe0005a5680005a58e0005a6360005a6d40005a8140005a842
0005a8700005a8d40005a9380005a9660005a99a0005a9ca0005a9fa0005
aa6a0005aae00005ab880005ac260005ad620005ad920005adc20005ae28
0005ae8e0005aebe0005aeee0005af1e0005af540005af840005afb40005
b0000005b0600005b0bc0005b1960005b2700005b2e20005b3280005b34e
0005b3900005b3c00005b4020005b4360005b4a00005b4e60005b55c0005
b5820005b5f20005b6400005b7600005b9f20005bb860005bcde0005be90
0005c19e0005c4340005c61c0005c7ba0005ca120005cb540005cd6a0005
cdda0005ce420005ceb40005cf260005cfae0005d04c0005d22a0005d3d8
0005d5a40005d6a40005d8380005d9980005da5c0005db520005dbba0005
dc1c0005dc8a0005dcee0005ddc20005de2a0005def40005dfb20005e04e
0005e0b00005e1460005e1d80005e2740005e30c0005e3720005e3d00005
e43c0005e4a40005e5200005e5ce0005e6380005e6960005e6f80005e7aa
0005e82c0005e8ae0005e8e40005e9160005e9260005e9360005ea420005
eb6a0005ed8a0005eedc0005eeec0005efa60005f09c0005f1260005f136
0005f1b60005f22e0005f2500005f3120005f3220005f3320005f3420005
f3520005f44e0005f5940005f7540005f9680005fa5a0005fac00005fb24
0005fbe60005fbf60005fd900005fda00005fdb00005fe740005ff900006
006c0006007c0006008c0006009c000601f8000603e8000604f800060508
000605180006052800060538000605ee000605fe00060754000608900006
097e00060a8e00060b3200060ba000060c1000060d2a00060d8e00060dd2
00060e6000061020000610600006115400061220000612ec000613720006
1448000614e40006164c000616d000061764000618de00061a5000061bd8
00061cbc00061e8600061f700006205e0006218a000622b00006240a0006
2574000626b60006272e000628640006295c00062a5a00062b5600062c3c
00062cc600062d5000062e4200062efe00062fc00006306c000631620006
323e00063342000634820006356a000636ea000638180006391c00063966
000639d200063a9200063b6e00063cac00063d9400063ee00006400e0006
411800064178000642c40006436a0006442c000644d8000645200006471a
000647d0000649be00064b1a00064cb800064dba00064e2000064f680006
4fe000065170000651a6000651dc0006522e00065280000652b8000652f8
00065330000653700006549e00065500000655c000065674000657160006
57ae0006582a000659360006599400065ac200065b7200065c4000065c7a
00065cb600065d3e00065dfe00065efa00065fd000065ff60006605e0006
60f600066106000661160006612600066136000661460006615600066166
000661760006618600066196000661a6000661a60006630a0006631a0006
638e000664280006653600066690000667f0000669aa00066b7800066d4c
00066dd000066eee00067038000671e00006727c000672cc000673620006
7480000674d0000675600006768a0006769a000677c8000678d80006794e
000679a6000679fe00067a3a00067a7000067b0c00067b4c00067cce0006
7dac00067dec00067e5600067ec000067ef8000680400006813600068244
0006827c000682b4000682da0006830000068320000683400006835e0006
837c000683a8000683d40006841a0006846000068488000684b0000684ce
000684ec00068548000685a4000685c2000685e000068638000686900006
86d60006871c0006875200068788000687be000687f400068856000688c0
0006892000068980000689cc00068a9a00068ac200068aea00068b560006
8bc200068c1000068c5e00068d6400068d7400068dbe00068e0800068e50
00068e9800068ef600068f5800068fb20006900400069088000690f00006
9164000691d60006925c000692ca0006933c000693a2000693c8000693ee
00069412000694360006946a0006949e000694c4000694ea000695560006
95c20006962e00069696000696e80006973a00069790000697e20006980a
000698320006986400069892000698e80006993e0006999a000699f60006
9a1c00069a4200069a6e00069a9a00069aba00069ada00069af800069b16
00069bcc00069c8200069e5400069e6400069e8400069ea400069ec40006
9ee40006a0a80006a0b80006a1c60006a1d60006a2300006a28a0006a2e2
0006a33a0006a39e0006a4020006a4460006a48a0006a6200006a7b20006
a9020006aad00006ac4e0006ae080006af360006b02e0006b2a80006b42c
0006b6540006b7d00006b85c0006b9940006bbb80006bc400006bc500006
bdc00006beec0006c0540006c19a0006c2d00006c3ce0006c5a40006c758
0006c7e80006c92c0006ca180006cb660006cc540006ce400006cf5c0006
d07e0006d2520006d3bc0006d5600006d6660006d7b60006d90e0006db04
0006dce00006de440006df080006e03c0006e1060006e2100006e38a0006
e47e0006e5620006e7000006e8d20006e8e20006e9900006ea5a0006ea6a
0006eb320006ebcc0006ec180006ec280006eca20006ed760006edd20006
ee820006eec40006effa0006f0f00006f1ec0006f2ec0006f38a0006f4ce
0006f6160006f8360006f8cc0006f9cc0006faec0006fc340006fcf00006
fdca0006fea60006ff7200070074000702200007034000070466000704f4
0007058400070696000706f6000707e20007094e00070a8000070b7c0007
0c6800070d8e00070f06000710ac00071278000713a80007142a000714aa
00071534000715b40007163e000716fa000717a200071850000718f80007
1972000719f600071a7000071af400071baa00071c4c00071cec00071d8e
00071e0a00071e9000071f0c00071f920007204a000720f40007219a0007
2242000723320007242600072506000725ee000726e0000727d4000728ba
000729a600072b6e00072cd000072d7400072e8400072f4a00072f5a0007
304e000731a80007323c000732e6000733b0000734820007356400073600
000736ea0007381000073820000738da00073994000739a400073a4c0007
3af200073be000073cce00073daa00073e7c00074000000741a600074240
000742dc000743180007435600074392000743d00007442a000744820007
44dc00074540000745cc000747ca0007481e0007482e000748ba0007493e
000749c200074a7a00074b8a00074d4800074e6600074ef600074f9a0007
504a0007512c000751ae0007523c00075364000753ac00075404000754de
0007551a00075578000755b6000755e80007562c0007566e0007569e0007
57600007580c000758d0000759260007596e000759fe00075af000075b6a
00075c2200075cd400075d2400075dfc00075ea800075f1200075f220007
5f3200075f4200075f52000760400007605200076116000761d2000762ce
000764180007645c000764a2000764e20007652200076572000765c20007
66180007666e000766c40007673e0007684c0007697400076af400076c92
00076e5200076f4400077056000771a20007720000077302000773940007
73ee000774a4000774c20007753c0007755a0007757600077594000775a4
000775c4000775d4000775e4000775f40007760400077614000776240007
76340007764400077654000776640007777400077850000778de000779b4
00077a4200077a9400077b3a00077c4000077d0200077d4c00077df00007
7e6600077f6200077fbe000780a2000781820007825e0007826e0007827e
0007828e0007836e0007846200078526000785d00007864a000786ba0007
87980007880a0007883e000788be0007897c000789d000078ab000078b3a
00078c0200078cb000078df200078ef00007901e000790680007910c0007
91c2000792e20007938a00079410000794900007956000079664000796f0
000798580007990c000799e000079aec00079b1c00079b4c00079b7c0007
9bac00079be000079c1200079c3800079c6800079c9800079cc800079cfc
00079d2a00079d5800079d8600079db800079de800079e1800079e480007
9e7800079ea800079edc00079f0c00079f3c00079f6c00079fa000079fd0
0007a0000007a0300007a0560007a0860007a0b60007a0e60007a1160007
a1260007a1560007a1860007a1b60007a1dc0007a20c0007a23c0007a262
0007a2920007a2c20007a3620007a3900007a3be0007a3ec0007a4100007
a43e0007a4640007a4940007a4ba0007a4e80007a50e0007a53a0007a560
0007a5900007a5b60007a5e60007a6a60007a6d60007a7060007a73a0007
a76a0007a7900007a7c00007a7f00007a8200007a8460007a8760007a89c
0007a8c20007a8f20007a9600007a9900007a9c00007a9f00007aa240007
aa580007aa7e0007aaae0007aade0007ab0e0007ab420007ab720007aba6
0007abd60007ac060007ac360007ac660007acae0007acde0007ad0e0007
ad1e0007ad2e0007ad740007ae660007ae760007ae860007ae960007af6a
0007af7a0007af8a0007b06c0007b07c0007b08c0007b1100007b1200007
b16e0007b17e0007b2180007b2280007b2380007b3160007b3260007b3e6
0007b4c60007b4f60007b5260007b5560007b5840007b5b40007b5e40007
b6140007b6460007b67a0007b6ae0007b77a0007b7aa0007b87a0007b88a
0007b89a0007b8cc0007b8dc0007b9d20007ba940007bb3a0007bb6a0007
bb9a0007bc040007bc140007bcb80007bcc80007bcd80007bd720007bd82
0007bf2e0007c0200007c0980007c0c80007c1ba0007c24a0007c25a0007
c26a0007c27a0007c28a0007c29a0007c2aa0007c2ba0007c3680007c428
0007c4380007c4a00007c5260007c58a0007c6020007c69c0007c7520007
c7e80007c8b00007c98c0007ca860007cad00007caee0007cb0a0007cb26
0007cb420007cb600007cb7c0007cb9a0007cbb60007cbd60007cbf40007
cc120007cc300007cc4e0007cc7e0007ccae0007ccde0007cd0e0007cd42
0007cd760007cda60007cdd60007cdfc0007ce4e0007ce5e0007ce8e0007
cebe0007ceee0007cf220007cf520007cf820007cfb20007cfd80007d008
0007d0180007d04c0007d07c0007d0ac0007d0d20007d1020007d1320007
d1620007d1960007d1c60007d1f60007d2260007d25a0007d28e0007d2b4
0007d2e40007d3140007d3440007d3780007d3a80007d3d80007d3fe0007
d42e0007d43e0007d46e0007d4a20007d4b20007d4e60007d5160007d53a
0007d5660007d58c0007d6400007d6700007d6a00007d6d00007d7040007
d7340007d7640007d78a0007d7ba0007d7e00007d8100007d8400007d870
0007d8a00007d8d40007d9080007d9380007d9680007d98e0007d9fe0007
da240007da540007da780007daa40007daca0007dada0007dafe0007db22
0007db4e0007dbcc0007dbfc0007dc2c0007dc600007dc900007de200007
de460007de760007dea60007dec40007dee00007defc0007df1c0007e0d6
0007e2140007e34a0007e4be0007e5ca0007e70c0007e75c0007e7b40007
e8500007e91a0007e9c60007ea520007eaf60007eb720007ebf20007ec9a
0007ed680007ee200007eeb60007ef820007f0180007f0780007f1d20007
f2040007f2c80007f3b40007f43a0007f4ee0007f59e0007f5d40007f60c
0007f64e0007f6900007f6e40007f7380007f7960007f7f40007f8380007
f87c0007f8c00007f9040007f9480007f98c0007f9bc0007f9ec0007fa1c
0007fa4c0007fa7a0007faa80007fad40007fb000007fb2c0007fb580007
fb760007fb940007fbc00007fbec0007fc0a0007fc280007fc540007fc80
0007fcd40007fd280007fd560007fd840007fdb00007fddc0007fe080007
fe360007fe620007fe900007febc0007fee80007ff2e0007ff740007ffa0
0007ffcc0007fff800080024000800500008007c000800a8000800d40008
010c00080144000801700008019c000801ca000801f80008022400080250
0008041000080abc000812ba000816460008191600081a2a00081adc0008
1b2600081bee00081c3600081c4e00081d8800081da000081db800081dea
00081e1c00081e4e00081e8000081eb000081ee000081f1000081f3e0008
1f6a00081f9600081fb400081fd200081ffe0008202a0008204800082066
00082096000820c6000820e400082102000821140008215c000821dc0008
2234000822c4000822d40008235a0008242e00082508000826720008272a
0008295e00082a4600082b3000082c0800082d0a00082dfc00082f660008
30600008316a0008325c0008335a000834380008351a00083572000835d0
0008365e000836f0000837a60008383800083954000839a200083a1c0008
3adc00083b9e00083c8a00083d7600083e1600083ea800083f3e00084048
000840da000841b4000842200008428c000842de00084408000844b40008
44d8000847d400084be600084f540008511e00085288000852a0000852b8
000852d0000852e800085300000853120008532a0008533c000853a20008
53b2000853c4000853dc000853ee00085406000854160008542c0008543e
00085456000854680008548000085492000854a4000854b6000854c80008
54da0008551400085526000855380008554a0008555c000856660008578c
0008579c0008594c0008595c00085ae600085af600085b0e00085b260008
5b3e00085b5600085b6e00085b8600085d4a00085d5a00085d7000085efa
00085f0a0008602c000860440008605c000860740008608c000860ac0008
60cc000860ec0008610c000861240008613c000861540008616c0008618c
000861ac000861ca000861e80008620800086228000862460008625c0008
6388000863980008647a0008648a000864a2000864ba000864d2000864ea
000865020008651a00086538000865560008656e00086586000865a40008
65c2000866d0000866e0000866fa000867140008686400086874000868fe
000869e0000869f200086afe00086ca200086cb400086cdc00086d220008
6db600086dc800086dda00086dec00086e0600086e2000086e3a00086e4c
00086f3a00086f5400086f6e00086fb80008700200087014000870260008
703c0008705c000870740008708e000872320008737800087388000873a0
000873b8000873d0000873e8000873f8000874120008747c000875200008
75e6000876a6000876be000876d6000876ee00087706000877fe00087816
0008782e000879240008798c000879e800087a1c00087a8800087ad60008
7aee00087ba600087c3400087cd600087d6200087dee00087e8e00087ee2
00087f5e00088022000880c0000881440008817a00088212000882f20008
836e000883fa000885080008858000088630000886b20008879000088812
000888d200088942000889f200088a8a00088b6000088bf000088c600008
8ce000088dda00088e5400088f4000088f900008905a0008910a0008919e
0008927e000892d6000892f0000893240008937e000893c2000894400008
94820008953c000895d40008968e00089724000897c000089868000898c2
0008995200089a2000089abe00089b3a00089b7c00089c5000089d100008
9d8a00089e0600089ee800089f740008a0440008a0d00008a1340008a1bc
0008a25e0008a2da0008a3760008a4240008a4f40008a59a0008a6140008
a69c0008a7660008a7e20008a8ac0008a8ee0008a9b40008aa800008ab0a
0008ac020008ac860008ac960008acfc0008ae900008b0280008b0ec0008
b1d60008b2e80008b3de0008b4e60008b6360008b6fc0008b9080008b972
0008b9980008b9b80008b9d80008b9f60008ba140008ba6a0008ba820008
ba9a0008bab20008baca0008bae20008bafa0008bc0c0008bd5c0008be3a
0008bf540008c0080008c09a0008c0ba0008c0da0008c12a0008c13a0008
c1aa0008c21e0008c2d60008c3940008c43a0008c4e40008c5560008c5c8
0008c70a0008c78a0008c82e0008c9040008c9bc0008ca760008cbf00008
ccb80008ccd00008cce80008cd000008cd160008cd2e0008cd460008cd5c
0008cd720008ce0a0008cea20008cf2a0008cf7e0008cfca0008d03c0008
d0d40008d17e0008d2660008d3260008d3420008d3ba0008d3d80008d474
0008d4940008d4a40008d4b40008d53c0008d6d20008d7940008d8d60008
d96c0008da880008daea0008dbfa0008dc7c0008ddb20008de420008df88
0008e0380008e0dc0008e1440008e1b00008e22e0008e2ae0008e3440008
e3de0008e4220008e4600008e4a40008e4e00008e58a0008e63e0008e72a
0008e8020008e9000008e9ee0008ea880008eb440008ebfe0008ecc40008
ed960008ee7a0008ef820008f0360008f1740008f26e0008f2ee0008f378
0008f41c0008f4380008f4920008f4f60008f57e0008f5fc0008f6f00008
f7e60008f8840008f93c0008f9d80008fa940008fad20008fb1a0008fbc8
0008fbe40008fca20008fd600008fe260008fe420008fef00008ffac0008
fff6000900bc00090154000901cc000902a2000903840009044e000904e2
00090592000906020009067400090738000907fc0009081a000908480009
086c00090910000909ac00090a0600090a6600090ae600090b6200090ba6
00090c7e00090cd000090d5600090e0c00090eb800090f7c0009101c0009
1120000912140009128800091314000913da000914ba000915760009163c
000916da00091784000918600009198400091a0e00091a9400091b320009
1bee00091cd400091d6400091e5800091f4600091fb400091fc40009208a
0009213c00092190000921c600092266000922b60009238c0009239c0009
2466000924760009249c00092506000925ea0009268a000926cc0009274c
000927a2000927c8000928320009291400092a5a00092b0600092bbc0009
2c8400092c9400092dbe00092e7600092eb000092f4c0009304600093114
00093220000932e2000933ce000934a8000935b200093702000938080009
38f000093a2400093a8c00093b5e00093bbc00093c4e00093d0000093de0
00093e4a00093f2000093f3000093faa0009403a000940ec0009419e0009
4246000942560009433a000943e600094498000944e80009459a0009460c
0009467a000946f20009477c00094812000948d00009495c000949e00009
4a9800094b9c00094c7800094d0400094d1400094df200094e3800094e58
00094e7800094e9600094eb400094ed400094ef400094f1200094f300009
4f4800094f6000095054000950640009507c00095094000950ac000950c4
000950e2000951000009511000095120000951360009514c0009515c0009
516c000951840009519c000951ac000951bc000951d4000951ec000952b4
0009537c000953f4000955f4000956ea000957a200095888000958a20009
58bc00095b3000095e0a0009604200096240000963800009657e000965f8
0009667a00096724000969c800096bb800010000119702d2003c00940006
00020010002f00560000074b02c2000500020000005303ea000000030000
0000021a00000000000300000001000a021a000000030000000200080224
0000000300000003003e022c00000003000000040014023e000000030000
00050018026a00000003000000060018028200000003000000070064029a
00000003000000080030000e0000000300000009008a02fe000000030000
000d0e0403880001000000000000010d118c000100000000000100051299
00010000000000020004129e0001000000000003001f12a2000100000000
0004000a12ab0001000000000005000c12c10001000000000006000c12cd
0001000000000007003112d9000100000000000800181193000100000000
00090045130a000100000000000d0702134f0003000104030002000e1a51
0003000104030004001a1a5f0003000104050002000a1a79000300010405
000400161a83000300010406000200061a99000300010406000400121a9f
000300010407000200081ab1000300010407000400141ab9000300010408
0002000c1acd000300010408000400181ad90003000104090000021e1af1
0003000104090001000a021a000300010409000200080224000300010409
0003003e022c00030001040900040014023e00030001040900050018026a
000300010409000600180282000300010409000700621d0f000300010409
00080030000e0003000104090009008a02fe000300010409000d0e141d71
00030001040a0002000e2b8500030001040a0004001a2b9300030001040b
000200122bad00030001040b0004001e2bbf00030001040c000200082bdd
00030001040c000400142be500030001040e000200102bf900030001040e
0004001c2c09000300010410000200122c250003000104100004001e2c37
000300010413000200062c55000300010413000400122c5b000300010414
0002000e2c6d0003000104140004001a2c7b000300010415000200142c95
000300010415000400202ca90003000104160002000e2cc9000300010416
0004001a2cd7000300010419000200142cf1000300010419000400202d05
00030001041b0002000a2d2500030001041b000400162d2f00030001041d
000200061ab100030001041d000400121ab900030001041f0002000a2d45
00030001041f000400162d4f0003000104240002000c2d65000300010424
000400182d7100030001042a000200082d8900030001042a000400142d91
00030001042d0002000a2da500030001042d000400162daf00030001080a
0002000e2b8500030001080a0004001a2b930003000108160002000e2cc9
0003000108160004001a2cd7000300010c0a0002000e2b85000300010c0a
0004001a2b93000300010c0c000200082bdd000300010c0c000400142be5
00a90020003200300031003700200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e0020000d000d0048006500620072
006500770020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200063006f007000790072
0069006700680074002000a9002000320030003000330020002600200032
003000300037002c002000520061006c00700068002000480061006e0063
006f0063006b002000260020004a006f0068006e00200048007500640073
006f006e002e002000540068006900730020006c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020006900730020
006f00700065006e00200073006f007500720063006500200073006f0066
0074007700610072006500200075006e0064006500720020007400680065
0020004d004900540020004c006900630065006e00730065003b00200073
0065006500200065006d0062006500640064006500640020006c00690063
0065006e007300650020006400650073006300720069007000740069006f
006e00200066006f0072002000640065007400610069006c0073002e0041
007200690061006c0042006f006c0064004d006f006e006f007400790070
0065003a0041007200690061006c00200042006f006c006400200028004d
006900630072006f0073006f00660074002900560065007200730069006f
006e00200037002e003000300041007200690061006c002d0042006f006c
0064004d00540041007200690061006c0020002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e004d006f006e006f007400790070
006500200054007900700065002000440072006100770069006e00670020
004f006600660069006300650020002d00200052006f00620069006e0020
004e006900630068006f006c00610073002c002000500061007400720069
0063006900610020005300610075006e0064006500720073002000310039
00380032004d006900630072006f0073006f006600740020007300750070
0070006c00690065006400200066006f006e0074002e00200059006f0075
0020006d0061007900200075007300650020007400680069007300200066
006f006e007400200074006f0020006300720065006100740065002c0020
0064006900730070006c00610079002c00200061006e0064002000700072
0069006e007400200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
00650020006c006900630065006e007300650020007400650072006d0073
0020006f00720020007400650072006d00730020006f0066002000750073
0065002c0020006f006600200074006800650020004d006900630072006f
0073006f00660074002000700072006f0064007500630074002c00200073
006500720076006900630065002c0020006f007200200063006f006e0074
0065006e007400200069006e002000770068006900630068002000740068
0069007300200066006f006e0074002000770061007300200069006e0063
006c0075006400650064002e00200059006f00750020006d006100790020
006f006e006c0079002000280069002900200065006d0062006500640020
007400680069007300200066006f006e007400200069006e00200063006f
006e00740065006e00740020006100730020007000650072006d00690074
007400650064002000620079002000740068006500200065006d00620065
006400640069006e00670020007200650073007400720069006300740069
006f006e007300200069006e0063006c007500640065006400200069006e
0020007400680069007300200066006f006e0074003b00200061006e0064
00200028006900690029002000740065006d0070006f0072006100720069
006c007900200064006f0077006e006c006f006100640020007400680069
007300200066006f006e007400200074006f002000610020007000720069
006e0074006500720020006f00720020006f00740068006500720020006f
00750074007000750074002000640065007600690063006500200074006f
002000680065006c00700020007000720069006e007400200063006f006e
00740065006e0074002e00200041006e00790020006f0074006800650072
0020007500730065002000690073002000700072006f0068006900620069
007400650064002e000d000d00540068006500200066006f006c006c006f
00770069006e00670020006c006900630065006e00730065002c00200062
00610073006500640020006f006e00200074006800650020004d00490054
0020006c006900630065006e00730065002000280068007400740070003a
002f002f0065006e002e00770069006b006900700065006400690061002e
006f00720067002f00770069006b0069002f004d00490054005f004c0069
00630065006e007300650029002c0020006100700070006c006900650073
00200074006f00200074006800650020004f00700065006e005400790070
00650020004c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020201c004c00610079006f007500740020004c006f
006700690063201d0020006100730020006a006f0069006e0074006c0079
00200064006500760065006c006f00700065006400200062007900200052
0061006c00700068002000480061006e0063006f0063006b00200061006e
00640020004a006f0068006e00200048007500640073006f006e002e0020
000d000d005000650072006d0069007300730069006f006e002000690073
00200068006500720065006200790020006700720061006e007400650064
002c002000660072006500650020006f0066002000630068006100720067
0065002c00200074006f00200061006e007900200070006500720073006f
006e0020006f0062007400610069006e0069006e00670020006100200063
006f007000790020006f006600200074006800650020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200066006f00720020004200690062006c006900630061006c
002000480065006200720065007700200061006e00640020006100730073
006f00630069006100740065006400200064006f00630075006d0065006e
0074006100740069006f006e002000660069006c00650073002000280074
006800650020201c004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065201d0029002c00200074
006f0020006400650061006c00200069006e00200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
0074007700610072006500200077006900740068006f0075007400200072
00650073007400720069006300740069006f006e002c00200069006e0063
006c007500640069006e006700200077006900740068006f007500740020
006c0069006d00690074006100740069006f006e00200074006800650020
00720069006700680074007300200074006f0020007500730065002c0020
0063006f00700079002c0020006d006f0064006900660079002c0020006d
0065007200670065002c0020007000750062006c006900730068002c0020
0064006900730074007200690062007500740065002c0020007300750062
006c006900630065006e00730065002c00200061006e0064002f006f0072
002000730065006c006c00200063006f00700069006500730020006f0066
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065002c00200061006e
006400200074006f0020007000650072006d006900740020007000650072
0073006f006e007300200074006f002000770068006f006d002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f0066007400770061007200650020006900730020006600750072
006e0069007300680065006400200074006f00200064006f00200073006f
002c0020007300750062006a00650063007400200074006f002000740068
006500200066006f006c006c006f00770069006e006700200063006f006e
0064006900740069006f006e0073003a000d000d00540068006500200061
0062006f0076006500200063006f00700079007200690067006800740020
006e006f007400690063006500200061006e006400200074006800690073
0020007000650072006d0069007300730069006f006e0020006e006f0074
0069006300650020007300680061006c006c00200062006500200069006e
0063006c007500640065006400200069006e00200061006c006c00200063
006f00700069006500730020006f00720020007300750062007300740061
006e007400690061006c00200070006f007200740069006f006e00730020
006f006600200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f006600740077006100720065002e000d
000d00540048004500200053004f00460054005700410052004500200049
0053002000500052004f0056004900440045004400200027004100530020
004900530027002c00200057004900540048004f00550054002000570041
005200520041004e005400590020004f004600200041004e00590020004b
0049004e0044002c002000450058005000520045005300530020004f0052
00200049004d0050004c004900450044002c00200049004e0043004c0055
00440049004e004700200042005500540020004e004f00540020004c0049
004d004900540045004400200054004f0020005400480045002000570041
005200520041004e00540049004500530020004f00460020004d00450052
004300480041004e0054004100420049004c004900540059002c00200046
00490054004e00450053005300200046004f005200200041002000500041
00520054004900430055004c0041005200200050005500520050004f0053
004500200041004e00440020004e004f004e0049004e004600520049004e
00470045004d0045004e0054002e00200049004e0020004e004f00200045
00560045004e00540020005300480041004c004c00200054004800450020
0041005500540048004f005200530020004f005200200043004f00500059
0052004900470048005400200048004f004c004400450052005300200042
00450020004c004900410042004c004500200046004f005200200041004e
005900200043004c00410049004d002c002000440041004d004100470045
00530020004f00520020004f00540048004500520020004c004900410042
0049004c004900540059002c002000570048004500540048004500520020
0049004e00200041004e00200041004300540049004f004e0020004f0046
00200043004f004e00540052004100430054002c00200054004f00520054
0020004f00520020004f00540048004500520057004900530045002c0020
00410052004900530049004e0047002000460052004f004d002c0020004f
005500540020004f00460020004f005200200049004e00200043004f004e
004e0045004300540049004f004e00200057004900540048002000540048
004500200053004f0046005400570041005200450020004f005200200054
0048004500200055005300450020004f00520020004f0054004800450052
0020004400450041004c0049004e0047005300200049004e002000540048
004500200053004f004600540057004100520045002ea920323031372054
6865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c2052
69676874732052657365727665642e200d0d486562726577204f70656e54
797065204c61796f7574206c6f67696320636f7079726967687420a92032
303033202620323030372c2052616c70682048616e636f636b2026204a6f
686e20487564736f6e2e2054686973206c61796f7574206c6f6769632066
6f72204269626c6963616c20486562726577206973206f70656e20736f75
72636520736f66747761726520756e64657220746865204d4954204c6963
656e73653b2073656520656d626564646564206c6963656e736520646573
6372697074696f6e20666f722064657461696c732e417269616c426f6c64
4d6f6e6f747970653a417269616c20426f6c6420284d6963726f736f6674
2956657273696f6e20372e3030417269616c2d426f6c644d54417269616c
20697320612074726164656d61726b206f6620546865204d6f6e6f747970
6520436f72706f726174696f6e2e4d6f6e6f747970652054797065204472
6177696e67204f6666696365202d20526f62696e204e6963686f6c61732c
205061747269636961205361756e6465727320313938324d6963726f736f
667420737570706c69656420666f6e742e20596f75206d61792075736520
7468697320666f6e7420746f206372656174652c20646973706c61792c20
616e64207072696e7420636f6e74656e74206173207065726d6974746564
20627920746865206c6963656e7365207465726d73206f72207465726d73
206f66207573652c206f6620746865204d6963726f736f66742070726f64
7563742c20736572766963652c206f7220636f6e74656e7420696e207768
696368207468697320666f6e742077617320696e636c756465642e20596f
75206d6179206f6e6c792028692920656d626564207468697320666f6e74
20696e20636f6e74656e74206173207065726d6974746564206279207468
6520656d62656464696e67207265737472696374696f6e7320696e636c75
64656420696e207468697320666f6e743b20616e6420286969292074656d
706f726172696c7920646f776e6c6f6164207468697320666f6e7420746f
2061207072696e746572206f72206f74686572206f757470757420646576
69636520746f2068656c70207072696e7420636f6e74656e742e20416e79
206f74686572207573652069732070726f686962697465642e0d0d546865
20666f6c6c6f77696e67206c6963656e73652c206261736564206f6e2074
6865204d4954206c6963656e73652028687474703a2f2f656e2e77696b69
70656469612e6f72672f77696b692f4d49545f4c6963656e7365292c2061
70706c69657320746f20746865204f70656e54797065204c61796f757420
6c6f67696320666f72204269626c6963616c2048656272657720d24c6179
6f7574204c6f676963d3206173206a6f696e746c7920646576656c6f7065
642062792052616c70682048616e636f636b20616e64204a6f686e204875
64736f6e2e200d0d5065726d697373696f6e206973206865726562792067
72616e7465642c2066726565206f66206368617267652c20746f20616e79
20706572736f6e206f627461696e696e67206120636f7079206f66207468
65204f70656e54797065204c61796f7574206c6f67696320666f72204269
626c6963616c2048656272657720616e64206173736f6369617465642064
6f63756d656e746174696f6e2066696c6573202874686520d24c61796f75
74204c6f67696320536f667477617265d3292c20746f206465616c20696e
20746865204c61796f7574204c6f67696320536f66747761726520776974
686f7574207265737472696374696f6e2c20696e636c7564696e67207769
74686f7574206c696d69746174696f6e207468652072696768747320746f
207573652c20636f70792c206d6f646966792c206d657267652c20707562
6c6973682c20646973747269627574652c207375626c6963656e73652c20
616e642f6f722073656c6c20636f70696573206f6620746865204c61796f
7574204c6f67696320536f6674776172652c20616e6420746f207065726d
697420706572736f6e7320746f2077686f6d20746865204c61796f757420
4c6f67696320536f667477617265206973206675726e697368656420746f
20646f20736f2c207375626a65637420746f2074686520666f6c6c6f7769
6e6720636f6e646974696f6e733a0d0d5468652061626f766520636f7079
7269676874206e6f7469636520616e642074686973207065726d69737369
6f6e206e6f74696365207368616c6c20626520696e636c7564656420696e
20616c6c20636f70696573206f72207375627374616e7469616c20706f72
74696f6e73206f6620746865204c61796f7574204c6f67696320536f6674
776172652e0d0d54484520534f4654574152452049532050524f56494445
4420274153204953272c20574954484f55542057415252414e5459204f46
20414e59204b494e442c2045585052455353204f5220494d504c4945442c
20494e434c5544494e4720425554204e4f54204c494d4954454420544f20
5448452057415252414e54494553204f46204d45524348414e544142494c
4954592c204649544e45535320464f52204120504152544943554c415220
505552504f534520414e44204e4f4e494e4652494e47454d454e542e2049
4e204e4f204556454e54205348414c4c2054484520415554484f5253204f
5220434f5059524947485420484f4c44455253204245204c4941424c4520
464f5220414e5920434c41494d2c2044414d41474553204f52204f544845
52204c494142494c4954592c205748455448455220494e20414e20414354
494f4e204f4620434f4e54524143542c20544f5254204f52204f54484552
574953452c2041524953494e472046524f4d2c204f5554204f46204f5220
494e20434f4e4e454354494f4e20574954482054484520534f4654574152
45204f522054484520555345204f52204f54484552204445414c494e4753
20494e2054484520534f4654574152452e004e0065006700720065007400
610041007200690061006c0020004e006500670072006500740061007400
75010d006e00e90041007200690061006c002000740075010d006e00e900
66006500640041007200690061006c002000660065006400460065007400
740041007200690061006c00200046006500740074038803bd03c403bf03
bd03b10041007200690061006c0020038803bd03c403bf03bd03b100a900
20003200300031003700200054006800650020004d006f006e006f007400
790070006500200043006f00720070006f0072006100740069006f006e00
2e00200041006c006c002000520069006700680074007300200052006500
7300650072007600650064002e0020000d000a000d000a00480065006200
72006500770020004f00700065006e00540079007000650020004c006100
79006f007500740020006c006f00670069006300200063006f0070007900
720069006700680074002000a90020003200300030003300200026002000
32003000300037002c002000520061006c00700068002000480061006e00
63006f0063006b002000260020004a006f0068006e002000480075006400
73006f006e002e002000540068006900730020006c00610079006f007500
740020006c006f00670069006300200066006f0072002000420069006200
6c006900630061006c002000480065006200720065007700200069007300
20006f00700065006e00200073006f007500720063006500200073006f00
660074007700610072006500200075006e00640065007200200074006800
650020004d004900540020004c006900630065006e00730065003b002000
730065006500200065006d0062006500640064006500640020006c006900
630065006e00730065002000640065007300630072006900700074006900
6f006e00200066006f0072002000640065007400610069006c0073002e00
41007200690061006c002000690073002000610020007400720061006400
65006d00610072006b0020006f006600200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e002e004d006900630072006f0073006f006600740020007300
7500700070006c00690065006400200066006f006e0074002e0020005900
6f00750020006d0061007900200075007300650020007400680069007300
200066006f006e007400200074006f002000630072006500610074006500
2c00200064006900730070006c00610079002c00200061006e0064002000
7000720069006e007400200063006f006e00740065006e00740020006100
730020007000650072006d00690074007400650064002000620079002000
74006800650020006c006900630065006e00730065002000740065007200
6d00730020006f00720020007400650072006d00730020006f0066002000
7500730065002c0020006f006600200074006800650020004d0069006300
72006f0073006f00660074002000700072006f0064007500630074002c00
200073006500720076006900630065002c0020006f007200200063006f00
6e00740065006e007400200069006e002000770068006900630068002000
7400680069007300200066006f006e007400200077006100730020006900
6e0063006c0075006400650064002e00200059006f00750020006d006100
790020006f006e006c0079002000280069002900200065006d0062006500
640020007400680069007300200066006f006e007400200069006e002000
63006f006e00740065006e00740020006100730020007000650072006d00
690074007400650064002000620079002000740068006500200065006d00
620065006400640069006e00670020007200650073007400720069006300
740069006f006e007300200069006e0063006c0075006400650064002000
69006e0020007400680069007300200066006f006e0074003b0020006100
6e006400200028006900690029002000740065006d0070006f0072006100
720069006c007900200064006f0077006e006c006f006100640020007400
680069007300200066006f006e007400200074006f002000610020007000
720069006e0074006500720020006f00720020006f007400680065007200
20006f007500740070007500740020006400650076006900630065002000
74006f002000680065006c00700020007000720069006e00740020006300
6f006e00740065006e0074002e00200041006e00790020006f0074006800
6500720020007500730065002000690073002000700072006f0068006900
620069007400650064002e000d000a000d000a0054006800650020006600
6f006c006c006f00770069006e00670020006c006900630065006e007300
65002c0020006200610073006500640020006f006e002000740068006500
20004d004900540020006c006900630065006e0073006500200028006800
7400740070003a002f002f0065006e002e00770069006b00690070006500
6400690061002e006f00720067002f00770069006b0069002f004d004900
54005f004c006900630065006e007300650029002c002000610070007000
6c00690065007300200074006f00200074006800650020004f0070006500
6e00540079007000650020004c00610079006f007500740020006c006f00
670069006300200066006f00720020004200690062006c00690063006100
6c00200048006500620072006500770020201c004c00610079006f007500
740020004c006f006700690063201d0020006100730020006a006f006900
6e0074006c007900200064006500760065006c006f007000650064002000
620079002000520061006c00700068002000480061006e0063006f006300
6b00200061006e00640020004a006f0068006e0020004800750064007300
6f006e002e0020000d000a000d000a005000650072006d00690073007300
69006f006e00200069007300200068006500720065006200790020006700
720061006e007400650064002c002000660072006500650020006f006600
20006300680061007200670065002c00200074006f00200061006e007900
200070006500720073006f006e0020006f0062007400610069006e006900
6e00670020006100200063006f007000790020006f006600200074006800
650020004f00700065006e00540079007000650020004c00610079006f00
7500740020006c006f00670069006300200066006f007200200042006900
62006c006900630061006c00200048006500620072006500770020006100
6e00640020006100730073006f0063006900610074006500640020006400
6f00630075006d0065006e0074006100740069006f006e00200066006900
6c00650073002000280074006800650020201c004c00610079006f007500
740020004c006f00670069006300200053006f0066007400770061007200
65201d0029002c00200074006f0020006400650061006c00200069006e00
200074006800650020004c00610079006f007500740020004c006f006700
69006300200053006f006600740077006100720065002000770069007400
68006f007500740020007200650073007400720069006300740069006f00
6e002c00200069006e0063006c007500640069006e006700200077006900
740068006f007500740020006c0069006d00690074006100740069006f00
6e0020007400680065002000720069006700680074007300200074006f00
20007500730065002c00200063006f00700079002c0020006d006f006400
6900660079002c0020006d0065007200670065002c002000700075006200
6c006900730068002c002000640069007300740072006900620075007400
65002c0020007300750062006c006900630065006e00730065002c002000
61006e0064002f006f0072002000730065006c006c00200063006f007000
69006500730020006f006600200074006800650020004c00610079006f00
7500740020004c006f00670069006300200053006f006600740077006100
720065002c00200061006e006400200074006f0020007000650072006d00
69007400200070006500720073006f006e007300200074006f0020007700
68006f006d00200074006800650020004c00610079006f00750074002000
4c006f00670069006300200053006f006600740077006100720065002000
6900730020006600750072006e0069007300680065006400200074006f00
200064006f00200073006f002c0020007300750062006a00650063007400
200074006f002000740068006500200066006f006c006c006f0077006900
6e006700200063006f006e0064006900740069006f006e0073003a000d00
0a000d000a005400680065002000610062006f0076006500200063006f00
700079007200690067006800740020006e006f0074006900630065002000
61006e0064002000740068006900730020007000650072006d0069007300
730069006f006e0020006e006f0074006900630065002000730068006100
6c006c00200062006500200069006e0063006c0075006400650064002000
69006e00200061006c006c00200063006f00700069006500730020006f00
720020007300750062007300740061006e007400690061006c0020007000
6f007200740069006f006e00730020006f00660020007400680065002000
4c00610079006f007500740020004c006f00670069006300200053006f00
6600740077006100720065002e000d000a000d000a005400480045002000
53004f004600540057004100520045002000490053002000500052004f00
56004900440045004400200027004100530020004900530027002c002000
57004900540048004f00550054002000570041005200520041004e005400
590020004f004600200041004e00590020004b0049004e0044002c002000
450058005000520045005300530020004f005200200049004d0050004c00
4900450044002c00200049004e0043004c005500440049004e0047002000
42005500540020004e004f00540020004c0049004d004900540045004400
200054004f0020005400480045002000570041005200520041004e005400
49004500530020004f00460020004d00450052004300480041004e005400
4100420049004c004900540059002c0020004600490054004e0045005300
5300200046004f0052002000410020005000410052005400490043005500
4c0041005200200050005500520050004f0053004500200041004e004400
20004e004f004e0049004e004600520049004e00470045004d0045004e00
54002e00200049004e0020004e004f0020004500560045004e0054002000
5300480041004c004c002000540048004500200041005500540048004f00
5200530020004f005200200043004f005000590052004900470048005400
200048004f004c00440045005200530020004200450020004c0049004100
42004c004500200046004f005200200041004e005900200043004c004100
49004d002c002000440041004d00410047004500530020004f0052002000
4f00540048004500520020004c0049004100420049004c00490054005900
2c0020005700480045005400480045005200200049004e00200041004e00
200041004300540049004f004e0020004f004600200043004f004e005400
52004100430054002c00200054004f005200540020004f00520020004f00
540048004500520057004900530045002c00200041005200490053004900
4e0047002000460052004f004d002c0020004f005500540020004f004600
20004f005200200049004e00200043004f004e004e004500430054004900
4f004e00200057004900540048002000540048004500200053004f004600
5400570041005200450020004f0052002000540048004500200055005300
450020004f00520020004f00540048004500520020004400450041004c00
49004e0047005300200049004e002000540048004500200053004f004600
540057004100520045002e004e0065006700720069007400610041007200
690061006c0020004e006500670072006900740061004c00690068006100
76006f0069007400750041007200690061006c0020004c00690068006100
76006f00690074007500470072006100730041007200690061006c002000
47007200610073004600e9006c006b00f6007600e9007200410072006900
61006c0020004600e9006c006b00f6007600e90072004700720061007300
73006500740074006f0041007200690061006c0020004700720061007300
73006500740074006f0056006500740041007200690061006c0020005600
65007400480061006c00760066006500740041007200690061006c002000
480061006c00760066006500740050006f00670072007500620069006f00
6e00790041007200690061006c00200050006f0067007200750062006900
6f006e0079004e00650067007200690074006f0041007200690061006c00
20004e00650067007200690074006f041f043e043b044304360438044004
3d044b04390041007200690061006c0020041f043e043b04430436043804
40043d044b043900540075010d006e00e90041007200690061006c002000
540075010d006e00e9004b0061006c0131006e0041007200690061006c00
20004b0061006c0131006e004b007200650070006b006f00410072006900
61006c0020004b007200650070006b006f011100e20323006d0041007200
690061006c0020011100e20323006d004c006f0064006900610041007200
690061006c0020004c006f0064006900610000>
<410c005403af03af03af0235001d001f03ae03ad003c001f03adb3061d1f
80410d03ac00af03ac0002001003ac002003ac00a003ac0003004003acb3
070d3240b803acb312143240b803acb2162b32b9ffc003acb23a3340b803
acb32d943280bc03ab005f0033ffc003abb2553340b803abb340443240b8
03abb3333b3240b803abb32f313240b803abb2083340b803abb30714321f
411a03ab002f03ab0002000f03ab002f03ab004f03ab008f03ab009f03ab
00bf03ab0006001003ab00df03ab00ff03ab000303a803a2b2461f40b803
a5b208330f411403a50001004003a500cf03a500ff03a50003002003a500
af03a500ef03a500ff03a50004ffc003a3b3090c3240b803a3b208330f41
1b03a30001000f03a3001003a3008003a300af03a300cf03a30005006f03
a3009f03a300ff03a30003009f03a200af03a2000203a203a1b2101f1041
0a039e007f039e0002039a000f0101001fffc00398b310143240b80399b3
0f1332404110039500500395000200b0034d00c0034d0002006f0391007f
03910002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020038b
0080038b000300a0038b00010020038b0040038b0002ffc0038bb3131632
40b80383b20f1132b9ffc0037bb2303432b9ffc0037bb310183250411403
7800010365036e0023001f037e036e001e001f0363036e001d001f036203
64000d001fffc00340b30f1032804110033f0001033f03150029001f0341
03160032001f0344031a001b001fffc00375b20e1132b9ffc00375b2282a
32410a034303180032001f030f030d0034001f03080307b2321f20bb0340
000100400388b3090b3240b80388b2101532bd038503070014001f038003
07b2171f0fbd030a002f030a0002ffc00354b3090d3290410c035400a003
540002001f036e0001009f036e00010040036eb2090b3241110345031c00
16001f036b031d0015001f0346031e0015001f03a703a10046001f039db3
261c1fc0bb0393000100400392b3090d3240b8033eb2083340b8033eb30d
0e32c04109033e000100b0038e00c0038e0002ffc00390b3263832004126
03280030032800020020037f0030037f00020010038a0030038a0050038a
006f038a007f038a009f038a000600000389003003890002002f037a0070
037700900377009f037a0004ffc00315b20f1032b9ffc00315b2242832b9
03190318b2321f10bb031a0001ffc0031ab3090e3240b80318b2121332b9
ffc00318b30c0e323fbd0373004f0373000200400374b31718326fbb032a
00010040032cb3181b3240b80370b2090c32bd031703160032001fffc003
16b20e1132bd031c031e0016001f031d031eb2151fb0411f031e0001000f
031f000102ca02d00015001f02d302d5000d001f02cf02d0000d001f02cb
02d0000d001f02cd02d0000d001f02ce02d0000d001fffc002d0b3090c32
40b802d2b3090c32e0411c02e50001005f02dd009f02e5000202bb02c300
30001f02da02b80032001f02d902b9003f001f02d802b80064001f02b902
b80033001f02bab221c81fb802b8b321c81f40b8039bb20d1632b9ffc002
c3b22b2f32b9ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3b212
1632412502c202c1001c001f02d702c10024001f02c102c00022001f02bf
02c00018001f02c0027400c8001f02b50235003b001f02b40235003b001f
02c402bc001e001f02b702b60038001f02b3b20ec81fb802b0b207c81fb8
02afb206c81fb802aeb200c81fb802afb2502f1fbc02ae02ab001a001f02
adb2261a1fb802a8b326241f0fbb0235000102a50274b21d1f12410a02a1
015801f4001f02a000d801f4001f001202a2b237c81fb80290b2bc201fb9
029002904018374025402d40a6033025302d30a6032025202d203720a620
4110028e0005009f028b0001028b028b0037002002890030028900400289
00900289b20437b041fd027400c0027400020080027400a0027400020060
0274007002740002000002740010027400020080027400f002740002003f
0285004f028500020090027e0090027f009002800090028100040090027a
0090027b0090027c0090027d000400900274009002750090027700030070
027e0070027f007002800070028100040070027a0070027b0070027c0070
027d000400700274007002750070027700030060027e0060027f00600280
0060028100040060027a0060027b0060027c0060027d0004006002740060
02750060027700030050027e0050027f005002800050028100040050027a
0050027b0050027c0050027d000400500274005002750050027700030040
027e0040027f004002800040028100040040027a0040027b0040027c0040
027d000400400274004002750040027700030030027e0030027f00300280
0030028100040030027a0030027b0030027c0030027d0004003002740030
02750030027700030020027e0020027f002002800020028100040020027a
0020027b0020027c0020027d000400200274002002750020027700030010
027e0010027f001002800010028100040010027a0010027b0010027c0010
027d0004001002740010027500100277000300e0027e00e0027f00e00280
00e00281000400e0027a00e0027b00e0027c00e0027d000400e0027400e0
027500e00277b103d041c5027e00d0027f00d0028000d00281000400d002
7a00d0027b00d0027c00d0027d000400d0027400d0027500d00277000300
30027400400274000200c0027e00c0027f00c0028000c00281000400c002
7a00c0027b00c0027c00c0027d000400c0027400c0027500c00277000300
b0027e00b0027f00b0028000b00281000400b0027a00b0027b00b0027c00
b0027d000400b0027400b0027500b00277000300a0027e00a0027f00a002
8000a00281000400a0027a00a0027b00a0027c00a0027d000400a0027400
a0027500a0027700030090027e0090027f00900280009002810004009002
7a0090027b0090027c0090027d0004009002740090027500900277000300
20027e0020027f002002800020028100040020027a0020027b0020027c00
20027d00040020027400200275002002770003028101580801001f028001
290801001f027f00ec0801001f027e00d80801001f027d00b10801001f02
7c00a60801001f027b00820801001f027a00370801001f02770026080100
1f027500200801001f0274001f0801b21f370f41160235004f0235005f02
35006f0235009f023500af023500bf0235000700af023500cf023500df02
3500ff02354022040f074f079f07af07bf0705af07e007020f064f069f06
af06bf0605af06e0060220411b020d0001005f02350001008f0235000100
7f023500ef02350002002f0235003f02350002003f0234004f0234000202
350235023402344011ed20ef2a01cf2a01bf2a01af2a018f2a0141090247
0104001e001f022000370201001f0158400c263e1fd8263e1f3726273e1f
b8028eb6ec171fb226361fb801bcb226361fb80129402b26361fec26361f
b126361fa626361f8226361f3726361f3226361f2d26361f2526361f1f26
361f37262a1fb801584022263e1fd8263e1fbc263e1f27263e1f21263e1f
20263e1f3700161600000012110840b9020d01a6b3c50d0009b801bcb227
281fb801bbb227301fb801b8b2274f1fb801b7b227621f410901b6002701
01001f01b5002002ab001f01afb21fe41fb801adb21fe41fb801acb21fbb
1fb801a8b21f341fb8015db2272e1fb8015bb227cd1f410d0155001f0401
001f0154001f0401001f0153001f0201001f0152b21f561fb80151b21f29
1fb8012bb227261f410d012a00270125001f0129015800e4001f0125001f
0401001f0124b21fe41fb80123b21f3b1fb80122b21f391f410d01080027
0801001f0106002d0101001f0105001f0101001f0103b31fbb1fefb90158
0401400b1fed1f931fec1fe41feb1fb80201b21fd920b80401b21fcf25b8
0156400a1fbc2d9e1fbb1f411fb2410a01580401001f00b101580401001f
00b001580401b51fa625891f9bb901580125b61f991f2e1f8e2db80801b5
1f8d1f291f89b901580401b21f8220b802ab40131f801f301f742de41f73
1f4a1f611f521f5d25b802abb21f5c1fbc0801001f0059015802abb61f50
25891f491fb80125b21f4725b80401400b1f461f791f401f271f3920bc02
ab001f003801580401b21f372dbc0125001f003201580125b61f2c1f341f
2a25b80801b21f5537b80111402a07f00790075b0742073b07230722071e
071d071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b10100858d1bb900010119858d5959001816763f183f
123e113946443e113946443e113946443e113946443e11394660443e1139
4660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1db096
4b5358b0aa1d59b0324b5358b0ff1d594bb08153205c58b9020f020d4544
b9020e020d45445958b90470020f455258b9020f04704459594bb0e45320
5c58b90020020e4544b90027020e45445958b908420020455258b9002008
424459594bb8012553205c58b90026020f4544b90021020f45445958b90a
0d0026455258b900260a0d4459594bb8040153205c58b1d8204544b12020
45445958b9250000d8455258b900d825004459594bb8040153205c58b901
5800264544b1262645445958b923200158455258b9015823204459594bb0
2953205c58b11f1f4544b12d1f45445958b9010d001f455258b9001f010d
4459594bb02f53205c58b11f1f4544b1251f45445958b90135001f455258
b9001f01354459594bb8030153205c58b11f1f4544b11f1f45445958b914
28001f455258b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec3456523
456023456560234560b08b766818b080622020b17e754565234520b00326
6062636820b003266165b075236544b07e234420b131c34565234520b003
266062636820b003266165b0c3236544b0312344b100c3455458b1c34065
44b23140314523614459b33f3c5841456523456023456560234560b08976
6818b080622020b1583c4565234520b003266062636820b003266165b03c
236544b058234420b13f414565234520b003266062636820b003266165b0
41236544b03f2344b10041455458b141406544b23f403f45236144594569
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b2b2b
2b2b2b2b2b00b01243584bb035514bb021535a58b1262645b04061445959
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b040614418
004569444569447373737473737374737473742b2b2b2b2b2b2b2b2b2b2b
2b0073737373737373737373737373737373737373737373747474747474
7474747474747474747474747474747575757374757575752b7300004bb0
2a534bb036515a58b1070745b040604459004bb02e534bb036515a58b103
0345b0406044b1090945b8ffc06044592b4569440174007373732b456944
2b012b435c58400a0006000702a006a00702b9ffc00274b31a1d326fbd02
77007f02770002ffc00277b22f3132b9ffc00277b322253240b80274b32f
353240b80274b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ffc0b3
251a1d32b8ffc040112d1a1d329025902d9037a025a02da03706b8ffc0b6
a61a1d321fa61fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b7374
59002b2b435c58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b592b73
012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b73742b2b2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b2b2b
73737373732b73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b752b
2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b73
2b737374752b2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b747500
2b2b2b4569442b00000000>
[16305 15865 16201 16381 16253 16357 16217 16309 16361 16345 16033 16193 16145
16129 16109 15909 16285 16093 15697 16253 16277 16333 16237 15037 16257 16269
15921 15345 16101 16205 16369 16109 16373 15969 16289 16237 15897 20773 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
4 434 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>EAAAAA+Arial-BoldMT AddT42Char 
4 1212 70 <00010055ffe8043f043e001900e14051580f59125916680f691269167d18
79199702970cc610c618d710d618e906e908e913e915f80613381338154a
124a164618590c690c073a1237163718037705770f8705860f8919a812a7
16b912b616090eb8ffc0b3181b340eb8ffc0b51214340e330db8ffc0b319
1e340db8ffc0b30f11340dba0104000a02744012110b0040181b34004012
1434003390010101ba0101000402744020170701401214340121002f0d40
1214340d214f0e010e1a1b072114191a5841182b4e10f44ded4e10f65d4d
ed2bf4ed2b003ffdf45de42b2b3ffdf42b2be42b2b3130005d7101715d01
052626232206151416333236370506062322001110003332160431feeb0e
634f697d7f6b50661501142bf4cde9feeb0116edc2e502ec32535491aabd
9c5b6f2fbec20126010401070125a700>EAAAAA+Arial-BoldMT AddT42Char 
4 2548 74 <00020054fe510460043e0023002f014e4062771d871d02120c0d7031860d
8031042001230223033001330233034001430243035b0f59145925562956
2b592f6b0ff811f813123b0d33163b28332c4b0d44164b28442cf00cfd17
0a8e0c010c0b0c0d0b2a0c0d270e1617152d0d0c171604182401b8ffc0b5
191b34013300b8ffc0b30e113e00b8ffc0b30b0c3e00b8ffc0b3282a3400
b8ffc0b323253400b8ffc0b331343400b8ffc04009151b34600001005f05
b80274b21f0f27b80274b20e0a2db80274400b15071819062a290b261a18
b80129400919191a1a8f31013101b801b8400a00332421121930583c182b
4e10f44dedf4ed4e1071f63c4d10ed10fde4003f3c3fed3fed3ffdf4722b
2b2b2b2b2bb10602435458b90000ffc0b30e113400b8ffc0b2090c342b2b
59e42b01111217390011123939111239390708103c313000715d015d7143
58400d690f691469256729662b692f065d59005d17051617163332373637
3635350623222726351000333217352111140e0223202635341314163332
36353426232206790141081d28566e3725130d7ec0d67d620101bfc58001
073e70bb8ffef2e2fc8360678e88686583462738151e211631235e9bacb5
8fd5010b011aad95fc47bcba6a3cb98e0e0283a99da19ea5a09d>EAAAAA+Arial-BoldMT AddT42Char 
4 3024 75 <000100920000045905ba001600b2402b0f011f0139013302331042014211
de01f9010907051605240258116811050101021314111213031402010fb8
0274401d0307090a0a14150a1600000b0a26080940202434af0901ff0901
091a18b8ffc040162224349018a018027018f01802ef1801180014261615
b8ffc0400f202434a01501f015011519173f3c182b4e10f471722b3c4dfd
3c4e105d71722bf671722b3c4dfd3c003f3c3f3c3c103c3fed3939111739
030e103c083c3130015d005d01113633321e021511211134262623220606
1511211101ab88bd619c4f1dfee720513d466e33fee705bafde59f487088
8ffd910231a75a35448986fdec05ba00>EAAAAA+Arial-BoldMT AddT42Char 
4 3280 76 <00020093000001ac05ba000300070077b90009ffc0403f110a3f40095009
028009b009c009d009ef09051f0960097f09a009b0090503060700050403
0f00014000d000e00003005d02010006050607040a0207260104b8ffc040
092124340419083f3c182b4e10f42b3c4dfd3c003f3c3f3c3f3cfd5d713c
0305103c3c103c3c313001715d722b1311211101112111930119fee70119
04b60104fefcfb4a0426fbda>EAAAAA+Arial-BoldMT AddT42Char 
4 4066 80 <0001007e00000698043e0027013bb90029ffc0405d110a3f0506060c1506
160c340334083418342344024508451844230c20032f295309602980299f
29a406a707a60cb506b50cb029d029e0290e00292f2950299f29bf29df29
0629401a1c343f2950298029d029e02905072104071a1d16b80274b20a07
21b80274401e0407101111271b1c1c26270a0100060f10261211405a3560
11016f110111b80246400f1a1b261d1c405a356f1c01601c011cb80246b4
2526262701b80129b2000027b8ffc0b30f093f27b8ffc04036110a3f2740
5a352740413527403c35274024273427403a3d342f27cf27df27030f271f
27802703002720273027ff2704271928e33c182b4e10f45d71722b2b2b2b
2b2b2b3c4d10ed10fd3cf65d712b3cfd3cf6715d2b3cfd3c003f3c3f3c3c
103c103c103c3fed3fed0111123900111239313001722b715d005d012b13
211536333216173636333216171615112111342726232206061511211134
2626232206061511217e01038bc066963046a25c75a2281dfee71d27513b
682efee71e3f3641682dfee7042691a9545555545f5c4498fd59025f9e2e
3c488b96fe0202469b5a2c468499fdfc>EAAAAA+Arial-BoldMT AddT42Char 
4 4502 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>EAAAAA+Arial-BoldMT AddT42Char 
4 6552 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>EAAAAA+Arial-BoldMT AddT42Char 
3 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>EAAAAA+Arial-BoldMT AddT42Char 
EAAAAA+Arial-BoldMT /CharStrings get begin
/a 68 def
/c 70 def
/g 74 def
/h 75 def
/i 76 def
/m 80 def
/n 81 def
/t 87 def
end
EAAAAA+Arial-BoldMT /Encoding get
dup 97 /a put
dup 99 /c put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/VYBLNF+Arial-BoldMT /EAAAAA+Arial-BoldMT findfont ct_VMDictPut
/VYBLNF+Arial-BoldMT*1 
[97{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /h /i 
3{/.notdef}rp /m /n 5{/.notdef}rp /t 139{/.notdef}rp]
VYBLNF+Arial-BoldMT nf
VYBLNF+Arial-BoldMT*1 [14 0 0 -14 0 0 ]msf
547.496 253.154 mo
(matching)
[12.4461 7.784 4.66193 7.78394 8.55396 3.89197 8.55389 0 ]xsh
VYBLNE+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf
609.725 253.154 mo
( pattern of  this extension phase.)
[3.89197 8.55396 7.78394 4.66193 4.66193 7.78394 5.44617 8.55383 3.89203 8.55389 4.66187 3.89203 
3.89203 4.66187 8.55389 3.89203 7.78394 3.89203 7.784 7.784 4.66193 7.78394 8.55396 7.78394 
3.89203 8.55389 8.55389 3.89203 8.55383 8.55396 7.78394 7.78406 7.78394 0 ]xsh
905.688 228.755 mo
(For elimination phase, we invoke )
[8.55389 8.55389 5.44611 3.89197 7.78406 3.89197 3.89197 12.4462 3.89197 8.55389 7.784 4.66187 
3.89203 8.55389 8.55389 3.89203 8.55383 8.55396 7.78394 7.78406 7.78394 3.89197 3.89209 10.892 
7.78406 3.89197 3.89197 8.55396 7.78394 8.55396 7.78394 7.78394 0 ]xsh
926.31 245.751 mo
(the elimination GPU kernel)
[4.66187 8.55396 7.78394 3.89203 7.784 3.89197 3.89203 12.4461 3.89197 8.55396 7.78394 4.66193 
3.89203 8.55383 8.55396 3.89197 10.892 9.33813 10.108 3.89197 7.78394 7.78406 5.44617 8.55383 
7.78406 0 ]xsh
1 lw
802.698 174.634 mo
753.884 196.096 li
0 0 0 rgb
@
.2 setflat
746.561 199.316 mo
755.092 198.842 li
752.677 193.35 li
cp
f
.6 setflat
.2 setflat
0 lc
0 lj
746.561 199.316 mo
755.092 198.842 li
752.677 193.35 li
cp
@
.6 setflat
1 lc
1 lj
868.19 174.634 mo
949.461 206.173 li
@
.2 setflat
956.919 209.068 mo
950.546 203.377 li
948.376 208.97 li
cp
f
.6 setflat
.2 setflat
0 lc
0 lj
956.919 209.068 mo
950.546 203.377 li
948.376 208.97 li
cp
@
.6 setflat
3 lw
1 lc
1 lj
512.527 140.581 mo
1134.38 140.581 li
1134.38 270.081 li
512.527 270.081 li
cp
0 .59 1 rgb
@
.2 setflat
219.102 75.68 mo
219.102 38.197 li
232.986 38.197 li
232.986 18.438 li
246.318 56.938 li
232.986 95.438 li
232.986 75.68 li
cp
1 1 1 rgb
f
.6 setflat
219.102 75.68 mo
219.102 38.197 li
232.986 38.197 li
232.986 18.438 li
246.318 56.938 li
232.986 95.438 li
232.986 75.68 li
cp
0 .59 1 rgb
@
.2 setflat
510.562 75.68 mo
510.562 38.197 li
524.445 38.197 li
524.445 18.438 li
537.778 56.938 li
524.445 95.438 li
524.445 75.68 li
cp
1 1 1 rgb
f
.6 setflat
510.562 75.68 mo
510.562 38.197 li
524.445 38.197 li
524.445 18.438 li
537.778 56.938 li
524.445 95.438 li
524.445 75.68 li
cp
0 .59 1 rgb
@
.2 setflat
225.922 224.072 mo
225.922 186.589 li
239.806 186.589 li
239.806 166.83 li
253.138 205.33 li
239.806 243.83 li
239.806 224.072 li
cp
1 1 1 rgb
f
.6 setflat
225.922 224.072 mo
225.922 186.589 li
239.806 186.589 li
239.806 166.83 li
253.138 205.33 li
239.806 243.83 li
239.806 224.072 li
cp
0 .59 1 rgb
@
.2 setflat
476.015 224.072 mo
476.015 186.589 li
489.899 186.589 li
489.899 166.83 li
503.231 205.33 li
489.899 243.83 li
489.899 224.072 li
cp
1 1 1 rgb
f
.6 setflat
476.015 224.072 mo
476.015 186.589 li
489.899 186.589 li
489.899 166.83 li
503.231 205.33 li
489.899 243.83 li
489.899 224.072 li
cp
0 .59 1 rgb
@
.2 setflat
785.757 108.696 mo
823.24 108.696 li
823.24 122.579 li
842.999 122.579 li
804.499 135.912 li
765.999 122.579 li
785.757 122.579 li
cp
1 1 1 rgb
f
.6 setflat
785.757 108.696 mo
823.24 108.696 li
823.24 122.58 li
842.999 122.58 li
804.499 135.912 li
765.999 122.58 li
785.757 122.58 li
cp
0 .59 1 rgb
@
.2 setflat
1070.32 109.442 mo
1107.81 109.442 li
1107.81 123.326 li
1127.57 123.326 li
1089.07 136.658 li
1050.57 123.326 li
1070.32 123.326 li
cp
1 1 1 rgb
f
.6 setflat
1070.32 109.442 mo
1107.81 109.442 li
1107.81 123.325 li
1127.57 123.325 li
1089.07 136.658 li
1050.57 123.325 li
1070.32 123.325 li
cp
0 .59 1 rgb
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 ]]
] del_res
/VYBLNE+Helvetica-Bold*1 uf
/VYBLNE+Helvetica-Bold uf
/GDAAAA+Helvetica-Bold uf
/VYBLNF+Arial-BoldMT*1 uf
/VYBLNF+Arial-BoldMT uf
/EAAAAA+Arial-BoldMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
